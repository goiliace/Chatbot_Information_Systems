"TỔ CHỨC PHIÊN GIAO LƯU TƯƠI MỚI Carters Tái Thiết Kế Quy Trình Kinh Doanh"
"Carters đã xây dựng một doanh nghiệp lớn chuyên cung cấp trang phục cho trẻ nhỏ và có thể bạn đã từng sử dụng một số sản phẩm của họ khi còn nhỏ. Công ty này là nhà tiếp thị thương hiệu lớn nhất tại Mỹ chuyên về trang phục dành riêng cho trẻ sơ sinh và trẻ nhỏ, bao gồm cả thương hiệu OshKosh Bgosh. Sản phẩm của Carters được bán trực tuyến, tại hơn 1,000 cửa hàng công ty ở Hoa Kỳ và Canada, cũng như tại 18,000 cửa hàng bách hóa và cửa hàng chuyên biệt. Công ty có doanh thu hàng năm vượt quá 3 tỷ đô la và có trụ sở tại Atlanta, Georgia. Các hệ thống tài chính của Carters xử lý hàng trăm nghìn giao dịch mỗi ngày. Đến gần đây, các hệ thống mà Carters sử dụng để xử lý các giao dịch này chủ yếu dựa vào thủ công và giấy tờ, không thể theo kịp sự phát triển của công ty cũng như môi trường kinh doanh ngày càng số hóa. Trong nhiều năm, công ty đã phụ thuộc vào hơn 20 hệ thống tài chính cũ, một số trong đó là do tự phát triển và đã lỗi thời. Nếu các hệ thống không tích hợp với nhau như cần thiết, Carters phải sử dụng các quy trình thủ công để duy trì mọi thứ hoạt động cùng nhau. Điều này tạo ra các nút thắt, làm chậm quá trình xử lý và cũng làm tăng khả năng xảy ra lỗi do con người. Ví dụ, việc quản lý chi phí hoàn trả yêu cầu rất nhiều nhập dữ liệu thủ công và tìm kiếm bảng tính, email, thư mục và fax từ các hệ thống khác nhau để đối chiếu một chi phí hoàn trả cụ thể với sổ cái thích hợp. (Chi phí hoàn trả là việc trả lại tiền cho người mua nếu họ tranh chấp giao dịch mua hàng.) Ban"
"thư mục và fax từ các hệ thống khác nhau để đối chiếu một chi phí hoàn trả cụ thể với sổ cái thích hợp. (Chi phí hoàn trả là việc trả lại tiền cho người mua nếu họ tranh chấp giao dịch mua hàng.) Ban lãnh đạo Carters muốn chuyển đổi vai trò của bộ phận tài chính từ việc tập trung vào xử lý giao dịch sang phân tích dữ liệu tài chính và hướng dẫn quyết định."
"Để đạt được mục tiêu này, công ty cần cải tiến quy trình trong cả quy trình tài chính và công nghệ. Điều này có nghĩa là đơn giản hóa và tinh gọn các quy trình tài chính để bộ phận tài chính có nhiều thời gian hơn cho công việc phân tích và báo cáo. Để đạt được điều này, ngoài việc thay thế các hệ thống cũ bằng công nghệ hiện đại hơn, bao gồm cả hệ thống lập kế hoạch nguồn lực doanh nghiệp (ERP) trung tâm, dự án còn tạo cơ hội để hiện đại hóa các quy trình tài chính. Carters đã chọn phần mềm SAP Business Suite 4 SAP HANA (còn được gọi là SAP S/4HANA) cho mục đích này và làm việc với các chuyên gia tư vấn của Deloitte để hỗ trợ tích hợp và triển khai hệ thống. SAP S/4HANA là một bộ phần mềm doanh nghiệp dựa trên nền tảng quản lý dữ liệu và tính toán tốc độ cực cao HANA của SAP, được thiết kế để hỗ trợ tất cả các quy trình hàng ngày của một doanh nghiệp. Giải pháp phần mềm mới phải tương tác tốt với các hệ thống liên quan khác ngoài hệ thống tài chính, chẳng hạn như hệ thống quản lý đơn hàng và hệ thống thanh toán điểm. SAP S/4HANA cung cấp khả năng tích hợp với nhiều nguồn dữ liệu từ nhiều ứng dụng SAP và không phải SAP, bao gồm cả tài chính và các lĩnh vực khác. Thiết kế lại quy trình kinh doanh đóng một vai trò quan trọng trong sự thành công của dự án như công nghệ mới. Việc triển khai phần mềm SAP cung cấp cho Carters cơ hội để chuyển đổi các quy trình cũ và kém hiệu quả thành các quy trình hiện đại phản ánh các phương pháp tốt nhất trong lĩnh vực kinh doanh và ngành công"
"khai phần mềm SAP cung cấp cho Carters cơ hội để chuyển đổi các quy trình cũ và kém hiệu quả thành các quy trình hiện đại phản ánh các phương pháp tốt nhất trong lĩnh vực kinh doanh và ngành công nghiệp của mình."
"Carters đã phải tiêu chuẩn hóa quy trình tài chính của mình với các phương pháp tốt nhất này, nhiều trong số đó đã được tích hợp trong phần mềm SAP. Việc chuẩn hóa kỹ lưỡng yêu cầu phải đặt câu hỏi về lý do đứng sau từng quy trình tài chính cốt lõi. Đối với mỗi quy trình dựa trên công nghệ hiện có, việc triển khai phải đặt câu hỏi liệu nó có thể được thiết kế lại trên nền tảng công nghệ mới để đạt hiệu quả hơn hay không. Carters cũng đã xem xét liệu quy trình có được phục vụ tốt hơn khi vẫn giữ nguyên trên hệ thống cũ thay vì chuyển sang SAP S/4HANA. Carters quyết định giữ một quy trình trên hệ thống hiện có trừ khi việc chuyển sang SAP S/4HANA mang lại lợi ích rõ ràng. Đối với các hệ thống điều hành quy trình tài chính cốt lõi, SAP S/4HANA vượt trội hơn. Vào tháng 7 năm 2016, Carters đã chính thức triển khai SAP S/4HANA Finance với các quy trình từ mua sắm đến thanh toán, từ lập hóa đơn đến thu tiền, tài sản cố định, và từ ghi chép đến báo cáo được hỗ trợ bởi hệ thống mới. Việc chuyển quy trình từ mua sắm đến thanh toán sang SAP S/4HANA đã tăng hiệu quả bằng cách loại bỏ việc nhập dữ liệu thủ công và tăng khả năng quan sát của một giao dịch khi nó đi qua hệ thống. (Quy trình mua sắm đến thanh toán là quy trình mua hàng bao gồm quyết định ban đầu để thực hiện mua sắm, quá trình chọn lựa hàng hóa và giao dịch thanh toán cho hàng hóa đã mua.) Thay vì yêu cầu nhiều cuộc gọi điện thoại, email và bản sao giấy tờ của các tài liệu hỗ trợ."
"Tài liệu sử dụng phần mềm hướng dẫn quy trình. Ứng dụng Quản lý Hóa đơn SAP cho phép quy trình lập hóa đơn tập trung bằng cách quét, đọc và lưu trữ hóa đơn thông qua nhận dạng ký tự quang học (OCR), khởi động một quy trình hóa đơn thông qua danh sách các mã và người phê duyệt đã được thiết lập trước cho đến khi thanh toán hóa đơn. Khi thông tin hóa đơn đã được nhập, nó có thể được truy cập tự động ở bất kỳ đâu trong vòng đời quy trình, và người dùng có thể xem tất cả thông tin liên quan đến giao dịch hóa đơn trên một màn hình duy nhất. Ví dụ, khi phê duyệt một hóa đơn, hệ thống cho phép nhân viên của Carters thấy dữ liệu hóa đơn chảy đến tài khoản phải trả để bắt đầu quy trình thanh toán. Việc hệ thống tự động theo dõi các khiếu nại và khả năng cải thiện việc giám sát tình trạng khiếu nại trong hệ thống đã tạo ra tiết kiệm thời gian và hiệu quả đáng kể trong việc lập hóa đơn và thu nợ. Tất cả thông tin đều nằm trong hệ thống SAP, vì vậy bất kỳ ai phê duyệt khiếu nại đều có thể xem tất cả lịch sử ở một nơi. Ngoài lịch sử khiếu nại, khi một khiếu nại được phê duyệt, hệ thống sẽ gửi một khiếu nại cụ thể đến một sổ cái tổng hợp cụ thể. Hệ thống cũng đã làm cho các quy trình liên quan đến tài sản cố định hiệu quả hơn bằng cách loại bỏ phụ thuộc vào việc định tuyến thủ công và bảng tính. Logistics cho các công ty khác. Hình thức thay đổi kinh doanh quyết liệt này được gọi là sự chuyển đổi mô hình (paradigm shift). Sự chuyển đổi mô hình đòi hỏi phải suy nghĩ lại về bản chất của"
"tính. Logistics cho các công ty khác. Hình thức thay đổi kinh doanh quyết liệt này được gọi là sự chuyển đổi mô hình (paradigm shift). Sự chuyển đổi mô hình đòi hỏi phải suy nghĩ lại về bản chất của doanh nghiệp và bản chất của tổ chức. Sự chuyển đổi mô hình và thiết kế lại quy trình kinh doanh thường thất bại vì sự thay đổi tổ chức lớn rất khó để tổ chức (xem Chương 14). Vậy tại sao có nhiều tập đoàn lại suy ngẫm về những thay đổi quyết liệt như vậy? Bởi vì phần thưởng cũng cao ngang bằng. Trong nhiều trường hợp, các công ty tìm kiếm sự chuyển đổi mô hình và theo đuổi chiến lược tái kỹ thuật đạt được những tăng trưởng ấn tượng trong việc sinh lời (hoặc năng suất). Một số câu chuyện thành công, và một số câu chuyện thất bại, được đưa vào xuyên suốt cuốn sách này. Thiết kế lại quy trình kinh doanh Giống như Cameron International, được mô tả trong trường hợp mở đầu chương, nhiều doanh nghiệp hiện nay đang cố gắng sử dụng công nghệ thông tin để cải thiện quy trình kinh doanh của họ. Một số hệ thống này liên quan đến việc thay đổi quy trình cấp độ nhẹ, nhưng những hệ thống khác yêu cầu thiết kế lại quy trình kinh doanh một cách sâu rộng hơn. Để đối phó với những thay đổi này, các tổ chức đang chuyển sang quản lý quy trình kinh doanh. Quản lý quy trình kinh doanh (BPM) cung cấp nhiều công cụ và phương pháp để phân tích các quy trình hiện có, thiết kế các quy trình mới và tối ưu hóa chúng."
"quy trình. BPM (Quản lý quy trình kinh doanh) không bao giờ kết thúc vì việc cải tiến quy trình đòi hỏi sự thay đổi liên tục. Các công ty thực hành quản lý quy trình kinh doanh sẽ thực hiện các bước sau: quyết định mà một doanh nghiệp có thể đưa ra không phải là quyết định cách sử dụng máy tính để cải thiện quy trình kinh doanh mà là hiểu những quy trình kinh doanh nào cần được cải thiện. Khi các hệ thống được sử dụng để củng cố mô hình kinh doanh hoặc quy trình kinh doanh sai, doanh nghiệp có thể trở nên hiệu quả hơn trong việc thực hiện những điều không nên làm. Kết quả là, doanh nghiệp trở nên dễ bị tổn thương trước những đối thủ cạnh tranh có thể đã phát hiện ra mô hình kinh doanh đúng. Thời gian và chi phí đáng kể cũng có thể bị tiêu tốn để cải thiện những quy trình kinh doanh có ít tác động đến hiệu suất và doanh thu tổng thể của doanh nghiệp. Các nhà quản lý cần xác định quy trình kinh doanh nào là quan trọng nhất và cách mà việc cải thiện những quy trình này sẽ giúp nâng cao hiệu suất kinh doanh."
"Các quy trình cần được ghi chép đầy đủ, bao gồm các đầu vào, đầu ra, nguồn lực và trình tự các hoạt động. Nhóm thiết kế quy trình xác định các bước thừa, các nhiệm vụ tốn giấy, các điểm nghẽn và những điểm không hiệu quả khác. Được đo lường về thời gian và chi phí, nhóm thiết kế quy trình sẽ cố gắng cải thiện quy trình bằng cách thiết kế một quy trình mới. Một quy trình mới được tối ưu hóa sẽ được ghi chép và mô hình hóa để so sánh với quy trình cũ. Sau khi được mô hình hóa và phân tích, quy trình mới cần phải được chuyển thành một tập hợp các quy trình và quy tắc làm việc mới. Các hệ thống thông tin mới hoặc các cải tiến cho hệ thống hiện có có thể cần được triển khai để hỗ trợ quy trình được thiết kế lại. Quy trình mới và các hệ thống hỗ trợ sẽ được đưa vào tổ chức kinh doanh. Khi doanh nghiệp bắt đầu sử dụng quy trình này, các vấn đề sẽ được phát hiện và giải quyết. Nhân viên làm việc với quy trình có thể gợi ý các cải tiến. Để tối ưu hóa, quy trình cần được đo lường liên tục. Tại sao? Các quy trình có thể xuống cấp theo thời gian khi nhân viên quay lại với các phương pháp cũ, hoặc chúng có thể mất hiệu quả nếu doanh nghiệp trải qua những thay đổi khác."
"Hãy xem xét điều gì xảy ra khi một khách hàng ghé thăm một cửa hàng sách và tìm kiếm một quyển sách trên kệ. Nếu anh ta hoặc cô ta tìm thấy quyển sách, họ sẽ mang nó đến quầy thanh toán và thanh toán bằng thẻ tín dụng, tiền mặt hoặc séc. Nếu khách hàng không thể tìm thấy quyển sách, họ phải yêu cầu một nhân viên cửa hàng sách tìm kiếm trên kệ hoặc kiểm tra hồ sơ tồn kho của cửa hàng để xem liệu có sẵn không. Nếu nhân viên tìm thấy quyển sách, khách hàng sẽ mua nó và rời đi. Nếu quyển sách không có sẵn tại cửa hàng địa phương, nhân viên sẽ hỏi về việc đặt hàng cho khách hàng từ kho của cửa hàng sách hoặc từ nhà phân phối hoặc nhà xuất bản của sách. Khi quyển sách được đặt hàng đến cửa hàng sách, một nhân viên sẽ gọi điện cho khách hàng với thông tin này. Khách hàng sẽ phải quay lại cửa hàng sách để nhận quyển sách và thanh toán. Nếu cửa hàng sách không thể đặt hàng cho khách hàng, khách hàng sẽ phải thử một cửa hàng sách khác. Bạn có thể thấy rằng quy trình này có nhiều bước và có thể yêu cầu khách hàng phải thực hiện nhiều chuyến đến cửa hàng sách. Việc mua một cuốn sách tại cửa hàng sách truyền thống bao gồm nhiều bước cần được thực hiện bởi cả người bán và khách hàng. Khách hàng đến cửa hàng sách, tìm kiếm trên kệ sách, nếu sách có sẵn thì mua sách và mang sách về nhà. Nếu không, nhân viên kiểm tra và sẽ tìm kiếm cuốn sách. Nếu có thể đặt hàng, khách hàng sẽ quay lại cửa hàng mua sách và mang sách về nhà. Nếu khách hàng đặt hàng sách trực tuyến, họ cung cấp thông tin thẻ"
"nhân viên kiểm tra và sẽ tìm kiếm cuốn sách. Nếu có thể đặt hàng, khách hàng sẽ quay lại cửa hàng mua sách và mang sách về nhà. Nếu khách hàng đặt hàng sách trực tuyến, họ cung cấp thông tin thẻ tín dụng và địa chỉ giao hàng, và sách sẽ được giao đến nhà của họ. Nếu cửa hàng sách trực tuyến không có cuốn sách đó, khách hàng sẽ chọn một cửa hàng trực tuyến khác và tìm kiếm lại. Quy trình này có ít bước hơn nhiều so với việc mua sách tại cửa hàng truyền thống, tốn ít công sức hơn cho khách hàng và cần ít nhân viên bán hàng hơn để phục vụ. Do đó, quy trình mới này trở nên hiệu quả hơn và tiết kiệm thời gian hơn. Thiết kế quy trình mới cần được chứng minh bằng cách cho thấy nó giảm bao nhiêu thời gian và chi phí hoặc cải thiện dịch vụ khách hàng và giá trị. Ban quản lý đầu tiên sẽ đo thời gian và chi phí của quy trình hiện tại như là cơ sở. Trong ví dụ của chúng ta. Việc sử dụng công nghệ Internet cho phép thiết kế lại quy trình mua sách sao cho yêu cầu ít bước hơn và tiêu tốn ít nguồn lực hơn. Truy cập cửa hàng sách trực tuyến, tìm kiếm trong danh mục trực tuyến, nhập dữ liệu đơn hàng và thanh toán, nhận sách qua đường bưu điện. Nếu sách có sẵn thì tiếp tục, nếu không thì chọn cửa hàng sách trực tuyến khác."
"Thời gian cần thiết để mua một cuốn sách từ một cửa hàng sách vật lý có thể dao động từ 15 phút (nếu khách hàng ngay lập tức tìm thấy cuốn sách mình muốn) đến 30 phút nếu cuốn sách có sẵn nhưng phải được nhân viên bán hàng tìm ra. Nếu cuốn sách phải được đặt hàng từ một nguồn khác, quá trình này có thể mất một hoặc hai tuần và khách hàng sẽ phải quay lại cửa hàng sách. Nếu khách hàng sống xa cửa hàng, thời gian di chuyển cũng cần được tính đến. Cửa hàng sẽ phải chịu chi phí duy trì một cửa hàng vật lý, bảo quản sách trong kho, trả lương cho nhân viên bán hàng tại chỗ và chi phí vận chuyển nếu cuốn sách phải được lấy từ một địa điểm khác. Quy trình mua sách trực tuyến mới có thể chỉ mất vài phút, mặc dù khách hàng có thể phải chờ vài ngày hoặc một tuần để nhận sách và sẽ phải trả phí vận chuyển. Tuy nhiên, khách hàng tiết kiệm thời gian và tiền bạc bằng cách không phải đi lại đến cửa hàng hoặc thực hiện thêm chuyến đi để lấy sách. Chi phí của các nhà sách thấp hơn vì họ không phải trả tiền cho một địa điểm cửa hàng vật lý hay cho hàng tồn kho địa phương. Mặc dù nhiều cải tiến quy trình kinh doanh là từng bước và liên tục, có những trường hợp mà sự thay đổi mạnh mẽ hơn là cần thiết. Ví dụ của chúng ta về việc một cửa hàng sách vật lý thiết kế lại quy trình mua sách để thực hiện trực tuyến là một ví dụ về loại thay đổi mạnh mẽ, có tầm ảnh hưởng này. Khi được triển khai đúng cách, việc thiết kế lại quy trình kinh doanh tạo ra những cải thiện đáng kể về năng suất và hiệu quả, có"
"tuyến là một ví dụ về loại thay đổi mạnh mẽ, có tầm ảnh hưởng này. Khi được triển khai đúng cách, việc thiết kế lại quy trình kinh doanh tạo ra những cải thiện đáng kể về năng suất và hiệu quả, có thể thậm chí thay đổi cách thức hoạt động của doanh nghiệp. Trong một số trường hợp, điều này thúc đẩy một sự chuyển đổi mô hình làm thay đổi bản chất của doanh nghiệp. Điều này thực sự đã xảy ra trong lĩnh vực bán sách khi Amazon thách thức các cửa hàng sách vật lý truyền thống với mô hình bán lẻ trực tuyến và máy đọc sách điện tử Kindle. Bằng cách tái định nghĩa hoàn toàn cách thức xuất bản, mua và bán sách, Amazon và các cửa hàng sách trực tuyến khác đã đạt được hiệu quả đáng kinh ngạc, giảm chi phí và tạo ra một cách thức kinh doanh hoàn toàn mới. BPM đặt ra những thách thức. Các giám đốc điều hành báo cáo rằng rào cản lớn nhất đối với việc thay đổi quy trình kinh doanh thành công là văn hóa tổ chức. Nhân viên không thích các thói quen lạ và thường cố gắng chống lại sự thay đổi. Điều này đặc biệt đúng đối với các dự án mà thay đổi tổ chức rất tham vọng và sâu rộng. Quản lý sự thay đổi không đơn giản hay trực quan, và các công ty cam kết cải thiện quy trình cần một chiến lược quản lý thay đổi tốt (xem Công cụ quản lý quy trình kinh doanh). Nhiều công ty phần mềm cung cấp công cụ cho các khía cạnh khác nhau của BPM, bao gồm IBM, Oracle và TIBCO. Những công cụ này giúp doanh nghiệp xác định và ghi lại các quy trình cần cải thiện, tạo mô hình quy trình được cải tiến, nắm bắt và"
"cho các khía cạnh khác nhau của BPM, bao gồm IBM, Oracle và TIBCO. Những công cụ này giúp doanh nghiệp xác định và ghi lại các quy trình cần cải thiện, tạo mô hình quy trình được cải tiến, nắm bắt và thực thi các quy tắc kinh doanh để thực hiện quy trình, và tích hợp các hệ thống hiện có để hỗ trợ các quy trình mới hoặc đã được thiết kế lại. Các công cụ phần mềm BPM cũng cung cấp phân tích để xác nhận rằng hiệu suất quy trình đã được cải thiện và để đo lường tác động của các thay đổi quy trình đến các chỉ số hiệu suất kinh doanh chính. Ví dụ, Công ty Bảo hiểm Quốc gia Mỹ, cung cấp bảo hiểm nhân thọ, bảo hiểm y tế, bảo hiểm tài sản và dịch vụ đầu tư, đã sử dụng phần mềm BPM của Pegasystems để cải tiến quy trình dịch vụ khách hàng trên bốn nhóm kinh doanh. Phần mềm đã xây dựng các quy tắc để hướng dẫn đại diện dịch vụ khách hàng thông qua một cái nhìn duy nhất về thông tin khách hàng được duy trì trong nhiều hệ thống. Bằng cách loại bỏ sự cần thiết phải xử lý nhiều ứng dụng cùng lúc để xử lý yêu cầu của khách hàng và đại lý, quy trình cải tiến đã tăng khả năng làm việc của đại diện dịch vụ khách hàng lên 192%."
"Quá trình phát triển hệ thống? Các hệ thống thông tin mới phát triển từ việc giải quyết vấn đề trong tổ chức. Một hệ thống thông tin mới được xây dựng như một giải pháp cho một hoặc một tập hợp các vấn đề mà tổ chức nhận thấy mình đang đối mặt. Vấn đề có thể là khi các nhà quản lý và nhân viên nhận ra rằng tổ chức không hoạt động hiệu quả như mong đợi hoặc rằng tổ chức nên tận dụng những cơ hội mới để hoạt động thành công hơn. Các hoạt động liên quan đến việc sản xuất một giải pháp hệ thống thông tin cho vấn đề hoặc cơ hội của tổ chức được gọi là phát triển hệ thống. Phát triển hệ thống là một quá trình giải quyết vấn đề có cấu trúc với các hoạt động rõ ràng. Các hoạt động này bao gồm phân tích hệ thống, thiết kế hệ thống, lập trình, thử nghiệm, chuyển đổi, và sản xuất cũng như bảo trì. Quá trình phát triển hệ thống thường diễn ra theo thứ tự liên tục. Tuy nhiên, một số hoạt động có thể cần được lặp lại hoặc một số có thể diễn ra đồng thời tùy thuộc vào cách tiếp cận xây dựng hệ thống đang được áp dụng."
"Phân tích hệ thống Phân tích hệ thống là quá trình phân tích một vấn đề mà một công ty cố gắng giải quyết bằng một hệ thống thông tin. Nó bao gồm việc xác định vấn đề, nhận diện nguyên nhân của nó, xác định giải pháp và nhận biết các yêu cầu thông tin mà giải pháp hệ thống cần đáp ứng. Nhà phân tích hệ thống tạo ra một bản đồ của tổ chức và hệ thống hiện tại, xác định các chủ sở hữu và người dùng dữ liệu chính cùng với phần cứng và phần mềm hiện có. Sau đó, nhà phân tích hệ thống chi tiết các vấn đề của các hệ thống hiện tại. Bằng cách xem xét tài liệu, hồ sơ công việc và quy trình, quan sát hoạt động của hệ thống, và phỏng vấn những người dùng chủ chốt của hệ thống, nhà phân tích có thể xác định các lĩnh vực vấn đề và các mục tiêu mà một giải pháp sẽ đạt được. Thường thì, giải pháp yêu cầu xây dựng một hệ thống thông tin mới hoặc cải thiện một hệ thống hiện có."
"Phân tích hệ thống cũng bao gồm một nghiên cứu tính khả thi để xác định liệu giải pháp đó có khả thi hay không, từ quan điểm tài chính, kỹ thuật và tổ chức. Nghiên cứu tính khả thi xác định liệu hệ thống được đề xuất có được kỳ vọng là một khoản đầu tư tốt, liệu công nghệ cần thiết cho hệ thống có sẵn và có thể được các chuyên gia hệ thống thông tin của công ty xử lý, và liệu tổ chức có thể quản lý những thay đổi mà hệ thống mang lại hay không. Thông thường, quy trình phân tích hệ thống xác định một số giải pháp thay thế mà tổ chức có thể theo đuổi và đánh giá tính khả thi của từng giải pháp. Một báo cáo đề xuất hệ thống bằng văn bản mô tả chi phí và lợi ích, cũng như những ưu điểm và nhược điểm của từng giải pháp thay thế. Quản lý sẽ quyết định sự kết hợp giữa chi phí, lợi ích, tính năng kỹ thuật và tác động tổ chức nào là giải pháp mong muốn nhất."
"Xác định yêu cầu thông tin Có lẽ nhiệm vụ thách thức nhất của nhà phân tích hệ thống là xác định yêu cầu thông tin cụ thể cần phải được đáp ứng bởi giải pháp hệ thống đã chọn. Ở mức độ cơ bản nhất, yêu cầu thông tin của một hệ thống mới liên quan đến việc xác định ai cần thông tin gì, ở đâu, khi nào và như thế nào. Phân tích yêu cầu xác định kỹ lưỡng các mục tiêu của hệ thống mới hoặc đã được điều chỉnh và phát triển một mô tả chi tiết về các chức năng mà hệ thống mới phải thực hiện. Phân tích yêu cầu không chính xác là nguyên nhân hàng đầu dẫn đến sự thất bại của hệ thống và chi phí phát triển hệ thống cao. Một hệ thống được thiết kế dựa trên một bộ yêu cầu sai sẽ phải bị loại bỏ do hiệu suất kém hoặc cần phải trải qua những sửa đổi lớn. Một số vấn đề không yêu cầu giải pháp hệ thống thông tin mà thay vào đó cần điều chỉnh quản lý, đào tạo thêm hoặc tinh chỉnh các quy trình tổ chức hiện có. Nếu vấn đề liên quan đến thông tin, phân tích hệ thống vẫn có thể cần thiết để chẩn đoán vấn đề và tìm ra giải pháp đúng đắn."
"Thiết kế hệ thống Phân tích hệ thống mô tả hệ thống nên làm gì để đáp ứng yêu cầu thông tin, và thiết kế hệ thống cho thấy hệ thống sẽ thực hiện mục tiêu này như thế nào. Thiết kế một hệ thống thông tin là kế hoạch tổng thể hoặc mô hình cho hệ thống đó. Giống như bản thiết kế của một tòa nhà hay căn nhà, nó bao gồm tất cả các thông số kỹ thuật mang lại hình thức và cấu trúc cho hệ thống. Nhà thiết kế hệ thống chi tiết hóa các thông số kỹ thuật của hệ thống sẽ thực hiện các chức năng đã được xác định trong quá trình phân tích hệ thống. Những thông số kỹ thuật này cần phải giải quyết tất cả các thành phần quản lý, tổ chức và công nghệ của giải pháp hệ thống. Các thông số kỹ thuật khác nhau sẽ được sản xuất trong quá trình thiết kế hệ thống. Giống như nhà hoặc tòa nhà, hệ thống thông tin có thể có nhiều thiết kế khả thi. Mỗi thiết kế đại diện cho sự kết hợp độc đáo của các thành phần kỹ thuật và tổ chức. Những gì làm cho một thiết kế nổi bật hơn những thiết kế khác là sự dễ dàng và hiệu quả với việc nó đáp ứng yêu cầu của người dùng trong một tập hợp cụ thể các ràng buộc về kỹ thuật, tổ chức, tài chính và thời gian."
"Vai trò của người dùng cuối Các yêu cầu thông tin của người dùng thúc đẩy toàn bộ nỗ lực xây dựng hệ thống. Người dùng phải có quyền kiểm soát đủ về quy trình thiết kế để đảm bảo rằng hệ thống phản ánh các ưu tiên kinh doanh và nhu cầu thông tin của họ, chứ không phải là những thiên lệch của các bên khác."
"BẢNG 13.1 CÁC THÔNG SỐ THIẾT KẾ HỆ THỐNG ĐẦU RA Nội dung trung bình Thời gian ĐẦU VÀO Nguồn gốc Dòng chảy Nhập dữ liệu GIAO DIỆN NGƯỜI DÙNG Đơn giản Hiệu quả Logic Phản hồi Lỗi THIẾT KẾ CƠ SỞ DỮ LIỆU Mô hình dữ liệu logic Các yêu cầu về khối lượng và tốc độ Thông số ghi chú Xử LÝ Tính toán Các mô-đun chương trình Các báo cáo cần thiết Thời gian TÀI LIỆU Tài liệu hoạt động Tài liệu hệ thống Tài liệu người dùng CHUYỂN ĐỔI THỦ TỤC THỦ CÔNG Quy tắc chuyển đổi dữ liệu Hoạt động kiểm tra Phương pháp kiểm tra Ai thực hiện Chiến lược chuyển đổi ĐÀO TẠO Kỹ thuật đào tạo Các mô-đun đào tạo THAY ĐỔI TỔ CHỨC Thiết kế lại nhiệm vụ Thiết kế công việc Thiết kế quy trình Thiết kế cấu trúc tổ chức Mối quan hệ báo cáo Khi nào Làm thế nào Ở đâu KIỂM SOÁT Kiểm soát đầu vào (ký tự, giới hạn, tính hợp lý) Kiểm soát xử lý (tính nhất quán, số lượng ghi chú) Kiểm soát đầu ra (tổng, mẫu đầu ra) Kiểm soát quy trình (mật khẩu, mẫu đặc biệt) AN NINH Kiểm soát truy cập Kế hoạch ứng phó khẩn cấp Đường kiểm toán nhân viên kỹ thuật. Tham gia vào thiết kế giúp người dùng hiểu rõ hơn và chấp nhận hệ thống tốt hơn. Như chúng tôi đã đề cập trong Chương 14, thiếu sự tham gia của người dùng trong nỗ lực thiết kế là nguyên nhân chính dẫn đến sự thất bại của hệ thống. Tuy nhiên, một số hệ thống yêu cầu sự tham gia nhiều hơn của người dùng trong thiết kế so với các hệ thống khác, và Phần 13-4 cho thấy cách thức các phương pháp phát triển hệ thống thay thế giải quyết vấn đề sự tham gia của người dùng. Hoàn tất Quy"
"hơn của người dùng trong thiết kế so với các hệ thống khác, và Phần 13-4 cho thấy cách thức các phương pháp phát triển hệ thống thay thế giải quyết vấn đề sự tham gia của người dùng. Hoàn tất Quy trình Phát triển Hệ thống Các bước còn lại trong quy trình phát triển hệ thống chuyển đổi các thông số giải pháp đã được thiết lập trong quá trình phân tích và thiết kế hệ thống thành một hệ thống thông tin hoạt động đầy đủ. Các bước cuối cùng này bao gồm lập trình, kiểm tra, chuyển đổi, sản xuất và bảo trì. Lập trình Trong giai đoạn lập trình, các thông số của hệ thống đã được chuẩn bị trong giai đoạn thiết kế sẽ được chuyển đổi thành mã chương trình phần mềm. Ngày nay, nhiều tổ chức không còn tự lập trình cho các hệ thống mới nữa. Thay vào đó, họ mua phần mềm phù hợp với yêu cầu cho một hệ thống mới từ các nguồn bên ngoài như gói phần mềm từ nhà cung cấp phần mềm thương mại, dịch vụ phần mềm từ nhà cung cấp dịch vụ phần mềm, hoặc các công ty gia công phát triển phần mềm tùy chỉnh cho khách hàng của họ (xem Phần 13-4)."
"Kiểm tra"
"Kiểm tra toàn diện và kỹ lưỡng phải được tiến hành để xác định xem hệ thống có tạo ra kết quả đúng hay không. Kiểm tra trả lời câu hỏi: Hệ thống có tạo ra kết quả mong muốn trong các điều kiện đã biết hay không? Một số công ty đang bắt đầu sử dụng dịch vụ điện toán đám mây cho công việc này. Thời gian cần thiết để trả lời câu hỏi này thường bị đánh giá thấp trong kế hoạch dự án hệ thống (xem Chương 14). Kiểm tra tiêu tốn nhiều thời gian: Dữ liệu thử nghiệm phải được chuẩn bị cẩn thận, kết quả phải được xem xét, và các sửa đổi cần được thực hiện trong hệ thống. Trong một số trường hợp, các phần của hệ thống có thể phải được thiết kế lại. Những rủi ro phát sinh từ việc bỏ qua bước này là rất lớn. Kiểm tra một hệ thống thông tin có thể được chia thành ba loại hoạt động: kiểm tra đơn vị, kiểm tra hệ thống và kiểm tra chấp nhận. Kiểm tra đơn vị, hay kiểm tra chương trình, bao gồm việc kiểm tra từng chương trình riêng biệt trong hệ thống. Người ta thường tin rằng mục đích của việc kiểm tra như vậy là đảm bảo rằng các chương trình không có lỗi, nhưng mục tiêu này thực tế là không khả thi. Kiểm tra nên được xem như là một phương tiện để xác định lỗi trong các chương trình, tập trung vào việc tìm mọi cách để khiến một chương trình thất bại. Khi những vấn đề này được chỉ rõ, chúng có thể được sửa chữa."
"Kiểm tra hệ thống kiểm tra chức năng của hệ thống thông tin như một tổng thể. Nó cố gắng xác định xem các mô-đun riêng lẻ có hoạt động cùng nhau như đã dự kiến hay không và liệu có sự khác biệt nào giữa cách thức hoạt động thực tế của hệ thống và cách thức nó được hình thành. Các lĩnh vực được kiểm tra bao gồm thời gian thực hiện, dung lượng lưu trữ tệp và khả năng xử lý tải cao điểm, khả năng phục hồi và khởi động lại, cùng với các quy trình thủ công.\n\nKiểm tra chấp nhận cung cấp chứng nhận cuối cùng rằng hệ thống đã sẵn sàng để được sử dụng trong môi trường sản xuất. Các bài kiểm tra hệ thống được người dùng đánh giá và được quản lý xem xét. Khi tất cả các bên đều hài lòng rằng hệ thống mới đáp ứng các tiêu chuẩn của họ, hệ thống sẽ được chấp nhận chính thức để cài đặt. Nhóm phát triển hệ thống làm việc với người dùng để xây dựng kế hoạch kiểm tra có hệ thống. Kế hoạch kiểm tra bao gồm tất cả các chuẩn bị cho loạt bài kiểm tra mà chúng ta vừa mô tả. \n\nKhi phát triển một kế hoạch kiểm tra, điều quan trọng là phải bao gồm các điều kiện khác nhau cần được kiểm tra, các yêu cầu cho từng điều kiện kiểm tra, và các kết quả mong đợi. Kế hoạch kiểm tra cần có sự đầu vào từ cả người dùng cuối và các chuyên gia hệ thống thông tin."
"Quy trình Địa chỉ và Thay đổi Hồ sơ Bảo trì \nChuỗi Kiểm tra Thay đổi \nĐược chuẩn bị bởi: \nNgày: \nPhiên bản: \nTham chiếu Kiểm tra \nĐiều kiện Kiểm tra \nYêu cầu đặc biệt \nKết quả mong đợi \nĐầu ra trên màn hình tiếp theo \nThay đổi hồ sơ \nThay đổi hồ sơ hiện có \nThay đổi hồ sơ không tồn tại \nThay đổi hồ sơ đã xóa \nThực hiện thay đổi trong khi thay đổi trường khóa \nKhông cho phép \nCác trường khác \nHồ sơ đã xóa phải có sẵn \nThay đổi 2.1 ở trên \nThông điệp khóa không hợp lệ \nThông điệp đã xóa \nOK nếu hợp lệ \nOK nếu hợp lệ \nBỏ 2.5 \nKhông thay đổi \nTệp giao dịch \nTệp giao dịch \nTệp giao dịch \nV45 \nV45 \nV45"
"Các màn hình được duy trì trên một cơ sở dữ liệu (có thể là cơ sở dữ liệu PC) rất phù hợp cho loại ứng dụng này. Chuyển đổi là quá trình thay đổi từ hệ thống cũ sang hệ thống mới. Có bốn chiến lược chuyển đổi chính có thể được áp dụng: chiến lược song song, chiến lược chuyển đổi trực tiếp, chiến lược nghiên cứu thí điểm và chiến lược tiếp cận theo từng giai đoạn. Trong chiến lược song song, cả hệ thống cũ và hệ thống thay thế tiềm năng đều được vận hành đồng thời trong một thời gian cho đến khi mọi người đảm bảo rằng hệ thống mới hoạt động đúng. Đây là phương pháp chuyển đổi an toàn nhất vì trong trường hợp xảy ra lỗi hoặc gián đoạn xử lý, hệ thống cũ vẫn có thể được sử dụng như một phương án dự phòng. Tuy nhiên, phương pháp này rất tốn kém và có thể cần thêm nhân sự hoặc tài nguyên để vận hành hệ thống bổ sung. Chiến lược chuyển đổi trực tiếp thay thế hoàn toàn hệ thống cũ bằng hệ thống mới vào một ngày đã định. Đây là một phương pháp rất rủi ro có thể tốn kém hơn so với việc vận hành hai hệ thống cùng lúc nếu phát hiện ra vấn đề nghiêm trọng với hệ thống mới. Không có hệ thống nào khác để quay lại. Các gián đoạn, bất ổn và chi phí khắc phục có thể rất lớn. Chiến lược nghiên cứu thí điểm giới thiệu hệ thống mới chỉ vào một khu vực hạn chế của tổ chức, chẳng hạn như một phòng ban hoặc đơn vị hoạt động đơn lẻ. Khi phiên bản thí điểm này hoàn thành và hoạt động ổn định, nó sẽ được triển khai trong toàn bộ tổ chức, hoặc đồng thời hoặc theo từng giai đoạn. Chiến lược tiếp cận"
"ban hoặc đơn vị hoạt động đơn lẻ. Khi phiên bản thí điểm này hoàn thành và hoạt động ổn định, nó sẽ được triển khai trong toàn bộ tổ chức, hoặc đồng thời hoặc theo từng giai đoạn. Chiến lược tiếp cận theo từng giai đoạn giới thiệu hệ thống mới theo từng phần, hoặc theo các đơn vị tổ chức. Nếu, ví dụ, hệ thống được giới thiệu theo chức năng, một hệ thống tiền lương mới có thể bắt đầu với những người lao động theo giờ được trả lương hàng tuần, tiếp theo là bổ sung nhân viên có lương cố định (được trả hàng tháng) vào hệ thống sau sáu tháng. Nếu hệ thống được giới thiệu theo đơn vị tổ chức, trụ sở công ty có thể được chuyển đổi trước, sau đó các đơn vị hoạt động xa hơn có thể được chuyển đổi bốn tháng sau đó. Việc chuyển từ hệ thống cũ sang hệ thống mới đòi hỏi người dùng cuối phải được đào tạo để sử dụng hệ thống mới. Tài liệu chi tiết mô tả cách hệ thống hoạt động từ cả góc độ kỹ thuật và người dùng cuối sẽ được hoàn thiện trong thời gian chuyển đổi để sử dụng trong đào tạo và hoạt động hàng ngày. Thiếu đào tạo và tài liệu thích hợp có thể dẫn đến thất bại của hệ thống, vì vậy phần này của quá trình phát triển hệ thống rất quan trọng."
"Sản xuất và Bảo trì Sau khi hệ thống mới được cài đặt và quá trình chuyển đổi hoàn tất, hệ thống được coi là đang trong giai đoạn sản xuất. Trong giai đoạn này, hệ thống sẽ được người dùng và các chuyên gia kỹ thuật xem xét để xác định cách thức nó đã đáp ứng được các mục tiêu ban đầu và quyết định xem có cần điều chỉnh hoặc sửa đổi nào không. Trong một số trường hợp, một tài liệu kiểm toán hậu triển khai chính thức được chuẩn bị. Sau khi hệ thống đã được tinh chỉnh, nó phải được bảo trì trong thời gian sản xuất để khắc phục lỗi, đáp ứng yêu cầu hoặc cải thiện hiệu suất xử lý. Những thay đổi về phần cứng, phần mềm, tài liệu hoặc quy trình đối với một hệ thống sản xuất nhằm khắc phục lỗi, đáp ứng yêu cầu mới hoặc cải thiện hiệu suất xử lý được gọi là bảo trì. Bảo trì thường xuyên tiêu tốn một tỷ lệ lớn trong ngân sách CNTT của nhiều công ty, nhưng có thể giảm đáng kể thông qua các thực tiễn và công nghệ xây dựng hệ thống tiên tiến hơn. Bảng 13.2 tóm tắt các hoạt động phát triển hệ thống."
"BẢNG 13.2 CÁC HOẠT ĐỘNG CỐT LÕI CỦA PHÁT TRIỂN HỆ THỐNG Phân tích hệ thống Thiết kế hệ thống Lập trình Kiểm tra Chuyển đổi Sản xuất và bảo trì MÔ TẢ Xác định vấn đề Xác định giải pháp Thiết lập yêu cầu thông tin Tạo đặc tả thiết kế Dịch đặc tả thiết kế thành mã chương trình Thực hiện kiểm tra đơn vị Thực hiện kiểm tra hệ thống Thực hiện kiểm tra chấp nhận Lập kế hoạch chuyển đổi Chuẩn bị tài liệu Đào tạo người dùng và nhân viên kỹ thuật Vận hành hệ thống Đánh giá hệ thống Điều chỉnh hệ thống cho việc mô hình hóa và thiết kế hệ thống? Có nhiều phương pháp tiếp cận khác nhau cho việc mô hình hóa và thiết kế hệ thống. Các phương pháp cấu trúc và phát triển hướng đối tượng là những phương pháp nổi bật nhất."
"Phương pháp Cấu trúc Các phương pháp cấu trúc đã được sử dụng để ghi chép, phân tích và thiết kế hệ thống thông tin từ những năm 1970. Cấu trúc ám chỉ đến thực tế rằng các kỹ thuật này diễn ra theo từng bước, mỗi bước xây dựng trên bước trước đó. Các phương pháp cấu trúc được tổ chức theo cách từ trên xuống, tiến từ mức độ trừu tượng cao nhất đến mức độ chi tiết thấp nhất - từ tổng thể đến cụ thể. Các phương pháp phát triển cấu trúc tập trung vào quy trình, chủ yếu mô hình hóa các quy trình hoặc hành động mà thu thập, lưu trữ, xử lý và phân phối dữ liệu khi dữ liệu di chuyển qua một hệ thống. Những phương pháp này tách biệt dữ liệu khỏi quy trình. Một quy trình lập trình riêng biệt phải được viết mỗi khi ai đó muốn thực hiện một hành động trên một mảnh dữ liệu cụ thể. Các quy trình này thực hiện hành động trên dữ liệu mà chương trình truyền cho chúng. Công cụ chính để biểu diễn các quy trình thành phần của hệ thống và dòng dữ liệu giữa chúng là sơ đồ luồng dữ liệu (DFD). Sơ đồ luồng dữ liệu cung cấp một mô hình đồ họa logic của dòng thông tin, phân chia một hệ thống thành các mô-đun thể hiện các mức độ chi tiết có thể quản lý. Nó quy định một cách nghiêm ngặt các quy trình hoặc biến đổi xảy ra trong mỗi mô-đun và các giao diện tồn tại giữa chúng."
"Hệ thống này có ba quá trình: Xác minh tính khả dụng (1.0), Đăng ký sinh viên (2.0) và Xác nhận đăng ký (3.0). Tên và nội dung của từng dòng dữ liệu xuất hiện cạnh mỗi mũi tên. Có một thực thể bên ngoài trong hệ thống này: sinh viên. Có hai kho dữ liệu: hồ sơ sinh viên và hồ sơ khóa học. Các khóa học yêu cầu từ sinh viên Xác minh tính khả dụng Các khóa học mở Lựa chọn được chấp nhận/không chấp nhận Chi tiết khóa học Đăng ký sinh viên Thông tin sinh viên Đăng ký Hồ sơ sinh viên Xác nhận thư Xác nhận đăng ký mô hình hệ thống. Các hình chữ nhật mở đại diện cho kho dữ liệu, có thể là danh sách dữ liệu thủ công hoặc tự động. Các mũi tên đại diện cho dòng dữ liệu, thể hiện sự di chuyển giữa các quá trình, thực thể bên ngoài và kho dữ liệu. Chúng chứa các gói dữ liệu với tên hoặc nội dung của mỗi dòng dữ liệu được liệt kê bên cạnh mũi tên. Sơ đồ dòng dữ liệu này cho thấy sinh viên gửi mẫu đăng ký với tên, số nhận dạng và số của các khóa học mà họ muốn tham gia. Trong quá trình 1.0, hệ thống xác minh rằng mỗi khóa học được chọn vẫn còn mở bằng cách tham chiếu đến hồ sơ khóa học của trường đại học. Hồ sơ này phân biệt các khóa học đang mở với những khóa học đã bị hủy hoặc đã đầy. Quá trình 1.0 sau đó xác định những lựa chọn nào của sinh viên có thể được chấp nhận hoặc từ chối. Quá trình này cập nhật hồ sơ khóa học của trường đại học với tên và số nhận dạng của sinh viên, đồng thời tính lại quy mô lớp học. Nếu số lượng sinh viên tối đa đã đạt, số khóa học sẽ được đánh dấu là đã đóng."
"này cập nhật hồ sơ khóa học của trường đại học với tên và số nhận dạng của sinh viên, đồng thời tính lại quy mô lớp học. Nếu số lượng sinh viên tối đa đã đạt, số khóa học sẽ được đánh dấu là đã đóng. Quá trình 2.0 cũng cập nhật hồ sơ sinh viên của trường đại học với thông tin về sinh viên mới hoặc thay đổi địa chỉ. Quá trình 3.0 sau đó gửi cho mỗi sinh viên đăng ký một thư xác nhận đăng ký, liệt kê các khóa học mà họ đã đăng ký và ghi chú những lựa chọn khóa học không thể thực hiện. Các sơ đồ có thể được sử dụng để mô tả các quy trình cấp cao cũng như các chi tiết cấp thấp hơn. Thông qua các sơ đồ dòng dữ liệu theo cấp độ, một quy trình phức tạp có thể được chia thành các cấp độ chi tiết liên tiếp. Một hệ thống toàn bộ có thể được chia thành các tiểu hệ thống với một sơ đồ dòng dữ liệu cấp cao. Mỗi tiểu hệ thống lại có thể được chia thành các tiểu hệ thống phụ với các sơ đồ dòng dữ liệu cấp hai, và các tiểu hệ thống cấp thấp hơn có thể được phân rã tiếp cho đến khi đạt được cấp độ chi tiết thấp nhất. Một công cụ khác cho phân tích có cấu trúc là từ điển dữ liệu, bao gồm thông tin về các phần dữ liệu riêng lẻ và các nhóm dữ liệu trong một hệ thống."
"Nhập dữ liệu hợp lệ Xử lý lương Tính lương Nhận dữ liệu Xác thực dữ liệu Tính lương gộp Tính lương ròng Cập nhật hồ sơ chính Ghi dữ liệu Xuất biên lai, báo cáo và tệp đầu ra (xem Chương 6). Từ điển dữ liệu xác định nội dung của các luồng dữ liệu và kho dữ liệu để các nhà phát triển hệ thống hiểu rõ chính xác các phần dữ liệu mà chúng chứa. Các đặc tả quy trình mô tả sự chuyển đổi diễn ra trong mức thấp nhất của sơ đồ luồng dữ liệu. Chúng thể hiện logic cho từng quy trình. Trong phương pháp có cấu trúc, thiết kế phần mềm được mô hình hóa bằng cách sử dụng các sơ đồ cấu trúc phân cấp. Sơ đồ cấu trúc là một sơ đồ từ trên xuống, hiển thị từng cấp thiết kế, mối quan hệ của nó với các cấp khác và vị trí của nó trong cấu trúc thiết kế tổng thể. Thiết kế trước hết xem xét chức năng chính của một chương trình hoặc hệ thống, sau đó chia chức năng này thành các chức năng phụ, và phân tích mỗi chức năng phụ cho đến khi đạt được mức chi tiết thấp nhất. Nếu một thiết kế có quá nhiều cấp để phù hợp vào một sơ đồ cấu trúc, nó có thể được tách ra thành các sơ đồ cấu trúc chi tiết hơn. Một sơ đồ cấu trúc có thể tài liệu hóa một chương trình, một hệ thống (một tập hợp các chương trình) hoặc một phần của một chương trình."
"Phát triển hướng đối tượng Các phương pháp có cấu trúc hữu ích cho việc mô hình hóa quy trình nhưng không xử lý tốt việc mô hình hóa dữ liệu. Chúng cũng coi dữ liệu và quy trình như các thực thể riêng biệt về mặt logic, trong khi trong thế giới thực, sự tách biệt như vậy có vẻ không tự nhiên. Có những quy ước mô hình hóa khác nhau được sử dụng cho phân tích (sơ đồ luồng dữ liệu) và thiết kế (sơ đồ cấu trúc). Phát triển hướng đối tượng giải quyết những vấn đề này. Phát triển hướng đối tượng sử dụng đối tượng như đơn vị cơ bản của phân tích và thiết kế hệ thống. Một đối tượng kết hợp dữ liệu và các quy trình cụ thể hoạt động trên dữ liệu đó. Dữ liệu được đóng gói trong một đối tượng chỉ có thể được truy cập và sửa đổi bởi các hoạt động, hoặc phương thức, liên quan đến đối tượng đó. Thay vì truyền dữ liệu tới các quy trình, các chương trình gửi một thông điệp yêu cầu một đối tượng thực hiện một hoạt động đã được nhúng trong nó. Hệ thống được mô hình hóa như một tập hợp các đối tượng và mối quan hệ giữa chúng. Vì logic xử lý nằm trong các đối tượng thay vì trong các chương trình phần mềm riêng biệt, các đối tượng phải hợp tác với nhau để làm cho hệ thống hoạt động. Mô hình hóa hướng đối tượng dựa trên các khái niệm về lớp và kế thừa. Các đối tượng thuộc một lớp nhất định, hoặc danh mục chung của các đối tượng tương tự, có các đặc tính của lớp đó. Các lớp đối tượng cũng có thể kế thừa toàn bộ cấu trúc và hành vi của một lớp tổng quát hơn và sau đó thêm các biến và hành vi riêng"
"mục chung của các đối tượng tương tự, có các đặc tính của lớp đó. Các lớp đối tượng cũng có thể kế thừa toàn bộ cấu trúc và hành vi của một lớp tổng quát hơn và sau đó thêm các biến và hành vi riêng biệt cho từng đối tượng. Các lớp đối tượng mới được tạo ra bằng cách chọn một..."
"Nhân viên ID, tên, địa chỉ, ngày tuyển dụng, vị trí, mức lương. Nhân viên lương cố định, nhân viên theo giờ, lương hàng năm, tiền thưởng, mức lương theo giờ, tỷ lệ làm thêm giờ, nhân viên tạm thời, mức lương hàng ngày, giờ làm tính đến, tính toán tiền thưởng, xác định khả năng được tuyển dụng vĩnh viễn. Ý tưởng chính là có thể xây dựng các lớp mới dựa trên lớp hiện có và chỉ rõ cách mà lớp mới khác so với lớp hiện có, thay vì bắt đầu lại từ đầu mỗi lần. Lương cố định, theo giờ, và tạm thời là các lớp con của Nhân viên. Tên lớp nằm ở phần trên của hộp, thuộc tính cho mỗi lớp nằm ở phần giữa, và danh sách các thao tác nằm ở phần dưới mỗi hộp. Các đặc điểm chung của tất cả nhân viên (ID, tên, địa chỉ, ngày tuyển dụng, vị trí và mức lương) được lưu trữ trong lớp cha Nhân viên, trong khi mỗi lớp con lưu trữ các đặc điểm riêng biệt dành cho loại nhân viên đó. Cụ thể cho nhân viên theo giờ, ví dụ, là mức lương theo giờ và tỷ lệ làm thêm giờ. Một đường kẻ liên tục từ lớp con đến lớp cha là một đường dẫn tổng quát cho thấy rằng các lớp con Lương cố định, Theo giờ và Tạm thời có các đặc điểm chung có thể được tổng quát hóa thành lớp cha Nhân viên. Phát triển theo hướng đối tượng mang tính lặp đi lặp lại và gia tăng nhiều hơn so với phát triển theo cấu trúc truyền thống. Trong giai đoạn phân tích, các nhà xây dựng hệ thống tài liệu hóa các yêu cầu chức năng của hệ thống, xác định những thuộc tính quan trọng nhất và những gì hệ thống dự kiến phải thực hiện. Các tương tác giữa hệ thống"
"tích, các nhà xây dựng hệ thống tài liệu hóa các yêu cầu chức năng của hệ thống, xác định những thuộc tính quan trọng nhất và những gì hệ thống dự kiến phải thực hiện. Các tương tác giữa hệ thống và người dùng được phân tích để xác định các đối tượng, mà bao gồm cả dữ liệu và quy trình. Giai đoạn thiết kế hướng đối tượng mô tả cách mà các đối tượng sẽ tương tác với nhau. Các đối tượng tương tự được nhóm lại thành một lớp, và các lớp được phân loại thành các hệ thống phân cấp trong đó lớp con kế thừa các thuộc tính và phương thức từ lớp cha của nó. Hệ thống thông tin được triển khai bằng cách chuyển đổi thiết kế thành mã chương trình, tái sử dụng các lớp đã có sẵn trong thư viện các đối tượng phần mềm tái sử dụng, và thêm các lớp mới được tạo ra trong giai đoạn thiết kế hướng đối tượng. Việc triển khai cũng có thể liên quan đến việc xây dựng một cơ sở dữ liệu hướng đối tượng. Hệ thống cuối cùng phải được kiểm tra và đánh giá một cách kỹ lưỡng. Bởi vì các đối tượng có thể tái sử dụng, phát triển hướng đối tượng có khả năng giảm thời gian và chi phí viết phần mềm vì các tổ chức có thể."
"tài nguyên có thể được tái sử dụng trong việc phát triển các ứng dụng khác. Các hệ thống mới có thể được tạo ra bằng cách sử dụng một số đối tượng hiện có, thay đổi một số đối tượng khác và thêm vài đối tượng mới. Các khung công tác hướng đối tượng đã được phát triển để cung cấp các ứng dụng bán hoàn chỉnh có thể tái sử dụng mà tổ chức có thể tùy chỉnh thêm thành các ứng dụng hoàn chỉnh. Kỹ thuật phần mềm hỗ trợ máy tính (CASE), đôi khi được gọi là kỹ thuật hệ thống hỗ trợ máy tính, cung cấp các công cụ phần mềm để tự động hóa các phương pháp mà chúng tôi vừa mô tả nhằm giảm thiểu công việc lặp đi lặp lại trong quá trình phát triển hệ thống. Các công cụ CASE cung cấp các tiện ích đồ họa tự động để tạo ra các bảng biểu và sơ đồ, trình tạo màn hình và báo cáo, từ điển dữ liệu, các tiện ích báo cáo phong phú, các công cụ phân tích và kiểm tra, trình tạo mã và trình tạo tài liệu. Các công cụ CASE cũng có khả năng xác thực các sơ đồ thiết kế và thông số kỹ thuật. Các thành viên trong nhóm có thể dễ dàng chia sẻ công việc của mình bằng cách truy cập vào các tệp của nhau để xem xét hoặc sửa đổi những gì đã được thực hiện. Những lợi ích về năng suất có thể đạt được nếu các công cụ được sử dụng đúng cách, điều này đòi hỏi kỷ luật tổ chức."
"Xây dựng hệ thống thông tin? Các hệ thống khác nhau về kích thước và độ phức tạp công nghệ cũng như về các vấn đề tổ chức mà chúng được thiết kế để giải quyết. Một số phương pháp xây dựng hệ thống đã được phát triển để giải quyết những khác biệt này. Phần này mô tả các phương pháp thay thế: vòng đời hệ thống truyền thống, nguyên mẫu, gói phần mềm ứng dụng và dịch vụ phần mềm đám mây, phát triển của người sử dụng cuối, và thuê ngoài."
"Vòng đời hệ thống truyền thống là phương pháp lâu đời nhất để xây dựng hệ thống thông tin. Phương pháp vòng đời chia quá trình phát triển hệ thống thành các giai đoạn chính thức, như được minh họa trong Phương pháp vòng đời hệ thống duy trì sự phân công công việc chính thức giữa người dùng cuối và các chuyên gia hệ thống thông tin. Các chuyên gia kỹ thuật, như nhà phân tích hệ thống và lập trình viên, chịu trách nhiệm cho nhiều công việc phân tích, thiết kế và triển khai hệ thống; người dùng cuối có giới hạn trong việc cung cấp yêu cầu thông tin và xem xét công việc của các nhân viên kỹ thuật. Vòng đời cũng nhấn mạnh tính chính thức của các thông số kỹ thuật và tài liệu, vì vậy nhiều tài liệu được tạo ra trong suốt quá trình thực hiện dự án hệ thống. Phương pháp vòng đời hệ thống vẫn được sử dụng để xây dựng các hệ thống lớn, phức tạp, đòi hỏi phân tích yêu cầu nghiêm ngặt và chính thức, các thông số kỹ thuật đã được định trước, và kiểm soát chặt chẽ quá trình xây dựng hệ thống. Tuy nhiên, phương pháp vòng đời hệ thống có thể tốn kém, mất thời gian và kém linh hoạt. Mặc dù những người xây dựng hệ thống có thể quay trở lại giữa các giai đoạn trong vòng đời, nhưng phương pháp vòng đời chủ yếu là một cách tiếp cận theo kiểu thác nước, trong đó các nhiệm vụ ở một giai đoạn phải được hoàn thành trước khi bắt đầu công việc cho giai đoạn tiếp theo. Các hoạt động có thể được lặp lại, nhưng khối lượng công việc mới phải được các bên tham gia thực hiện."
"Phân tích hệ thống Thiết kế hệ thống Lập trình Kiểm tra Chuyển đổi Sản xuất và Bảo trì Các tài liệu cần được tạo ra và các bước cần được xem xét lại nếu yêu cầu và thông số cần được điều chỉnh. Điều này khuyến khích việc cố định các thông số tương đối sớm trong quy trình phát triển. Phương pháp vòng đời cũng không phù hợp với nhiều hệ thống máy tính cá nhân nhỏ, thường có cấu trúc ít chặt chẽ và mang tính cá nhân hóa cao. Mô hình nguyên mẫu Mô hình nguyên mẫu bao gồm việc xây dựng một hệ thống thử nghiệm nhanh chóng và tiết kiệm chi phí để người dùng đánh giá. Bằng cách tương tác với nguyên mẫu, người dùng có thể hiểu rõ hơn về các yêu cầu thông tin của mình. Nguyên mẫu được người dùng chấp thuận có thể được sử dụng làm mẫu để tạo ra hệ thống cuối cùng. Nguyên mẫu là một phiên bản hoạt động của một hệ thống thông tin hoặc một phần của hệ thống, nhưng nó chỉ được coi là một mô hình sơ bộ. Khi hoạt động, nguyên mẫu sẽ được tinh chỉnh thêm cho đến khi nó phù hợp chính xác với yêu cầu của người dùng. Khi thiết kế đã được hoàn thiện, nguyên mẫu có thể được chuyển đổi thành một hệ thống sản xuất hoàn thiện. Quy trình xây dựng một thiết kế sơ bộ, thử nghiệm, tinh chỉnh và thử lại được gọi là quy trình phát triển hệ thống lặp đi lặp lại vì các bước cần thiết để xây dựng một hệ thống có thể được lặp lại nhiều lần. Mô hình nguyên mẫu là rõ ràng lặp lại hơn so với vòng đời truyền thống và nó khuyến khích sự thay đổi trong thiết kế hệ thống. Có thể nói rằng mô hình nguyên mẫu thay thế"
"thể được lặp lại nhiều lần. Mô hình nguyên mẫu là rõ ràng lặp lại hơn so với vòng đời truyền thống và nó khuyến khích sự thay đổi trong thiết kế hệ thống. Có thể nói rằng mô hình nguyên mẫu thay thế việc làm lại không kế hoạch bằng việc lặp lại theo kế hoạch, với mỗi phiên bản phản ánh chính xác hơn yêu cầu của người dùng. Các bước trong mô hình nguyên mẫu Quá trình phát triển một mẫu thử có thể được chia thành bốn bước. Do mẫu thử có thể được phát triển nhanh chóng và với chi phí thấp, những người xây dựng hệ thống có thể thực hiện nhiều lần lặp lại, tiếp tục các bước 3 và 4, để tinh chỉnh và nâng cao mẫu thử trước khi đi đến phiên bản hoạt động cuối cùng."
"Bước 1: Xác định yêu cầu cơ bản  \nBước 2: Phát triển một mẫu thử hoạt động  \nBước 3: Sử dụng mẫu thử  \nCó hài lòng với người dùng?  \nCó  \nBước 4: Sửa đổi và nâng cao mẫu thử  \nMẫu thử hoạt động  \n\nBước 2: Phát triển một mẫu thử ban đầu. Nhà thiết kế hệ thống tạo ra một mẫu thử hoạt động nhanh chóng, sử dụng các công cụ để tạo ra phần mềm một cách nhanh chóng.  \nBước 3: Sử dụng mẫu thử. Người dùng được khuyến khích làm việc với hệ thống để xác định mức độ mẫu thử đáp ứng nhu cầu của họ như thế nào và đưa ra gợi ý để cải thiện mẫu thử.  \nBước 4: Sửa đổi và nâng cao mẫu thử. Người xây dựng hệ thống ghi lại tất cả những thay đổi mà người dùng yêu cầu và tinh chỉnh mẫu thử cho phù hợp. Sau khi mẫu thử đã được sửa đổi, chu trình quay trở lại Bước 3. Các bước 3 và 4 sẽ được lặp lại cho đến khi người dùng hài lòng. Khi không còn lần lặp nào cần thiết, mẫu thử được phê duyệt sẽ trở thành mẫu thử hoạt động cung cấp thông số cuối cùng cho ứng dụng. Đôi khi mẫu thử được chấp nhận như phiên bản sản xuất của hệ thống."
"Lợi ích và Nhược điểm của Việc Tạo Mẫu  \nViệc tạo mẫu hữu ích nhất khi có một số sự không chắc chắn về yêu cầu hoặc giải pháp thiết kế và thường được sử dụng trong việc thiết kế giao diện người dùng cuối của hệ thống thông tin (phần của hệ thống mà người dùng cuối tương tác, như màn hình hiển thị trực tuyến và nhập dữ liệu, báo cáo hoặc trang web). Vì việc tạo mẫu khuyến khích sự tham gia mạnh mẽ của người dùng cuối trong suốt vòng đời phát triển hệ thống, nên nó có khả năng cao hơn để tạo ra những hệ thống đáp ứng yêu cầu của người dùng. Tuy nhiên, việc tạo mẫu nhanh có thể bỏ qua những bước thiết yếu trong phát triển hệ thống. Nếu mẫu thử hoàn chỉnh hoạt động tương đối tốt, ban quản lý...\nCó thể không thấy cần thiết phải lập trình lại, thiết kế lại hoặc lập tài liệu và kiểm tra đầy đủ để xây dựng một hệ thống sản xuất hoàn chỉnh. Một số hệ thống được xây dựng vội vàng này có thể không dễ dàng tiếp nhận một lượng dữ liệu lớn hoặc một số lượng người dùng lớn trong môi trường sản xuất. \n\nPhát triển Người Dùng Kết thúc"
"Phát triển Người Dùng Kết thúc \n\nPhát triển người dùng kết thúc cho phép người dùng cuối, với ít hoặc không có sự trợ giúp chính thức từ các chuyên gia kỹ thuật, tạo ra các hệ thống thông tin đơn giản, giảm thiểu thời gian và các bước cần thiết để sản xuất một ứng dụng hoàn chỉnh. Bằng cách sử dụng các ngôn ngữ truy vấn thân thiện với người dùng và các công cụ báo cáo, phát triển website, đồ họa và phần mềm trên máy tính, người dùng có thể truy cập dữ liệu, tạo báo cáo và phát triển các ứng dụng đơn giản mà không cần sự trợ giúp nhiều từ các nhà phân tích hệ thống chuyên nghiệp hoặc lập trình viên. \n\nMột ngôn ngữ truy vấn là một công cụ phần mềm cung cấp câu trả lời trực tiếp trong thời gian thực cho các câu hỏi không được xác định trước, chẳng hạn như Ai là những đại diện bán hàng có hiệu suất cao nhất? Ngôn ngữ truy vấn thường gắn liền với phần mềm quản lý dữ liệu. Ví dụ, CEMEX, một nhà cung cấp quốc tế sản phẩm cho ngành xây dựng, đã sử dụng WebFOCUS của Information Builders để tạo ra một cổng thông tin báo cáo tự phục vụ nhằm hình dung dữ liệu tài chính và hoạt động."
"Tổng thể, các hệ thống do người dùng phát triển có thể được hoàn thành nhanh chóng hơn so với những hệ thống phát triển thông qua vòng đời hệ thống truyền thống. Việc cho phép người dùng tự chỉ định nhu cầu kinh doanh của mình cải thiện việc thu thập yêu cầu và thường dẫn đến mức độ tham gia và sự hài lòng cao hơn từ phía người dùng với hệ thống. Tuy nhiên, các công cụ phần mềm dành cho người dùng cuối vẫn không thể thay thế các công cụ truyền thống cho một số ứng dụng kinh doanh vì chúng không dễ dàng xử lý việc xử lý một số lượng lớn giao dịch hoặc các ứng dụng có logic quy trình phức tạp và yêu cầu cập nhật nhiều. \n\nViệc tính toán của người dùng cuối cũng đặt ra những rủi ro tổ chức vì nó diễn ra ngoài các cơ chế quản lý và kiểm soát hệ thống thông tin truyền thống. Khi các hệ thống được tạo ra nhanh chóng mà không có một phương pháp phát triển chính thức, việc kiểm tra và lập tài liệu có thể không đầy đủ. Kiểm soát dữ liệu có thể bị mất trong các hệ thống nằm ngoài phòng ban hệ thống thông tin truyền thống. Để giúp các tổ chức tối đa hóa lợi ích của việc phát triển ứng dụng của người dùng cuối, ban quản lý nên kiểm soát việc phát triển các ứng dụng của người dùng cuối bằng cách yêu cầu chứng minh chi phí cho các dự án hệ thống thông tin của người dùng cuối và thiết lập các tiêu chuẩn về phần cứng, phần mềm và chất lượng cho các ứng dụng do người dùng phát triển. \n\nGói Phần Mềm Ứng Dụng, Dịch Vụ Phần Mềm, và Gia Công"
"Gói Phần Mềm Ứng Dụng, Dịch Vụ Phần Mềm, và Gia Công \n\nCác phần mềm này có thể được mua từ nguồn bên ngoài. Các công ty có thể thuê phần mềm từ nhà cung cấp dịch vụ phần mềm trực tuyến, họ có thể mua phần mềm từ một nhà cung cấp thương mại dưới dạng gói để chạy nội bộ, hoặc họ có thể yêu cầu phát triển một ứng dụng tuỳ chỉnh bởi một công ty gia công bên ngoài. \n\nGói Phần Mềm Ứng Dụng và Dịch Vụ Phần Mềm Đám Mây"
"Ngày nay, nhiều hệ thống dựa vào các gói phần mềm ứng dụng có sẵn thương mại hoặc phần mềm như dịch vụ đám mây (SaaS). Ví dụ, các công ty có thể chọn triển khai phần mềm lập kế hoạch nguồn lực doanh nghiệp của Oracle, phần mềm quản lý chuỗi cung ứng hoặc phần mềm quản lý nguồn nhân lực tại chỗ hoặc thanh toán để sử dụng phần mềm này chạy trên nền tảng Oracle Cloud."
"Phần mềm năng suất có mặt dưới cả dạng phiên bản máy tính để bàn và đám mây (Office 365). Nhiều ứng dụng được sử dụng phổ biến trong tất cả các tổ chức kinh doanh như quản lý tiền lương, thu hồi công nợ, sổ cái chung và kiểm soát tồn kho. Đối với những chức năng phổ quát như vậy có các quy trình tiêu chuẩn không thay đổi nhiều theo thời gian, một hệ thống mang tính tổng quát hơn sẽ đáp ứng được nhu cầu của nhiều tổ chức. Nếu một gói phần mềm thương mại hoặc dịch vụ phần mềm đám mây có thể đáp ứng hầu hết các yêu cầu của một tổ chức, công ty sẽ không phải tự viết phần mềm riêng. Công ty có thể tiết kiệm thời gian và chi phí bằng cách sử dụng các chương trình phần mềm đã được viết trước, thiết kế trước và kiểm tra trước từ nhà cung cấp phần mềm. Các nhà cung cấp gói phần mềm và SaaS cung cấp nhiều dịch vụ bảo trì và hỗ trợ liên tục cho hệ thống, bao gồm cả việc nâng cấp để giữ cho hệ thống phù hợp với các phát triển kỹ thuật và kinh doanh hiện tại. Khi theo đuổi một gói phần mềm hoặc giải pháp SaaS, người dùng cuối sẽ chịu trách nhiệm cung cấp các yêu cầu thông tin kinh doanh cho hệ thống, trong khi các chuyên gia hệ thống thông tin sẽ cung cấp các yêu cầu kỹ thuật. Nếu một tổ chức có yêu cầu đặc thù mà gói phần mềm không đáp ứng được, những công cụ này bao gồm khả năng tùy chỉnh. Các tính năng tùy chỉnh cho phép gói phần mềm thương mại hoặc phần mềm dựa trên đám mây được sửa đổi để đáp ứng các yêu cầu độc đáo của tổ chức mà không làm phá hủy tính toàn vẹn của phần mềm. Nếu"
"Các tính năng tùy chỉnh cho phép gói phần mềm thương mại hoặc phần mềm dựa trên đám mây được sửa đổi để đáp ứng các yêu cầu độc đáo của tổ chức mà không làm phá hủy tính toàn vẹn của phần mềm. Nếu cần nhiều tùy chỉnh, công việc lập trình và tùy chỉnh bổ sung có thể trở nên tốn kém và mất thời gian đến mức làm mất đi nhiều lợi thế của các gói phần mềm và dịch vụ. Khi một hệ thống được phát triển bằng cách sử dụng gói phần mềm ứng dụng hoặc dịch vụ phần mềm đám mây, phân tích hệ thống sẽ bao gồm một đánh giá chính thức về gói phần mềm hoặc dịch vụ mà cả người dùng cuối và chuyên gia hệ thống thông tin sẽ tham gia. Các tiêu chí đánh giá quan trọng nhất là các chức năng mà phần mềm cung cấp, tính linh hoạt, thân thiện với người dùng, yêu cầu phần cứng, yêu cầu cơ sở dữ liệu, nỗ lực cài đặt và bảo trì, tài liệu, chất lượng nhà cung cấp và chi phí. Quá trình đánh giá gói hoặc dịch vụ phần mềm thường dựa trên một yêu cầu đề xuất (RFP), là danh sách chi tiết các câu hỏi gửi đến các nhà cung cấp phần mềm. Khi phần mềm từ nguồn bên ngoài được chọn, tổ chức không còn hoàn toàn kiểm soát quá trình thiết kế hệ thống. Thay vì điều chỉnh thông số thiết kế hệ thống trực tiếp theo yêu cầu của người dùng, nỗ lực thiết kế sẽ bao gồm việc cố gắng định hình yêu cầu của người dùng để phù hợp với các tính năng của gói hoặc dịch vụ phần mềm. Nếu yêu cầu của tổ chức xung đột với cách mà gói hoặc dịch vụ phần mềm hoạt động và phần mềm này không thể được tùy chỉnh, tổ chức sẽ phải thích nghi với gói"
"tính năng của gói hoặc dịch vụ phần mềm. Nếu yêu cầu của tổ chức xung đột với cách mà gói hoặc dịch vụ phần mềm hoạt động và phần mềm này không thể được tùy chỉnh, tổ chức sẽ phải thích nghi với gói hoặc dịch vụ phần mềm và thay đổi quy trình của mình. Nếu một doanh nghiệp không muốn sử dụng nguồn lực nội bộ để xây dựng hoặc vận hành hệ thống thông tin, họ có thể thuê ngoài công việc cho một tổ chức bên ngoài chuyên cung cấp các dịch vụ này. Điện toán đám mây và phần mềm như một dịch vụ (SaaS), mà chúng tôi đã mô tả trong Chương 5, là một hình thức thuê ngoài. Các công ty đăng ký sử dụng phần mềm và phần cứng máy tính được cung cấp bởi dịch vụ làm nền tảng kỹ thuật cho hệ thống của họ. Trong một hình thức thuê ngoài khác, một công ty có thể thuê một nhà cung cấp bên ngoài để thiết kế và tạo ra phần mềm cho hệ thống của mình, nhưng công ty đó sẽ vận hành hệ thống trên máy tính của chính mình. Nhà cung cấp thuê ngoài có thể là trong nước hoặc ở nước khác."
"Việc thuê ngoài trong nước chủ yếu được thúc đẩy bởi thực tế rằng các công ty thuê ngoài sở hữu kỹ năng, nguồn lực và tài sản mà khách hàng của họ không có. Việc triển khai một hệ thống quản lý chuỗi cung ứng mới trong một công ty lớn có thể yêu cầu thuê thêm từ 30 đến 50 nhân viên có chuyên môn cụ thể về phần mềm quản lý chuỗi cung ứng được cấp phép từ nhà cung cấp. Thay vì tuyển dụng nhân viên lâu dài, hầu hết trong số họ sẽ cần đào tạo rộng rãi về phần mềm mới và sau đó sẽ bị sa thải sau khi hệ thống mới được xây dựng, thì việc thuê ngoài công việc này trong một khoảng thời gian 12 tháng thường hợp lý hơn và thường tiết kiệm chi phí hơn. Đối với việc thuê ngoài quốc tế, quyết định chủ yếu dựa trên chi phí. Một lập trình viên có tay nghề ở Ấn Độ hoặc Nga kiếm được khoảng 10.000 đến 30.000 đô la mỗi năm so với khoảng 60.000 đô la trở lên cho một lập trình viên tương đương ở Hoa Kỳ. Internet và công nghệ truyền thông giá rẻ đã giảm đáng kể chi phí và khó khăn trong việc phối hợp công việc của các đội ngũ toàn cầu ở các địa điểm ngoài khơi. Ngoài tiết kiệm chi phí, nhiều công ty thuê ngoài quốc tế cung cấp tài sản và kỹ năng công nghệ hàng đầu thế giới. Lạm phát tiền lương bên ngoài Hoa Kỳ gần đây đã làm giảm bớt một số lợi thế này, và một số công việc đã quay trở lại Hoa Kỳ. Các công ty thường không thuê ngoài quá trình khái niệm, phân tích hệ thống và thiết kế hệ thống CNTT cho các công ty nước ngoài, nhưng thường thuê ngoài lập trình, kiểm tra, bảo trì và vận hành hàng"
"Các công ty thường không thuê ngoài quá trình khái niệm, phân tích hệ thống và thiết kế hệ thống CNTT cho các công ty nước ngoài, nhưng thường thuê ngoài lập trình, kiểm tra, bảo trì và vận hành hàng ngày các hệ thống CNTT. Một công ty nhiều khả năng hưởng lợi từ việc thuê ngoài nếu dành thời gian đánh giá tất cả các rủi ro và đảm bảo rằng việc thuê ngoài phù hợp với nhu cầu cụ thể của mình. Mọi công ty thuê ngoài các ứng dụng của mình phải hiểu rõ dự án, bao gồm cả yêu cầu, phương pháp triển khai, lợi ích dự kiến, thành phần chi phí, và các chỉ số để đo hiệu suất. Nhiều công ty đánh giá thấp chi phí cho việc xác định và đánh giá các nhà cung cấp dịch vụ công nghệ thông tin, cho việc chuyển đổi sang một nhà cung cấp mới, cho việc cải thiện phương pháp phát triển phần mềm nội bộ để phù hợp với các nhà cung cấp thuê ngoài, và cho việc giám sát các nhà cung cấp để đảm bảo họ thực hiện các nghĩa vụ hợp đồng của mình. Các công ty sẽ cần phân bổ nguồn lực cho việc tài liệu yêu cầu, gửi RFP, xử lý chi phí đi lại, đàm phán hợp đồng, và quản lý dự án. Các chuyên gia cho rằng việc chuyển giao công việc hoàn toàn cho một đối tác ngoại sẽ mất từ ba tháng đến một năm và đảm bảo rằng nhà cung cấp hiểu rõ về doanh nghiệp của bạn. Việc thuê ngoài quốc tế còn phát sinh thêm chi phí để đối phó với sự khác biệt văn hóa làm giảm năng suất và xử lý các vấn đề nguồn nhân lực, chẳng hạn như chấm dứt hoặc di dời nhân viên trong nước. Tất cả những chi phí ẩn này đã làm giảm một số lợi ích dự kiến từ"
"sự khác biệt văn hóa làm giảm năng suất và xử lý các vấn đề nguồn nhân lực, chẳng hạn như chấm dứt hoặc di dời nhân viên trong nước. Tất cả những chi phí ẩn này đã làm giảm một số lợi ích dự kiến từ việc thuê ngoài. Các công ty nên đặc biệt thận trọng khi sử dụng nhà cung cấp thuê ngoài để phát triển hoặc vận hành các ứng dụng mang lại ưu thế cạnh tranh cho họ. Tập đoàn General Motors (GM) đã thuê ngoài 90% dịch vụ CNTT của mình, bao gồm cả trung tâm dữ liệu và phát triển ứng dụng. Công ty sau đó đã quyết định đưa 90% cơ sở hạ tầng CNTT trở lại trong nội bộ, với lý do chính để cắt giảm thuê ngoài là để lấy lại quyền kiểm soát các hệ thống thông tin của mình, mà họ tin rằng đã ngăn cản công ty phản ứng nhanh với các cơ hội cạnh tranh. Việc đưa các hệ thống thông tin vào trong công ty sẽ giúp GM dễ dàng tiêu chuẩn hóa và tinh giản các hệ thống và trung tâm dữ liệu của mình.  Kịch bản tốt nhất phản ánh các ước tính thấp nhất cho các chi phí bổ sung, và kịch bản tồi tệ nhất phản ánh các ước tính cao nhất cho những chi phí này. Như bạn có thể thấy, các chi phí ẩn làm tăng tổng chi phí của một dự án thuê ngoài quốc tế."
"HÀNG 13.11 TỔNG CHI PHÍ CỦA VIỆC GIA CÔNG NGOẠI TỈNH Nếu một công ty chi 10 triệu đô la cho các hợp đồng gia công ngoại tỉnh, công ty đó thực tế sẽ phải chi thêm 15,2% chi phí bổ sung ngay cả trong kịch bản tốt nhất. Trong kịch bản tồi tệ nhất, nơi có sự sụt giảm đáng kể về năng suất cùng với chi phí chuyển giao và sa thải cao, một công ty có thể mong đợi phải trả thêm tới 57% chi phí trên số tiền 10 triệu đô la đã chi cho hợp đồng gia công. TỔNG CHI PHÍ CỦA VIỆC GIA CÔNG NGOẠI TỈNH Chi phí hợp đồng gia công Chi phí ẩn Kịch bản tốt nhất Tổng chi phí bổ sung Tổng chi phí gia công (TCO) kịch bản tốt nhất Tổng chi phí gia công (TCO) kịch bản tồi tệ nhất $10,000,000 Chi phí bổ sung trong kịch bản tồi tệ nhất Chi phí bổ sung Tổng chi phí Chi phí bổ sung từ 15 đến 57 phần trăm. Ngay cả với những chi phí bổ sung này, nhiều công ty vẫn sẽ thu lợi từ việc gia công ngoại tỉnh nếu họ quản lý công việc một cách hiệu quả. Xây dựng trong kỷ nguyên doanh nghiệp số? Công nghệ và điều kiện kinh doanh đang thay đổi nhanh chóng đến nỗi các công ty đang áp dụng các quy trình phát triển hệ thống ngắn gọn và không chính thức hơn, bao gồm cả những quy trình dành cho ứng dụng di động. Ngoài việc sử dụng các gói phần mềm và dịch vụ phần mềm trực tuyến, các doanh nghiệp đang ngày càng phụ thuộc nhiều hơn vào các kỹ thuật vòng đời nhanh như phát triển ứng dụng nhanh, thiết kế ứng dụng chung, phát triển linh hoạt và các thành phần phần mềm tiêu chuẩn hóa có thể tái sử dụng, có thể được lắp ghép thành"
"vào các kỹ thuật vòng đời nhanh như phát triển ứng dụng nhanh, thiết kế ứng dụng chung, phát triển linh hoạt và các thành phần phần mềm tiêu chuẩn hóa có thể tái sử dụng, có thể được lắp ghép thành một hệ thống phần mềm hoàn chỉnh. Phát triển ứng dụng nhanh (RAD), phát triển linh hoạt và DevOps Thuật ngữ phát triển ứng dụng nhanh (RAD) đề cập đến quy trình tạo ra các hệ thống có thể hoạt động trong thời gian rất ngắn với một số tính linh hoạt để thích ứng khi dự án phát triển. RAD bao gồm việc sử dụng lập trình hình ảnh và các công cụ khác để xây dựng giao diện người dùng đồ họa, tạo mẫu lặp lại các yếu tố chính của hệ thống, tự động hóa quá trình sinh mã chương trình và làm việc nhóm chặt chẽ giữa người dùng cuối và các chuyên gia hệ thống thông tin. Các hệ thống đơn giản thường có thể được lắp ghép từ các thành phần đã được chế tạo sẵn. Quy trình này không nhất thiết phải thực hiện tuần tự, và các phần chính của phát triển có thể diễn ra đồng thời. Đôi khi, một kỹ thuật gọi là thiết kế ứng dụng chung (JAD) được sử dụng để tăng tốc độ tạo ra các yêu cầu thông tin và phát triển thiết kế hệ thống ban đầu. JAD kết hợp người dùng cuối và các chuyên gia hệ thống thông tin."
"các phiên họp tương tác để thảo luận về thiết kế hệ thống. Nếu được chuẩn bị và điều phối đúng cách, các phiên JAD có thể rút ngắn đáng kể giai đoạn thiết kế và thu hút người dùng ở mức độ sâu sắc. Phát triển linh hoạt (Agile development) tập trung vào việc cung cấp nhanh chóng phần mềm hoạt động bằng cách chia dự án lớn thành một loạt các tiểu dự án nhỏ, hoàn thành trong các khoảng thời gian ngắn thông qua quy trình lặp lại, phản hồi liên tục và sự tham gia liên tục của người dùng. Mỗi tiểu dự án được nhóm làm việc như thể đó là một dự án hoàn chỉnh và thường xuyên được phát hành cho khách hàng. Việc cải thiện hoặc bổ sung chức năng mới diễn ra trong vòng lặp tiếp theo khi các nhà phát triển làm rõ yêu cầu. Kiểm tra xảy ra sớm và thường xuyên trong toàn bộ quá trình phát triển. Các phương pháp Agile nhấn mạnh việc giao tiếp trực tiếp, khuyến khích mọi người hợp tác và ra quyết định nhanh chóng, hiệu quả. DevOps được xây dựng dựa trên các nguyên tắc phát triển linh hoạt như một chiến lược tổ chức nhằm tạo ra một văn hóa và môi trường thúc đẩy các thực tiễn phát triển nhanh chóng và linh hoạt hơn. DevOps là viết tắt của phát triển và hoạt động, nhấn mạnh sự hợp tác chặt chẽ giữa các nhà phát triển phần mềm tạo ra ứng dụng và nhân viên hoạt động IT điều hành và duy trì các ứng dụng đó. Truyền thống, trong một doanh nghiệp lớn, một nhóm phát triển ứng dụng sẽ phụ trách thu thập yêu cầu kinh doanh cho một ứng dụng, thiết kế ứng dụng và viết cũng như kiểm tra phần mềm. Nhóm hoạt"
"đó. Truyền thống, trong một doanh nghiệp lớn, một nhóm phát triển ứng dụng sẽ phụ trách thu thập yêu cầu kinh doanh cho một ứng dụng, thiết kế ứng dụng và viết cũng như kiểm tra phần mềm. Nhóm hoạt động sẽ vận hành và duy trì phần mềm một khi nó được đưa vào sản xuất. Vấn đề phát sinh khi nhóm phát triển không nắm rõ các vấn đề vận hành ngăn cản phần mềm hoạt động như mong đợi, đòi hỏi thêm thời gian và công sức để khắc phục phần mềm. DevOps cố gắng thay đổi mối quan hệ này bằng cách thúc đẩy việc giao tiếp và hợp tác tốt hơn và thường xuyên hơn giữa các nhóm phát triển hệ thống và vận hành, cùng với một quy trình làm việc nhanh chóng và ổn định trong suốt toàn bộ vòng đời phát triển ứng dụng. Với loại thay đổi tổ chức này, cùng với các kỹ thuật linh hoạt, quy trình tiêu chuẩn hóa và công cụ tạo và thử nghiệm phần mềm tự động mạnh mẽ hơn, việc xây dựng, kiểm tra và phát hành ứng dụng có thể nhanh chóng và thường xuyên hơn. Ví dụ, DevOps giúp các nhà phát triển tại Netflix thực hiện hàng trăm thay đổi phần mềm mỗi ngày. Phát triển dựa trên thành phần và Dịch vụ Web. Chúng tôi đã mô tả một số lợi ích của phát triển hướng đối tượng để xây dựng các hệ thống có thể ứng phó với những biến đổi nhanh chóng của môi trường kinh doanh, bao gồm cả các ứng dụng web. Để tăng tốc hơn nữa việc tạo ra phần mềm, các nhóm đối tượng đã được lắp ráp thành các thành phần phần mềm cho các chức năng phổ biến như giao diện người dùng đồ họa hoặc khả năng đặt hàng trực tuyến, có thể kết hợp để tạo ra"
"ra phần mềm, các nhóm đối tượng đã được lắp ráp thành các thành phần phần mềm cho các chức năng phổ biến như giao diện người dùng đồ họa hoặc khả năng đặt hàng trực tuyến, có thể kết hợp để tạo ra các ứng dụng kinh doanh quy mô lớn. Cách tiếp cận này trong phát triển phần mềm được gọi là phát triển dựa trên thành phần, cho phép xây dựng một hệ thống bằng cách lắp ráp và tích hợp các thành phần phần mềm hiện có. Ngày càng nhiều, các thành phần phần mềm này đến từ các dịch vụ đám mây. Doanh nghiệp đang sử dụng phát triển dựa trên thành phần để tạo ra các ứng dụng thương mại điện tử bằng cách kết hợp các thành phần có sẵn từ thương mại cho giỏ hàng, xác thực người dùng, công cụ tìm kiếm, và danh mục với các phần mềm cho các yêu cầu kinh doanh độc đáo của riêng họ. Dịch vụ Web và điện toán hướng dịch vụ sử dụng Ngôn ngữ đánh dấu mở rộng (XML) và các giao thức cũng như tiêu chuẩn mở khác, cho phép một ứng dụng liên lạc với ứng dụng khác."
"Không cần lập trình tùy chỉnh để chia sẻ dữ liệu và dịch vụ. Ngoài việc hỗ trợ tích hợp hệ thống nội bộ và bên ngoài, dịch vụ web có thể được sử dụng như công cụ để xây dựng các ứng dụng hệ thống thông tin mới hoặc cải tiến các hệ thống hiện có. Bởi vì các dịch vụ phần mềm này sử dụng một tập hợp tiêu chuẩn chung, chúng hứa hẹn sẽ tiết kiệm chi phí và dễ dàng kết hợp hơn so với các thành phần độc quyền. Dịch vụ web có thể thực hiện một số chức năng độc lập, và cũng có thể kết nối với các dịch vụ web khác để hoàn thành các giao dịch phức tạp hơn, chẳng hạn như kiểm tra tín dụng, mua sắm hoặc đặt hàng sản phẩm. Bằng cách tạo ra các thành phần phần mềm có thể giao tiếp và chia sẻ dữ liệu bất kể hệ điều hành, ngôn ngữ lập trình hoặc thiết bị khách, dịch vụ web có thể mang lại tiết kiệm chi phí đáng kể trong việc xây dựng hệ thống trong khi mở ra những cơ hội hợp tác mới với các công ty khác."
"Phát triển ứng dụng di động: Thiết kế cho thế giới đa màn hình. Ngày nay, nhân viên và khách hàng mong đợi, thậm chí yêu cầu, có thể sử dụng thiết bị di động của họ để lấy thông tin hoặc thực hiện giao dịch ở bất kỳ đâu và vào bất kỳ thời điểm nào. Để đáp ứng những nhu cầu này, các công ty cần phát triển các trang web di động, ứng dụng di động và ứng dụng gốc, cũng như các hệ thống thông tin truyền thống. Khi một tổ chức quyết định phát triển ứng dụng di động, họ phải đưa ra một số lựa chọn quan trọng, bao gồm công nghệ sẽ sử dụng để triển khai những ứng dụng này (liệu nên viết ứng dụng gốc hay ứng dụng web di động) và cách xử lý trang web di động. Một trang web di động là phiên bản của một trang web thông thường được thu gọn về nội dung và điều hướng để dễ dàng truy cập và tìm kiếm trên màn hình di động nhỏ. (Truy cập trang web của Amazon từ máy tính và sau đó từ điện thoại thông minh của bạn để cảm nhận sự khác biệt so với trang web thông thường.) Một ứng dụng web di động là một ứng dụng kết nối Internet với chức năng cụ thể cho các thiết bị di động. Người dùng truy cập các ứng dụng web di động thông qua trình duyệt web trên thiết bị di động của họ. Ứng dụng web chủ yếu nằm trên một máy chủ, được truy cập qua Internet và không cần phải cài đặt trên thiết bị. Ứng dụng tương tự có thể được sử dụng bởi hầu hết các thiết bị có khả năng duyệt web, bất kể thương hiệu của chúng. Một ứng dụng gốc là một ứng dụng độc lập được thiết kế để chạy trên một nền tảng và thiết bị cụ thể."
"có thể được sử dụng bởi hầu hết các thiết bị có khả năng duyệt web, bất kể thương hiệu của chúng. Một ứng dụng gốc là một ứng dụng độc lập được thiết kế để chạy trên một nền tảng và thiết bị cụ thể. Ứng dụng gốc được cài đặt trực tiếp trên thiết bị di động. Các ứng dụng gốc có thể kết nối với Internet để tải dữ liệu xuống và tải lên, và chúng cũng có thể hoạt động với dữ liệu đó ngay cả khi không được kết nối Internet. Ví dụ, một ứng dụng đọc sách điện tử như phần mềm Kindle có thể tải một cuốn sách từ Internet, ngắt kết nối với Internet và hiển thị cuốn sách để đọc. Các ứng dụng di động gốc cung cấp hiệu suất nhanh và độ tin cậy cao. Chúng cũng có khả năng tận dụng các chức năng đặc biệt của thiết bị di động, chẳng hạn như camera hoặc các tính năng cảm ứng. Tuy nhiên, việc phát triển ứng dụng gốc có chi phí cao vì phải lập trình nhiều phiên bản của một ứng dụng cho các hệ điều hành và phần cứng di động khác nhau. Phát triển ứng dụng cho các nền tảng di động khá khác biệt so với phát triển cho máy tính cá nhân và màn hình lớn hơn nhiều của chúng. Kích thước nhỏ của thiết bị di động làm cho việc sử dụng ngón tay và cử chỉ đa chạm dễ dàng hơn so với việc gõ bàn phím. Ứng dụng di động cần được tối ưu hóa cho các tác vụ cụ thể mà chúng sẽ thực hiện, không nên cố gắng thực hiện quá nhiều tác vụ, và nên được thiết kế để dễ sử dụng. Trải nghiệm người dùng cho tương tác di động hoàn toàn khác biệt so với sử dụng máy tính để bàn hoặc laptop. Việc tiết kiệm tài nguyên - băng thông,"
"nhiều tác vụ, và nên được thiết kế để dễ sử dụng. Trải nghiệm người dùng cho tương tác di động hoàn toàn khác biệt so với sử dụng máy tính để bàn hoặc laptop. Việc tiết kiệm tài nguyên - băng thông, không gian màn hình, bộ nhớ, xử lý, nhập dữ liệu và cử chỉ của người dùng - là ưu tiên hàng đầu."
"Khi một trang web được thiết kế cho máy tính để bàn thu nhỏ kích thước xuống màn hình của điện thoại thông minh, người dùng sẽ gặp khó khăn trong việc điều hướng qua trang web. Người dùng phải liên tục phóng to, thu nhỏ và cuộn để tìm kiếm thông tin liên quan. Do đó, các công ty cần thiết kế trang web dành riêng cho giao diện di động và xây dựng nhiều trang web di động khác nhau để đáp ứng nhu cầu của điện thoại thông minh, máy tính bảng và trình duyệt máy tính. Điều này tương đương với việc có ít nhất ba trang web với nội dung, bảo trì và chi phí riêng biệt. Hiện nay, các trang web biết thiết bị mà bạn đang sử dụng vì trình duyệt của bạn sẽ gửi thông tin này đến máy chủ khi bạn đăng nhập. Dựa trên thông tin này, máy chủ sẽ cung cấp màn hình phù hợp. Một giải pháp cho vấn đề có nhiều trang web là sử dụng thiết kế web phản hồi. Thiết kế web phản hồi cho phép các trang web tự động thay đổi bố cục theo độ phân giải màn hình của người truy cập, dù trên máy tính để bàn, laptop, máy tính bảng hay điện thoại thông minh. Thiết kế phản hồi sử dụng các công cụ như bố cục lưới linh hoạt, hình ảnh linh hoạt và truy vấn phương tiện để tối ưu hóa thiết kế cho các ngữ cảnh xem khác nhau. Điều này loại bỏ nhu cầu thiết kế và phát triển riêng biệt cho mỗi thiết bị mới. HTML5 đã được giới thiệu để hỗ trợ phát triển các ứng dụng di động đa nền tảng. Phần Tương tác về Công nghệ mô tả cách một số công ty đã giải quyết các thách thức phát triển di động mà chúng ta vừa xác định. Dưới đây là cách"
"để hỗ trợ phát triển các ứng dụng di động đa nền tảng. Phần Tương tác về Công nghệ mô tả cách một số công ty đã giải quyết các thách thức phát triển di động mà chúng ta vừa xác định. Dưới đây là cách Chương 13 và cuốn sách này có thể giúp bạn tìm kiếm việc làm ở vị trí phân tích hệ thống kinh doanh junior. Công ty Systems 100 Technology Consultants, một công ty dịch vụ công nghệ chuyên nghiệp có trụ sở tại Chicago, cung cấp dịch vụ tuyển dụng và tư vấn công nghệ thông tin cho các công ty khác ở Mỹ và hiện đang tuyển dụng một vị trí phân tích hệ thống kinh doanh junior. Công ty cung cấp tư vấn kinh doanh và công nghệ cho hơn 150 công ty trong các lĩnh vực dịch vụ tài chính, chăm sóc sức khỏe, truyền thông, vận tải, năng lượng, hàng tiêu dùng và công nghệ, giúp họ thực hiện các sáng kiến kinh doanh và công nghệ một cách hiệu quả về chi phí. Mô tả vị trí Một phân tích hệ thống kinh doanh junior được kỳ vọng sẽ làm việc trong các nhóm dự án trong tất cả các giai đoạn của vòng đời phát triển phần mềm, bao gồm xác định yêu cầu kinh doanh, phát triển thông số kỹ thuật thiết kế chi tiết và làm việc với các nhà phát triển ứng dụng để xây dựng hoặc nâng cấp các hệ thống và quy trình kinh doanh. Trước khi đảm nhận các nhiệm vụ, các phân tích hệ thống kinh doanh mới sẽ nhận được đào tạo về nền tảng mà họ cần để thành công trong nhiệm vụ của mình. Nhiệm vụ đầu tiên là làm việc theo hợp đồng cho một công ty phân tích dữ liệu khởi nghiệp ở Michigan phục vụ cho các tổ chức vừa và nhỏ. Phân"
"nền tảng mà họ cần để thành công trong nhiệm vụ của mình. Nhiệm vụ đầu tiên là làm việc theo hợp đồng cho một công ty phân tích dữ liệu khởi nghiệp ở Michigan phục vụ cho các tổ chức vừa và nhỏ. Phân tích hệ thống kinh doanh junior sẽ làm việc cùng một nhóm các nhà khoa học dữ liệu để giúp khách hàng tích hợp các nguồn dữ liệu, làm sạch và tổ chức dữ liệu lộn xộn, đồng thời cải thiện sự hiểu biết về các mẫu và xu hướng."
"CÔNG NGHỆ PHIÊN HÀNH TƯƠI TƠI"
"Phát triển hệ thống khác biệt đối với ứng dụng di động\n\nGần như tất cả các doanh nghiệp hiện nay đều muốn triển khai các ứng dụng di động và họ mong muốn các ứng dụng này được phát triển trong khoảng thời gian rất ngắn. Tuy nhiên, điều này không hề đơn giản. Phát triển các ứng dụng di động thành công đặt ra một số thách thức riêng biệt. Trải nghiệm người dùng trên thiết bị di động về cơ bản khác biệt so với trên máy tính cá nhân. Có các tính năng đặc biệt trên thiết bị di động như dịch vụ dựa trên vị trí, điều này mang lại cho các công ty khả năng tương tác với khách hàng theo những cách mới đầy ý nghĩa. Các doanh nghiệp cần phải tận dụng các tính năng đó trong khi vẫn mang đến một trải nghiệm phù hợp với màn hình nhỏ."
"Có nhiều nền tảng phần mềm di động, bao gồm iOS, Android và Windows 10, và một công ty có thể cần một phiên bản khác của một ứng dụng để chạy trên từng nền tảng cũng như trên các thiết bị có kích thước và khả năng khác nhau. Các thiết bị di động có thể nhỏ gọn, đeo trên cổ tay hoặc có thể có kích thước lớn với màn hình tablet độ phân giải cao. Chúng có thể bao gồm cảm biến, đầu ra âm thanh và thậm chí là màn hình kết hợp giữa hình ảnh thực và ảo. Những người phát triển hệ thống cần hiểu cách, lý do và địa điểm mà khách hàng sử dụng các thiết bị di động và cách mà những trải nghiệm di động này thay đổi tương tác và hành vi trong kinh doanh. Không thể chỉ chuyển tiếp một trang web hoặc ứng dụng dành cho máy tính để bàn sang smartphone hoặc tablet. Đây là một quy trình phát triển hệ thống khác biệt."
"Nhiều doanh nghiệp cần các ứng dụng kết nối với các hệ thống của công ty và hoạt động trên cả máy tính để bàn lẫn thiết bị di động. Chẳng hạn như Great-West Financial, công ty cung cấp dịch vụ nghỉ hưu lớn thứ hai tại Hoa Kỳ với khoảng 461 tỷ USD tài sản quản lý. Nhân viên của công ty này dành nhiều thời gian phục vụ khách hàng tại hiện trường thay vì trong văn phòng và cần kết nối với hệ thống ERP Financials của công ty từ bất cứ đâu để xử lý việc phê duyệt hóa đơn chi trả. Great-West đã quyết định triển khai ứng dụng Dolphin Mobile Approvals cho mục đích này. Họ đã chọn Dolphin vì ứng dụng này có thể xử lý tất cả quy trình SAP của công ty trong một ứng dụng duy nhất, giúp nhân viên không phải đến một nơi để phê duyệt hóa đơn và một nơi khác để phê duyệt mọi thứ khác."
"Great-West đã cấu hình ứng dụng để giao diện của nó trông và cảm nhận tương tự như ứng dụng mà người dùng truy cập trên máy tính để bàn của họ. Người dùng thấy cùng các trường dữ liệu trên tiêu đề hóa đơn và mục hàng trên thiết bị di động như trên màn hình máy tính để bàn, và các bước trong quy trình phê duyệt hóa đơn cũng giống nhau. Tuy nhiên, do khó khăn trong việc chuyển đổi giữa các màn hình khác nhau trên thiết bị di động, ứng dụng di động đã tích hợp các mã phê duyệt hóa đơn cần thiết vào chi tiết từng mục hàng thay vì hiển thị chúng trên tệp đính kèm PDF. Trên máy tính để bàn, người dùng phải đăng nhập vào hệ thống SAP để xem hóa đơn và sẽ nhận thông báo rằng một hóa đơn sẵn sàng để phê duyệt qua email. Thông báo pop-up trên ứng dụng di động loại bỏ việc người dùng phải đăng nhập vào ứng dụng trước khi biết về hóa đơn."
"Trước khi triển khai ứng dụng di động, Great-West cần thiết lập một cơ sở hạ tầng di động phù hợp, xem xét các yếu tố như bảo mật, đăng nhập và tích hợp phía sau. Bởi đây là ứng dụng di động đầu tiên của công ty kết nối với hệ thống SAP, công ty phải đảm bảo ứng dụng di động có thể tích hợp toàn bộ quy trình làm việc từ hệ thống SAP và tất cả dữ liệu được mã hóa và bảo mật. Great-West đã mua 1.000 giấy phép cho ứng dụng phê duyệt di động (tương thích với cả thiết bị iOS và Android) và cấp thiết bị cho các giám đốc cấp cao và những người sử dụng hóa đơn nhiều nhất. Những người dùng còn lại được phép sử dụng ứng dụng trên thiết bị cá nhân của họ miễn là tuân thủ chính sách BYOD của công ty."
"Trong vài năm qua, United Parcel Service (UPS) đã cung cấp ứng dụng di động UPS Mobile cho khách hàng để theo dõi hàng hóa của họ và có thông tin giá cả qua smartphone và tablet. Các nhà phát triển UPS Ban đầu đã viết và duy trì nhiều phiên bản khác nhau của UPS Mobile, bao gồm một phiên bản cho iOS bằng Objective-C và một phiên bản khác cho Android bằng Java. Điều này đồng nghĩa với việc công việc của các nhà phát triển ứng dụng di động của UPS tăng gấp đôi. Các phiên bản khác nhau của ứng dụng có thể không được cập nhật cùng lúc, dẫn đến việc khách hàng sử dụng các loại thiết bị khác nhau không luôn nhận được các tính năng mới nhất đồng thời. UPS đã có thể chuyển ứng dụng UPS Mobile sang một nền tảng phát triển duy nhất, nhưng điều này đòi hỏi một khối lượng công việc khổng lồ. Công ty đã chọn Visual Studio Tools cho Xamarin vì nó cho phép các nhà phát triển chia sẻ một cơ sở mã C# trên nhiều nền tảng và cung cấp các ứng dụng hoàn toàn gốc cho khách hàng. Xamarin cũng có khả năng tích hợp tốt hơn."
"với các thiết bị di động có phần cứng và khả năng độc đáo. Mặc dù UPS phải xây dựng lại hơn 130.000 dòng mã đã được viết trong vòng bốn năm, ban quản lý nhận ra rằng việc viết lại UPS Mobile sẽ mang lại tiết kiệm thời gian và chi phí đáng kể trong tương lai. Chương 14 của tác giả đề cập đến quản lý và thực hiện dự án CNTT. Hãy chuẩn bị để thảo luận về bất kỳ trải nghiệm phát triển hệ thống nào bạn đã có, bao gồm việc phân tích hoặc thiết kế lại quy trình kinh doanh. Đồng thời, hãy chuẩn bị để bàn luận về các thực tiễn phát triển hệ thống hiện đại, công việc và các kỹ năng bạn cần thể hiện. Mang theo các mẫu công việc bạn đã thực hiện với phần mềm này. Bày tỏ sự quan tâm đến việc học hỏi những điều bạn chưa biết về các công cụ này để hoàn thành nhiệm vụ công việc của bạn. Tóm tắt nội dung Xây dựng một hệ thống thông tin mới là một dạng thay đổi tổ chức có kế hoạch. Có bốn loại thay đổi được hỗ trợ bởi công nghệ: (1) tự động hóa, (2) hợp lý hóa quy trình, (3) thiết kế lại quy trình kinh doanh và (4) thay đổi cấp độ, với những thay đổi sâu rộng mang lại rủi ro và phần thưởng lớn nhất. Nhiều tổ chức hiện đang sử dụng quản lý quy trình kinh doanh để thiết kế lại các luồng công việc và quy trình kinh doanh nhằm đạt được những đột phá năng suất đáng kể. Quản lý quy trình kinh doanh cũng hữu ích trong việc thúc đẩy quản lý chất lượng tổng thể (TQM), Six Sigma và các sáng kiến khác nhằm cải tiến quy trình từng bước. Các hoạt động cốt lõi trong phát triển hệ thống bao gồm phân tích hệ"
"hữu ích trong việc thúc đẩy quản lý chất lượng tổng thể (TQM), Six Sigma và các sáng kiến khác nhằm cải tiến quy trình từng bước. Các hoạt động cốt lõi trong phát triển hệ thống bao gồm phân tích hệ thống, thiết kế hệ thống, lập trình, kiểm thử, chuyển đổi, sản xuất và bảo trì. Phân tích hệ thống là việc nghiên cứu và phân tích các vấn đề của các hệ thống hiện tại và xác định các yêu cầu cho các giải pháp của chúng. Thiết kế hệ thống cung cấp các thông số kỹ thuật cho một giải pháp hệ thống thông tin, cho thấy cách các thành phần kỹ thuật và tổ chức kết hợp với nhau. Hai phương pháp chính để mô hình hóa và thiết kế hệ thống thông tin là phương pháp cấu trúc và phát triển hướng đối tượng. Phương pháp cấu trúc tập trung vào việc mô hình hóa các quy trình và dữ liệu một cách tách biệt. Sơ đồ luồng dữ liệu là công cụ chính cho phân tích cấu trúc, và biểu đồ cấu trúc là công cụ chính để đại diện cho thiết kế phần mềm cấu trúc. Phát triển hướng đối tượng mô hình hóa một hệ thống như một tập hợp các đối tượng kết hợp quy trình và dữ liệu. Mô hình hóa hướng đối tượng dựa trên các khái niệm về lớp và kế thừa. Phương pháp cổ điển nhất để xây dựng hệ thống là vòng đời hệ thống, yêu cầu rằng các hệ thống thông tin được phát triển theo các giai đoạn chính thức. Các giai đoạn phải diễn ra tuần tự và có đầu ra được xác định; mỗi giai đoạn yêu cầu sự phê duyệt chính thức trước khi giai đoạn tiếp theo có thể bắt đầu. Vòng đời hệ thống hữu ích cho các dự án lớn cần thông số kỹ thuật chính"
"tuần tự và có đầu ra được xác định; mỗi giai đoạn yêu cầu sự phê duyệt chính thức trước khi giai đoạn tiếp theo có thể bắt đầu. Vòng đời hệ thống hữu ích cho các dự án lớn cần thông số kỹ thuật chính thức và kiểm soát quản lý chặt chẽ trong mỗi giai đoạn xây dựng hệ thống, nhưng nó rất cứng nhắc và tốn kém. Giai đoạn tạo mẫu bao gồm xây dựng một hệ thống thử nghiệm một cách nhanh chóng và tiết kiệm cho người dùng cuối tương tác và đánh giá. Tạo mẫu khuyến khích sự tham gia của người dùng cuối trong phát triển hệ thống và lặp lại thiết kế cho đến khi các thông số kỹ thuật được ghi lại chính xác. Việc tạo ra các mẫu một cách nhanh chóng có thể dẫn đến các hệ thống chưa được kiểm tra hoặc tài liệu hoàn chỉnh hoặc có thể không phù hợp về mặt kỹ thuật cho một môi trường sản xuất."
"Việc sử dụng gói phần mềm hoặc dịch vụ phần mềm trực tuyến (SaaS) giúp giảm bớt khối lượng công việc thiết kế, lập trình, kiểm tra, cài đặt và bảo trì cần thiết để xây dựng một hệ thống. Các gói phần mềm ứng dụng hoặc SaaS rất hữu ích nếu một công ty không có đội ngũ nội bộ về hệ thống thông tin hoặc nguồn tài chính để phát triển một hệ thống tùy chỉnh. Để đáp ứng các yêu cầu độc đáo của tổ chức, các gói có thể yêu cầu các thay đổi tốn kém và mất nhiều thời gian. Phát triển bởi người dùng cuối là sự phát triển các hệ thống thông tin bởi chính người dùng, có thể là một mình hoặc với sự trợ giúp tối thiểu của các chuyên gia hệ thống thông tin. Các hệ thống do người dùng cuối phát triển có thể được tạo ra một cách nhanh chóng và không chính thức bằng cách sử dụng các công cụ phần mềm thân thiện với người dùng. Tuy nhiên, phát triển bởi người dùng cuối có thể tạo ra các hệ thống thông tin không nhất thiết đáp ứng các tiêu chuẩn đảm bảo chất lượng và không dễ dàng kiểm soát bằng các phương tiện truyền thống. Thuê ngoài là việc sử dụng nhà cung cấp bên ngoài để xây dựng (hoặc vận hành) hệ thống thông tin của một công ty thay vì sử dụng đội ngũ nội bộ. Thuê ngoài có thể tiết kiệm chi phí phát triển ứng dụng hoặc cho phép các công ty phát triển ứng dụng mà không cần đến đội ngũ nội bộ về hệ thống thông tin. Tuy nhiên, các công ty có nguy cơ mất kiểm soát đối với hệ thống thông tin của mình và trở nên quá phụ thuộc vào các nhà cung cấp bên ngoài. Thuê ngoài cũng liên quan đến các chi"
"hệ thống thông tin. Tuy nhiên, các công ty có nguy cơ mất kiểm soát đối với hệ thống thông tin của mình và trở nên quá phụ thuộc vào các nhà cung cấp bên ngoài. Thuê ngoài cũng liên quan đến các chi phí ẩn, đặc biệt khi công việc được chuyển ra nước ngoài. Các công ty đang chú trọng đến thiết kế ứng dụng nhanh (RAD), thiết kế ứng dụng chung (JAD), phát triển linh hoạt và các thành phần phần mềm có thể tái sử dụng để tăng tốc quy trình phát triển hệ thống. RAD sử dụng phần mềm hướng đối tượng, lập trình trực quan, tạo mẫu và các công cụ để phát triển hệ thống rất nhanh chóng. Phát triển linh hoạt chia một dự án lớn thành nhiều tiểu dự án nhỏ được hoàn thành trong thời gian ngắn thông qua việc lặp đi lặp lại và phản hồi liên tục. Phát triển dựa trên thành phần thúc đẩy phát triển ứng dụng bằng cách nhóm các đối tượng vào các bộ thành phần phần mềm có thể kết hợp để tạo ra các ứng dụng kinh doanh quy mô lớn. DevOps nhấn mạnh sự hợp tác chặt chẽ giữa các nhà phát triển phần mềm tạo ra ứng dụng và đội ngũ IT vận hành chạy và bảo trì các ứng dụng. Các dịch vụ web cung cấp một bộ tiêu chuẩn chung cho phép các tổ chức liên kết hệ thống của họ bất kể nền tảng công nghệ thông qua kiến trúc cắm và chạy tiêu chuẩn. Phát triển ứng dụng di động cần chú ý đến sự đơn giản, tính khả dụng và sự cần thiết phải tối ưu hóa các tác vụ cho màn hình nhỏ."
"Các dự án trong phần này mang đến cho bạn trải nghiệm thực tế trong việc phân tích quy trình kinh doanh, thiết kế và xây dựng hệ thống khách hàng cho việc bán ô tô, cũng như phân tích các yêu cầu thông tin từ trang web.\n\nVấn Đề Ra Quyết Định Quản Lý"
"Vấn Đề Ra Quyết Định Quản Lý\n\nVới một khoản phí bổ sung, khách hàng mua thiết bị của Sears Roebuck, chẳng hạn như máy giặt, có thể mua hợp đồng dịch vụ ba năm. Hợp đồng này cung cấp dịch vụ sửa chữa miễn phí và các linh kiện cho thiết bị đã chỉ định khi sử dụng nhà cung cấp dịch vụ được Sears ủy quyền. Khi một người có hợp đồng dịch vụ của Sears cần sửa chữa thiết bị, chẳng hạn như máy giặt, họ sẽ gọi cho bộ phận Sửa Chữa & Linh Kiện của Sears để đặt lịch hẹn. Bộ phận này sẽ sắp xếp cuộc hẹn và thông báo cho người gọi về ngày và thời gian ước tính của cuộc hẹn. Kỹ thuật viên sửa chữa sẽ đến trong khoảng thời gian đã chỉ định và chẩn đoán vấn đề. Nếu vấn đề phát sinh từ một linh kiện hỏng, kỹ thuật viên sẽ thay thế linh kiện nếu có sẵn hoặc sẽ đặt hàng linh kiện thay thế từ Sears. Nếu linh kiện không có sẵn tại Sears, Sears sẽ đặt hàng và thông báo cho khách hàng khoảng thời gian dự kiến mà linh kiện sẽ đến. Linh kiện sẽ được chuyển trực tiếp đến khách hàng. Sau khi linh kiện được giao, khách hàng phải gọi cho Sears để đặt lịch hẹn lần hai cho kỹ thuật viên đến thay thế linh kiện đã đặt hàng. Quy trình này rất lâu dài. Có thể mất hai tuần để đặt lịch sửa chữa lần đầu, thêm hai tuần nữa để đặt hàng và nhận linh kiện cần thiết, và thêm một tuần để đặt lịch sửa chữa lần hai sau khi nhận được linh kiện đã đặt.\n\n\nLập Kế Hoạch"
"Lập Kế Hoạch\n\nKế hoạch sản xuất được tạo ra dựa trên ước đoán nhu cầu của mỗi sản phẩm, dựa trên số lượng sản phẩm đã được đặt hàng trong quá khứ. Nếu khách hàng đặt hàng đột xuất hoặc yêu cầu thay đổi đơn hàng đã đặt, sẽ không có cách nào để điều chỉnh kế hoạch sản xuất. Công ty có thể phải thông báo với khách hàng rằng không thể thực hiện đơn hàng của họ, hoặc có thể phát sinh chi phí bổ sung cho việc duy trì kho hàng để ngăn ngừa tình trạng hết hàng. Vào cuối mỗi tháng, đơn hàng được tổng hợp và nhập thủ công vào hệ thống lập kế hoạch sản xuất của công ty. Dữ liệu từ hệ thống sản xuất và tồn kho của các tháng trước được nhập thủ công vào hệ thống quản lý đơn hàng của công ty. Các nhà phân tích từ bộ phận bán hàng và bộ phận sản xuất sẽ phân tích dữ liệu từ các hệ thống tương ứng để xác định mục tiêu bán hàng và mục tiêu sản xuất cho tháng tiếp theo. Những ước tính này thường khác nhau. Sau đó, các nhà phân tích sẽ gặp nhau trong một cuộc họp lập kế hoạch cấp cao để điều chỉnh mục tiêu sản xuất và bán hàng, xem xét các mục tiêu của ban lãnh đạo về thị phần, doanh thu và lợi nhuận. Kết quả của cuộc họp là một lịch sản xuất tổng thể đã được hoàn thiện. Toàn bộ quy trình lập kế hoạch sản xuất mất 17 ngày làm việc để hoàn tất. Chín trong số những ngày này là cần thiết để nhập dữ liệu và xác minh. Số ngày còn lại được sử dụng để phát triển và điều chỉnh mục tiêu sản xuất và bán hàng cũng như hoàn thiện lịch sản xuất tổng thể."
"Cải Thiện Ra Quyết Định: Sử Dụng Phần Mềm Cơ Sở Dữ Liệu để Thiết Kế Hệ Thống Khách Hàng cho Bán Ô Tô\n\nKỹ năng phần mềm: Thiết kế cơ sở dữ liệu, truy vấn, báo cáo và biểu mẫu.\n\nKỹ năng kinh doanh: Phân tích khách hàng và khách hàng tiềm năng.\n\nAce Auto Dealers chuyên bán các xe mới của Subaru tại Portland, Oregon. Công ty quảng cáo trên các tờ báo địa phương và được liệt kê là đại lý ủy quyền trên trang web của Subaru cũng như trên các trang web lớn khác dành cho người mua ô tô. Công ty hưởng lợi từ uy tín tốt và sự nhận diện thương hiệu địa phương.\nAce không tin rằng mình có đủ thông tin về khách hàng. Công ty không thể dễ dàng xác định được những khách hàng tiềm năng nào đã thực hiện mua sắm, cũng như không thể nhận diện được những điểm tiếp xúc nào đã tạo ra số lượng khách hàng tiềm năng hoặc doanh số thực tế lớn nhất, để từ đó có thể tập trung quảng cáo và tiếp thị nhiều hơn vào những kênh mang lại doanh thu cao nhất. Khách hàng có biết đến Ace từ quảng cáo trên báo chí, từ truyền miệng, hay từ trên mạng? \n\nHãy chuẩn bị một báo cáo phân tích hệ thống chi tiết về vấn đề của Ace và một giải pháp hệ thống có thể được triển khai sử dụng phần mềm quản lý cơ sở dữ liệu trên máy tính. Sau đó, sử dụng phần mềm cơ sở dữ liệu để phát triển một giải pháp hệ thống đơn giản. Trong MyLab MIS, bạn sẽ tìm thấy thêm thông tin về Ace và yêu cầu thông tin của công ty để giúp bạn phát triển giải pháp. \n\nĐạt được sự Xuất sắc trong Vận hành: Phân tích Thiết kế Website và Yêu cầu Thông tin"
"Đạt được sự Xuất sắc trong Vận hành: Phân tích Thiết kế Website và Yêu cầu Thông tin \n\nKỹ năng phần mềm: Phần mềm trình duyệt web \n\nKỹ năng kinh doanh: Phân tích yêu cầu thông tin, thiết kế website cung cấp bởi trang web đó và yêu cầu thông tin của nó. \nBốn năm trước, Hitachi Consulting quyết định mở rộng mô hình kinh doanh của mình để bao gồm các giải pháp trọn gói và tùy chỉnh kết hợp các phương pháp tốt nhất trong kinh doanh với công nghệ tiên tiến như Internet Vạn Vật (IoT) và các dịch vụ tư vấn truyền thống. Hitachi đang thực hiện điều này ở nhiều lĩnh vực như đường sắt và giao thông vận tải, năng lượng, nước, đô thị, chăm sóc sức khỏe, và an toàn công cộng. Một yếu tố thành công quan trọng là hợp tác với các đối tác, khách hàng và các bên liên quan khác trong toàn ngành. Những sản phẩm mới này yêu cầu nhân sự với tài năng và kỹ năng phù hợp để cung cấp danh mục giải pháp mới của Hitachi Consulting."
"Công ty phải cải cách bộ phận Nhân sự của mình hoạt động một cách chiến lược hơn để có nguồn nhân lực phù hợp cho công việc. Hitachi Consulting phải đối mặt với nhiều hệ thống nhân sự địa phương khác nhau (và trong một số trường hợp chỉ là bảng tính) lưu giữ dữ liệu nhân viên quý giá. Các hệ thống này không tích hợp với hệ thống nhân sự lỗi thời của công ty tại Hoa Kỳ. Không có cách nào để dễ dàng có cái nhìn tổng thể về nguồn nhân lực của công ty. Khi một giám đốc điều hành yêu cầu dữ liệu toàn công ty cho việc ra quyết định, nhân viên nhân sự phải thủ công thu thập và tổng hợp dữ liệu cần thiết. Quá trình này mất nhiều ngày. Việc phải xử lý những quy trình thủ công phức tạp và dữ liệu tách biệt đã ngăn cản công ty hoạt động dưới một nguồn thông tin duy nhất. Để tiến về phía trước, chức năng Nhân sự của công ty cần được chuyển đổi và hệ thống nhân sự lỗi thời cần phải được thay thế. Một ưu tiên hàng đầu là cải thiện quy trình kinh doanh để thu hút và phát triển tài năng, giúp Hitachi Consulting tìm được người phù hợp một cách tốt hơn, nhanh hơn và tiết kiệm hơn."
"Trong quá khứ, Hitachi Consulting thường chờ đến khi có vị trí mới mở ra mới bắt đầu tuyển dụng. Chức năng nhân sự mới của họ nhằm phát triển mối quan hệ với các ứng viên hàng đầu, được thúc đẩy bởi sự giới thiệu từ nhân viên và mạng xã hội. Thông qua các cuộc đối thoại liên tục, nhân viên nhân sự có thể xác định những tài năng nổi bật và nhanh chóng tuyển dụng họ khi thời điểm phù hợp. Hitachi hy vọng hệ thống nhân sự mới sẽ giảm chi phí tuyển dụng, cải thiện trải nghiệm, sự gắn kết và sự giữ chân của ứng viên, cũng như mở rộng sự công nhận Hitachi là nhà tuyển dụng lý tưởng. \n\nMột ưu tiên cao khác là có một hệ thống ghi chép duy nhất làm nguồn thông tin chính thức cho tất cả các khu vực của HCC với một kho lưu trữ trung tâm cho dữ liệu nhân sự. Với một ứng dụng đám mây toàn doanh nghiệp, các nhà quản lý nhân sự và công nghệ thông tin có thể giao quyền truy cập dữ liệu từ xa dựa trên vai trò và trách nhiệm, đồng thời thực thi các chính sách bảo mật toàn cầu và quy định. Lực lượng lao động HCC thường làm việc tại các địa điểm của khách hàng và cần truy cập vào dữ liệu và ứng dụng doanh nghiệp từ máy tính bảng và điện thoại thông minh, vì vậy giải pháp mới cần cung cấp khả năng truy cập di động, điều mà hệ thống lỗi thời của HCC không thể thực hiện. Các mục tiêu khác bao gồm mở rộng khả năng phân tích và báo cáo, và một nền tảng toàn cầu để tinh gọn quản lý bồi thường, phúc lợi và quản lý vắng mặt."
"Một ủy ban lãnh đạo bao gồm lãnh đạo nhân sự, kinh doanh và công nghệ thông tin đã đánh giá các tùy chọn công nghệ khác nhau và chọn Oracle HCM Cloud làm giải pháp. Oracle HCM Cloud là một hệ thống dựa trên đám mây cho Quản lý Nguồn Nhân Lực (HCM), cung cấp một giải pháp nhân sự toàn cầu duy nhất để duy trì hồ sơ nhân viên, đồng nhất hóa các quy trình nhân sự chung, thu hút, phát triển và giữ chân tài năng hàng đầu, cải thiện năng suất lao động, kiểm soát chi phí lao động và đáp ứng nhu cầu bồi thường nhân viên đơn giản và phức tạp. Hệ thống có khả năng tuyển dụng ứng viên, quản lý hiệu suất, phát triển sự nghiệp, cung cấp học tập, thực hiện đánh giá tài năng và lập kế hoạch kế thừa. Hitachi Consulting đang phát triển nhanh chóng, và sự linh hoạt của điện toán đám mây đã giúp ích rất nhiều khi..."
"Công ty đã phải nhanh chóng tiếp nhận một số lượng lớn nhân viên từ một thương vụ mua lại. Có một thời điểm, Hitachi Consulting chỉ có chưa đầy hai tuần để đưa hàng trăm nhân viên mới vào hệ thống quản lý nhân sự (HR) cũ của mình. Với hệ thống cũ, việc đảm bảo công ty có đủ tài nguyên phần cứng và phần mềm để đáp ứng nhu cầu của những nhân viên mới mà không phải chi tiêu quá nhiều cho cơ sở hạ tầng bổ sung, hoặc mạo hiểm hơn, là duy trì mức chi tiêu cho cơ sở hạ tầng mà hệ thống không thể xử lý sự phát triển trong tương lai, đã trở thành một thách thức. Với nền tảng đám mây, Hitachi Consulting có thể dễ dàng đưa các nhân viên mới vào ứng dụng HR và điều chỉnh hợp đồng của mình với Oracle để phù hợp với số lượng nhân viên tăng thêm. Việc chuyển đổi sang nhà cung cấp dịch vụ phần mềm đám mây cũng sẽ giải phóng đội ngũ IT của Hitachi Consulting khỏi các nhiệm vụ bảo trì trung tâm dữ liệu thường xuyên, để dành nhiều thời gian hơn cho các sáng kiến kinh doanh chiến lược, chẳng hạn như tạo ra các báo cáo và phân tích cho các nhà ra quyết định. Oracle HCM Cloud đáp ứng tất cả những yêu cầu này, đồng thời còn có giao diện hiện đại hợp lý hơn, giúp cho hệ thống dễ sử dụng hơn nhiều so với giao diện lỗi thời của hệ thống HR trước đây. Sự linh hoạt của nền tảng đám mây Oracle cũng thu hút ủy ban điều hành. Với nhiều dịch vụ đám mây, khách hàng phải điều chỉnh quy trình của mình để đáp ứng các yêu cầu của dịch vụ. Oracle HCM Cloud cung cấp các quy trình tiêu chuẩn nhưng cũng cho phép"
"ủy ban điều hành. Với nhiều dịch vụ đám mây, khách hàng phải điều chỉnh quy trình của mình để đáp ứng các yêu cầu của dịch vụ. Oracle HCM Cloud cung cấp các quy trình tiêu chuẩn nhưng cũng cho phép các tổ chức tùy chỉnh quy trình khi cần thiết. Ủy ban điều hành của HCC cũng nhận thấy rằng Oracle HCM Cloud có khả năng bảo mật chặt chẽ và các quy định cần thiết để bảo vệ dữ liệu HR, một số trong đó là rất nhạy cảm. Trong nhiều năm, nhiều công ty đã do dự trong việc áp dụng điện toán đám mây, lo ngại rằng các nhà cung cấp dịch vụ bên ngoài sẽ không thể bảo vệ dữ liệu nhạy cảm hiệu quả như các hệ thống được lưu trữ và quản lý tại chỗ. Tuy nhiên, theo thời gian, uy tín của điện toán đám mây về độ tin cậy và bảo mật đã gia tăng. Nhiều công ty đã quyết định rằng bảo mật đám mây tương đương với những gì họ có thể làm tại chỗ. Ủy ban điều hành của HCC tin rằng Oracle đang giải quyết các mối đe dọa bảo mật mới nhất và đang làm mọi thứ tốt nhất hoặc tốt hơn so với công ty để bảo vệ dữ liệu của nhân viên. Ban lãnh đạo đã phê duyệt kế hoạch hiện đại hóa HR vào đầu năm 2014, với hệ thống mới dự kiến sẽ đi vào hoạt động vào tháng 9 năm 2015. Các nhà lãnh đạo dự án nhận ra rằng họ sẽ cần quản lý cẩn thận trải nghiệm của nhân viên để nhân viên cảm thấy thoải mái với những thay đổi mà hệ thống mới mang lại. Cả nhân viên HR và IT trực tiếp tham gia vào dự án hiện đại hóa HR cũng phải thực hiện các nhiệm vụ thông thường của họ. Các nhà lãnh đạo dự án đã đề ra một kế hoạch chia sẻ thời gian,"
"mới mang lại. Cả nhân viên HR và IT trực tiếp tham gia vào dự án hiện đại hóa HR cũng phải thực hiện các nhiệm vụ thông thường của họ. Các nhà lãnh đạo dự án đã đề ra một kế hoạch chia sẻ thời gian, trong đó các cá nhân sẽ được đưa vào dự án hiện đại hóa khi chuyên môn của họ được cần đến nhiều nhất, nhưng nhanh chóng được trở lại công việc thường ngày để giữ cho hoạt động của HCC không bị gián đoạn. Việc triển khai Oracle Human Capital Management Cloud phục vụ cho toàn bộ lực lượng lao động toàn cầu của Hitachi Consulting đã mang lại nhiều lợi ích cho công ty. Nó đã giảm thời gian và chi phí tuyển dụng nhân viên mới và cải thiện việc xác định, phát triển và giữ chân nhân tài hàng đầu. Quy trình giới thiệu nhân viên trước đây thường gặp khó khăn vì nhân viên nghi ngờ liệu các đề xuất của họ có thực sự được thực hiện hay không. Với hệ thống mới, bên giới thiệu được xác định rõ ràng hơn và có thể nhận thưởng nếu giới thiệu đó dẫn đến một nhân viên mới thành công. Tỷ lệ giới thiệu nhân tài mới từ nhân viên hiện tại của HCC đã tăng từ 17 lên 35 phần trăm. Công ty đã tiết kiệm được 1 triệu đô la trong năm đầu tiên hệ thống hoạt động bằng cách giảm thanh toán cho các công ty tìm kiếm. Việc tiếp nhận và tích hợp nhân viên từ các thương vụ mua lại trở nên dễ dàng hơn. Các giám đốc cấp cao và quản lý khu vực của HCC hiện có thể truy cập thông tin lực lượng lao động khi đưa ra quyết định về hướng đi kinh doanh mới của HCC. Ví dụ, các giám đốc cấp cao của HCC gần đây đã yêu cầu giám"
"cao và quản lý khu vực của HCC hiện có thể truy cập thông tin lực lượng lao động khi đưa ra quyết định về hướng đi kinh doanh mới của HCC. Ví dụ, các giám đốc cấp cao của HCC gần đây đã yêu cầu giám đốc dịch vụ giao hàng Matt Revell về số lượng nhân viên và xu hướng nghỉ việc của công ty trong 12 tháng qua để đánh giá các khoản đầu tư mà các nhà quản lý đang thực hiện cho nhân lực trong các tổ chức bán hàng và giải pháp của HCC. Để thu thập thông tin đó trong quá khứ, các nhân viên của Revell phải yêu cầu dữ liệu từ các nhà quản lý ở mỗi khu vực HCC và sau đó chuẩn hóa thông tin. (Điều này là do một số định nghĩa, chẳng hạn như định nghĩa về nhân viên toàn thời gian so với nhân viên tạm thời, không nhất quán.) Chỉ sau đó, nhóm phân tích có trụ sở tại Mỹ của HCC mới có thể tổng hợp dữ liệu và tạo ra báo cáo cuối cùng. Oracle HCM Cloud đã tập trung hóa tất cả thông tin HR của HCC và sử dụng một bộ định nghĩa chung trên toàn doanh nghiệp. Việc báo cáo và phân tích có thể được thực hiện nhanh chóng và chính xác hơn nhiều. Hệ thống tập trung mới cũng đã làm cho bộ phận HR hoạt động hiệu quả hơn bằng cách thay thế hàng chục quy trình riêng rẽ đã được thực hiện ở nhiều khu vực bằng các quy trình tiêu chuẩn hóa, và nâng cao khả năng phân tích dữ liệu nhân viên một cách chiến lược. Ví dụ, HCC thường xuyên chuyển nhượng hàng trăm cá nhân mỗi năm đến các vị trí bên ngoài quốc gia của họ cho các dự án khách hàng cần chuyên môn đặc biệt."
"Kỹ năng. Hệ thống toàn cầu mới được cải tiến đã nâng cao đáng kể quy trình chuyển giao toàn cầu, đồng thời đóng vai trò như một hệ thống ghi chép cung cấp dữ liệu nhân viên cho nhiều hệ thống quan trọng khác. Điều này không chỉ cải thiện tính toàn vẹn dữ liệu mà còn nâng cao khả năng quan sát toàn cầu về lực lượng lao động của HCC, hỗ trợ phân tích chiến lược dữ liệu nhân viên toàn cầu. Các chuyên gia chuyển đổi của HCC dạy khách hàng rằng sự thay đổi cơ bản là một quá trình liên tục, và đó là bài học mà các bộ phận HR và IT của công ty đang ghi nhớ. Các lãnh đạo HCC hiện đang mở rộng việc sử dụng các khả năng bồi thường có sẵn trong Oracle HCM Cloud để quản lý chặt chẽ hơn việc bồi thường cho lực lượng bán hàng. Theo Sona Manzo, phó chủ tịch của thực hành Oracle HCM Cloud tại HCC, công ty cần thời gian để xác định cách thức chuyển đổi tổ chức bán hàng, vì vậy nó giữ việc bồi thường bán hàng như một sáng kiến riêng biệt, HCC tiếp tục sử dụng các khả năng mới trong Oracle HCM Cloud để giúp doanh nghiệp phát triển. Hệ thống mới đã có khả năng xử lý các gói thưởng phức tạp dành riêng cho nhân viên bán hàng tại mỗi quốc gia. Ví dụ, các khoản thưởng cho kỹ năng nóng rất quan trọng để thu hút nhân tài tại các khu vực Châu Á - Thái Bình Dương, nhưng không được sử dụng ở các khu vực khác như Châu Mỹ. HCC sẽ sớm có khả năng theo dõi nhiều kế hoạch thưởng tại mỗi quốc gia và đang điều tra các khả năng cho phép các quản lý yêu cầu và phê duyệt tăng thưởng hoặc lương qua thiết bị di"
"khác như Châu Mỹ. HCC sẽ sớm có khả năng theo dõi nhiều kế hoạch thưởng tại mỗi quốc gia và đang điều tra các khả năng cho phép các quản lý yêu cầu và phê duyệt tăng thưởng hoặc lương qua thiết bị di động. Nguồn: April Mazon, Hitachi Consulting Nhận Thức Giá Trị Quan Trọng với Biến Đổi HCM Cloud, https://blogs.oracle.com, truy cập ngày 10 tháng 1 năm 2018; Alan Joch, Làm Gián Đoạn Chính Mình, Tạp chí Profit, Mùa hè 2017; và www.hitachiconsulting.com, truy cập ngày 19 tháng 1 năm 2018. Tạp chí Hệ thống Thông tin Quản lý 22, Số 1 (Mùa hè 2005). Benaroch, Michael, Yossi Lichtenstein và Lior Fink. Lựa Chọn Thiết Kế Hợp Đồng và Cân Bằng Chi Phí Giao Dịch Tiền Tệ và Hậu Giao Dịch trong Phát Triển Phần Mềm Dịch Vụ. MIS Quarterly 40, Số 1 (Tháng 3 năm 2016). Bossert, Oliver, Chris Ip và Irina Starikova. Vượt Ra Khỏi Agile: Tổ Chức IT Để Giao Hàng Phần Mềm Nhanh Hơn. McKinsey & Company (2015). Chang, Young Bong, Vijay Gurbaxani và Kiron Ravindran. Ngoại Thương Công Nghệ Thông Tin: Chuyển Giao Tài Sản và Vai Trò của Hợp Đồng. MIS Quarterly 41, Số 3 (Tháng 9 năm 2017). Comella-Dorda, Santiago, Swati Lohiya và Gerard Speksnijder. Một Mô Hình Hoạt Động cho Phát Triển Agile Toàn Công Ty. McKinsey & Company (Tháng 5 năm 2016). Edberg, Dana T., Polina Ivanova và William Kuechler. Tổ Hợp Phương Pháp: Một Khám Phá về Quy Trình Duy Trì Phần Mềm. Tạp chí Hệ thống Thông tin Quản lý 28, Số El Sawy, Omar A. Thiết Kế Lại Các Quy Trình Doanh Nghiệp cho Thương Mại Điện Tử. McGraw-Hill (2001)."
"Furneaux, Brent, và Michael Wade. Những Rào Cản Trong Việc Thay Thế Hệ Thống Thông Tin: Một Phân Tích Về Sự Gián Đoạn. Tạp chí Hệ thống Thông tin Quản lý 34, Số 3 (2017). Gnanasambandam, Chandra, Martin Harrysson, Rahul Mangla, và Shivam Srivastava. Hướng Dẫn Dành Cho Các Giám Đốc Về Phát Triển Phần Mềm. McKinsey & Company (Tháng 2 năm 2017). Goo, Jahyun, Rajiv Kishore, H. R. Rao, và Kichan Nam. Vai Trò Của Các Thỏa Thuận Mức Dịch Vụ Trong Quản Lý Quan Hệ Đối Tác IT Gia Công: Một Nghiên Cứu Thực Nghiệm. MIS Quarterly 33, Số 1 (Tháng 3 năm 2009). Hahn, Eugene D., Jonathan P. Doh, và Kraiwinee Bunyaratavej. Sự Tiến Hóa Của Rủi Ro Trong Gia Công Hệ Thống Thông Tin: Tác Động Của Rủi Ro Tại Nước Nhà, Học Tập Của Doanh Nghiệp, Và Động Lực Cạnh Tranh. MIS Quarterly 33, Số 3 (Tháng 9 năm 2009). Hammer, Michael, và James Champy. Tái Thiết Lại Doanh Nghiệp. New York: HarperCollins (1993). Hoehle, Hartmut, và Viswanath Venkatesh. Khả Năng Sử Dụng Ứng Dụng Di Động: Khái Niệm Hóa và Phát Triển Công Cụ. MIS Quarterly 39, Số 2 (Tháng 6 năm 2015). Hua Ye, Jonathan, và Atreyi Kankanhalli. Cấp Dịch Vụ Người Dùng, Levina, Natalia, và Jeanne W. Ross. Từ Góc Nhìn Của Nhà Cung Cấp: Khám Phá Giá Trị Trong Gia Công Công Nghệ Thông Tin. MIS Quarterly 27, Số 3 (Tháng 9 năm 2003). Mani, Deepa, và Anitesh Barua. Tác Động Của Học Tập Doanh Nghiệp Đến Việc Tạo Ra Giá Trị Trong Các Mối Quan Hệ Gia Công Chiến Lược. Tạp chí Hệ thống Thông tin Quản lý 32, Số 1 (2015). McKinsey & Company. Agile với Chữ A:"
"Barua. Tác Động Của Học Tập Doanh Nghiệp Đến Việc Tạo Ra Giá Trị Trong Các Mối Quan Hệ Gia Công Chiến Lược. Tạp chí Hệ thống Thông tin Quản lý 32, Số 1 (2015). McKinsey & Company. Agile với Chữ A: Hướng Dẫn Về Các Nguyên Tắc và Cạm Bẫy của Phát Triển Agile. (Tháng 2 năm 2017). Nelson, H. James, Deborah J. Armstrong, và Kay M. Nelson. Các Mô Hình Chuyển Đổi: Sự Chuyển Hướng Từ Phát Triển Truyền Thống Sang Phát Triển Hướng Đối Tượng. Tạp chí Hệ thống Thông tin Quản lý 25, Số 4 (Mùa Xuân 2009). Ozer, Muammer, và Doug Vogel. Mối Quan Hệ Tùy Ngữ Giữa Chia Sẻ Kiến Thức và Hiệu Suất Trong Phát Triển Phần Mềm. Tạp chí Hệ thống Thông tin Quản lý 32, Số 2 (2015). Pollock, Neil, và Sampsa Hyysalo. Kinh Doanh Của Việc Là Một Người Dùng: Vai Trò Của Diễn Viên Tham Chiếu Trong Việc Định Hình Quy Trình Mua Sắm và Phát Triển Hệ Thống Doanh Nghiệp Đóng Gói. MIS Quarterly 38, Số 2 (Tháng 6 năm 2014). Đổi Mới Trên Nền Tảng Điện Thoại Di Động: Khảo Sát Tác Động Của Người Dùng Dẫn Đầu, Hỗ Trợ Bộ Công Cụ, và Tự Chủ Thiết Kế. MIS Quarterly 42, Số 1 (Tháng 3 năm 2018). Saunders, Adam, và Erik Brynjolfsson. Định Giá Các Tài Sản Vô Hình Liên Quan Đến Công Nghệ Thông Tin. MIS Quarterly 40, Số Kelleher, Justin. Phá Vỡ Những Huyền Thoại Xung Quanh Agile. Sircar, Sumit, Sridhar P. Nerur, và Radhakanta Mahapatra. Quản Lý Thông Tin (21 tháng 8, 2017). Kendall, Kenneth E., và Julie E. Kendall. Phân Tích và Thiết Kế Hệ Thống (Ấn bản lần thứ 9). Upper Saddle River, NJ: Prentice Hall (2019). Kotlarsky, Julia,"
"Quản Lý Thông Tin (21 tháng 8, 2017). Kendall, Kenneth E., và Julie E. Kendall. Phân Tích và Thiết Kế Hệ Thống (Ấn bản lần thứ 9). Upper Saddle River, NJ: Prentice Hall (2019). Kotlarsky, Julia, Harry Scarbrough, và Ilan Oshri. Phối Hợp Chuyên Môn Qua Các Ranh Giới Kiến Thức Trong Các Dự Án Gia Công Ngoài Khơi: Vai Trò Của Việc Dàn Trải. MIS Quarterly 38, Số 2 (Tháng 6 năm 2014). Cách M mạng hay Tiến Hóa? So Sánh Các Phương Pháp Phát Triển Hệ Thống Hướng Đối Tượng và Cấu Trúc. MIS Quarterly 25, Số 4 (Tháng 12 năm 2001). Su, Ning, Natalia Levina, và Jeanne W. Ross. Chiến Lược Đuôi Dài Cho Gia Công CNTT. MIT Sloan Management Review (Mùa Đông 2016). Valacich, Joseph A., và Joey George. Phân Tích và Thiết Kế Các Hệ Thống Hiện Đại, ấn bản thứ 8. Upper Saddle River, NJ: Prentice-Hall (2017)."
"QUẢN LÝ DỰ ÁN MỤC TIÊU HỌC TẬP Sau khi đọc chương này,"
"Quản lý dự án hiệu quả đã giúp Công ty Stepan cải thiện kế hoạch tài chính và báo cáo. Công ty Stepan, có trụ sở tại Northfield, Illinois, là một nhà sản xuất toàn cầu lớn về hóa chất đặc biệt và hóa chất trung gian như chất hoạt động bề mặt, polymer và các sản phẩm chuyên dụng được bán cho các nhà sản xuất khác. Các thị trường chính của công ty bao gồm các nhà sản xuất hợp chất tẩy rửa và giặt (bao gồm bột giặt, dầu gội, nước xả vải, kem đánh răng và các sản phẩm vệ sinh gia đình), sơn, mỹ phẩm, thực phẩm, đồ uống, thực phẩm chức năng, sản phẩm nông nghiệp, nhựa, đồ nội thất, thiết bị ô tô, vật liệu cách nhiệt và hệ thống làm lạnh. Stepan có 2.000 nhân viên và 18 cơ sở sản xuất trên toàn cầu. Trong nhiều năm qua, nhóm lập kế hoạch và phân tích tài chính (FP&A) của Stepan đã quản lý ngân sách và dự báo tài chính toàn cầu bằng cách sử dụng bảng tính và cơ sở dữ liệu mà việc tổng hợp cho toàn doanh nghiệp gặp nhiều khó khăn. FP&A đã tiêu tốn nhiều thời gian để duy trì bảng tính và thu thập, tổng hợp và trích xuất dữ liệu từ hệ thống của mình. Công việc sản xuất báo cáo tài chính hàng tháng mất hàng trăm giờ, điều này đã để lại rất ít thời gian cho việc phân tích và tư duy chiến lược. Trong thập kỷ qua, Stepan đã mở rộng nhanh chóng và không còn phù hợp với quy trình báo cáo và kế hoạch truyền thống. Năm 2014, Stepan đã khởi động một sáng kiến chuyển đổi kinh doanh toàn công ty có tên gọi DRIVE. Một trong những mục tiêu là cải thiện quy trình báo cáo tài chính và kế hoạch lỗi"
"hoạch truyền thống. Năm 2014, Stepan đã khởi động một sáng kiến chuyển đổi kinh doanh toàn công ty có tên gọi DRIVE. Một trong những mục tiêu là cải thiện quy trình báo cáo tài chính và kế hoạch lỗi thời trên toàn cầu. Công ty đã chọn giải pháp dựa trên SAP Business Planning and Consolidation (BPC), cung cấp khả năng lập kế hoạch, ngân sách, dự báo và hợp nhất tài chính trong một ứng dụng duy nhất, có thể tích hợp với hệ thống SAP ERP toàn cầu của Stepan. Nhóm dự án của Stepan cho hệ thống mới đã tổ chức các phiên khám phá, các cuộc họp với chuyên gia cải tiến và triển khai, các khóa đào tạo về tư duy chiến lược áp dụng, và các chuyến thăm đến một số công ty đồng nghiệp. Với sự hỗ trợ từ các chuyên gia tư vấn của nhóm phân tích SAP, nhóm đã khảo sát và phỏng vấn trực tiếp nhân viên để xác định chính xác họ đã dành bao nhiêu thời gian cho báo cáo và lập kế hoạch quản lý. Nhóm dự án đã xây dựng một trường hợp kinh doanh kêu gọi cần có các công cụ lập kế hoạch tốt hơn. Nhóm đã trình bày dữ liệu cho ban lãnh đạo điều hành cho thấy rằng bộ phận tài chính của Stepan đang chậm hơn so với các công ty hóa chất có quy mô tương tự trong việc làm việc một cách chiến lược. Nhóm cũng chỉ ra rằng số ngày làm việc dành cho chu kỳ ngân sách của Stepan gấp đôi số ngày mà các công ty có quy mô tương tự khác đã sử dụng."
