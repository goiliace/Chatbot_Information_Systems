"were enthusiastic about the MDR process and provided much positive feedback. Maternal death review has initiated improvements in QoC. The most frequently mentioned success was better management of patients. Another achievement was mobilization of resources through hospital management, the community, or the State Ministry of Health. Examples included obtaining a generator for the labor ward (Katsina General Hospital); a bag-valve mask and oxygen (Family Support Hospital Damaturu), and a solar refrigerator for the blood bank (Kaura Namoda and Bungudu General Hospitals). In Yobe and Katsina states, retired midwives had been recruited and deployed to hospitals, and a doctor was posted to the maternity unit of Buniyadi General Hospital. Some action plans in Yobe and Katsina resulted in collaboration with community members to educate women and their families on the danger signs of pregnancy and the importance of prompt referral to hospital. In Kaura Namoda General Hospital, a community health team was constituted for this, with the support of the Emir. This team also mobilized resources, renovated an old hospital store, and bought drugs to establish a revolving emergency drugs fund.Interviewees reported challenges when initiating the MDR process, which were related to the fear of health workers regarding blame or repercussions. Shortage of human resources and high workload were also mentioned and made it difficult to get all committee members together, leading to cancellation or"
"the MDR process, which were related to the fear of health workers regarding blame or repercussions. Shortage of human resources and high workload were also mentioned and made it difficult to get all committee members together, leading to cancellation or postponement of meetings. The security situation in Yobe state with regard to the threat of terrorism further aggravated the human resources situation because health workers left or were unwilling to be posted there. Transfer out of staff affected the MDR process, particularly when the chairperson or key members of the MDR committee left. This was the main reason for discontinuation of the MDRs. Another challenge was poor record keeping, including incomplete or missing patient records. This indicates the importance of collecting additional information through interviews with health workers who were involved in the cases. Hospitals with many MDs were unable to review all of them. Availability of MDR forms was sometimes a challenge and distribution of forms depended mainly on the PRRINN-MNCH program.4 DiscussionMost of the publications on MDR in low-income countries are accounts of the number of MDs and their causes and contributing factors, and sometimes of actions undertaken[12-16]; some papers describe the trend of hospital-based maternal mortality since the introduction of MDR[17,18]. Few studies report experiences with the process of initiating and conducting MDR[19,20]. In the present paper, we describe experiences in the"
"some papers describe the trend of hospital-based maternal mortality since the introduction of MDR[17,18]. Few studies report experiences with the process of initiating and conducting MDR[19,20]. In the present paper, we describe experiences in the challenging environment of northern Nigeria.To be successful, MDR requires teamwork and commitment. Health facilities need someone committed (a champion) to spearhead the process. Transfer of staff trained in conducting MDR, particularly the chairperson of the MDR team, can negatively affect the MDR process. In 2012, the inactive MDR committees had to be reconstituted and revitalized by the PRRINN-MNCH program. Team building is needed so that MDR meetings do not depend solely on the chairpersons, and should continue when they are not around or have been transferred. We recommend that each MDR committee has a deputy chairperson or more than one champion to sustain the process. Providing incentives such as refreshments during MDR meetings may motivate participants.Supportive supervision of MDR teams is very important, particularly in the initiation stage. The review teams need technical, team-building, and moral support. It also helps to develop their analytical skills when they are guided by experienced doctors or obstetric consultants. In northern Nigeria, however, supportive supervision was sporadic, difficult to organize, and largely dependent on donor funding--reflecting the weak health systems in the states.In addition to"
"are guided by experienced doctors or obstetric consultants. In northern Nigeria, however, supportive supervision was sporadic, difficult to organize, and largely dependent on donor funding--reflecting the weak health systems in the states.In addition to regular review meetings at facility level, quarterly MDR meetings organized at LGA (district) level or at the local referral hospital--attended by representatives from EmONC facilities in the area--facilitate sharing of experiences and capacity building. It is important that a senior doctor or obstetric consultant with experience in MDR attends these meetings--supporting the process, building capacity, and developing analytical skills. In Malawi, the absence of senior staff such as doctors or consultant obstetricians during MDR was regarded as a weakness of the MDR process, and where reviews were conducted exclusively by junior staff some provider-related factors were missed[19]. However, such meetings in northern Nigeria depended on donor funding, which might jeopardize sustainability.Although the aim was to review all MDs, this happened for only a small proportion. However, even if only some MDs are reviewed but the process is carried out regularly, important and useful lessons can still be learned for improvement of QoC.The MDR process has not been institutionalized in the Ministry of Health so far. Maternal death reviews need guidance, coordination, and support from the national and State Ministries of Health. We"
"lessons can still be learned for improvement of QoC.The MDR process has not been institutionalized in the Ministry of Health so far. Maternal death reviews need guidance, coordination, and support from the national and State Ministries of Health. We recommend that the Nigerian Ministry of Health establishes a committee or unit at state and national (federal) level to oversee MDRs and PNDRs, to provide guidance and support (including supportive supervision of MDR committees), to coordinate and monitor the process, and to ensure that resources are allocated in the annual health budgets. Policy guidance and written guidelines are also needed. Involving Ministry of Health staff in MDR training during the QI workshops did not result in the Ministry taking on a leadership role or supporting the MDR process. The barriers need to be identified and addressed, and more intensive advocacy and follow-up are needed to institutionalize MDR and PNDR; identifying champions at national or state level is also important. In Malawi, support from the district health management team was considered crucial because it motivates staff and facilitates the implementation of recommendations[19]. Therefore, the PRRINN-MNCH program has developed a QI orientation package and is planning to conduct QI orientation workshops for senior health policy makers, as well as for health planners and managers at state and district level.Record keeping was poor and incomplete with regard to both patient records and"
"orientation package and is planning to conduct QI orientation workshops for senior health policy makers, as well as for health planners and managers at state and district level.Record keeping was poor and incomplete with regard to both patient records and MDR forms. Formulation of and follow-up on action plans need more support. Supportive supervision can help to improve these areas. Obtaining additional information on cases of MD through interviews and during discussion at MDR meetings is important for putting together the full detailed story of what happened and what went wrong, and the MDR champion(s) at facility level must take this responsibility or delegate it.The MDR process has not led to better reporting of MDs compared with the routine HMIS. Prompt notification of MDs did not usually happen. The perceived need and demand for MD reporting are low while MD is not a notifiable condition in Nigeria, as it is in some other African countries[20]; in these countries, the fact that MD is a notifiable condition helps to accord high priority to maternal mortality and may increase reporting of MDs. Thus, MD notification forms were not useful and can be omitted unless Nigeria makes MD a notifiable event and introduces a system of maternal death surveillance and response[21]. The forms for MDR recording and reporting were approved by the State Ministries of Health but were not integrated into the HMIS. The production and distribution of these forms depended largely on the"
"system of maternal death surveillance and response[21]. The forms for MDR recording and reporting were approved by the State Ministries of Health but were not integrated into the HMIS. The production and distribution of these forms depended largely on the PRRINN-MNCH project. For the Ministry of Health to play this role requires well-functioning health systems and sufficient funding for the HMIS. After institutionalization of the MDR process, the committee in the Ministry of Health responsible for MDR should exert pressure for this to happen or mobilize funds. Alternatively, MDR policies could state that health facilities are expected to print or photocopy their own forms; this could be reinforced and encouraged during supportive supervision visits to hospitals.AcknowledgmentsThe UK Department for International Development and the Norwegian Government funded the present study through the PRRINN-MNCH program.Conflict of interestThe authors have no conflicts of interest.References[1]Van den Broek N.R.,Graham W.J.Quality of care for maternal and newborn health: a neglected agenda.BJOG.116(Suppl. 1):2009;18-2110.1111/j.1471-0528.2009.02333.xPubMedWeb of Science®Google Scholar[2]Lewis G.Beyond the numbers: reviewing maternal deaths and complications to make pregnancy safer.Br Med Bull.67(1):2003;27-3710.1093/bmb/ldg009PubMedWeb of Science®Google Scholar[3]WHO.Beyond the numbers: reviewing maternal deaths and complications to make pregnancy"
"the numbers: reviewing maternal deaths and complications to make pregnancy safer.Br Med Bull.67(1):2003;27-3710.1093/bmb/ldg009PubMedWeb of Science®Google Scholar[3]WHO.Beyond the numbers: reviewing maternal deaths and complications to make pregnancy safer.www.who.int/maternal_child_adolescent/documents/9241591838/en/, Published 2004Google Scholar[4]Pattinson R.,Kerber K.,Waiswa P.,Day L.T.,Mussell F.,Asiruddin S.K.et al.Perinatal mortality audit: Counting, accountability, and overcoming challenges in scaling up in low- and middle income countries.Int J Gynecol Obstet.107(Suppl. 1):2009;S113-S12210.1016/j.ijgo.2009.07.011Web of Science®Google Scholar[5]Filippi V.,Richard F.,Lange I.,Quattara F.Identifying barriers from home to the appropriate hospital through near-miss audits in developing countries.Best Pract Res Clin Obstet Gynaecol.23(3):2009;389-40010.1016/j.bpobgyn.2008.12.006PubMedWeb of Science®Google Scholar[6]Pattinson R.C.,Hall M.Near misses: a useful adjunct to maternal death enquiries.Br Med Bull.67(1):2003;231-24310.1093/bmb/ldg007PubMedWeb of Science®Google Scholar[7]Wagaarachchi P.T.,Graham W.J.,Penney G.C.,McCaw-Binns A.,Yeboah Antwi K.,Hall M.H.Holding up a mirror: changing obstetric practice through criterion-based clinical audit in developing countries.Int J Gynecol Obstet.74(2):2001;119-13010.1016/S0020-7292(01)00427-1CASPubMedWeb of Science®Google Scholar[8]Bailey P.E.,Binh H.T.,Bang H.T.Promoting accountability in obstetric care: Use of criterion-based"
"clinical audit in developing countries.Int J Gynecol Obstet.74(2):2001;119-13010.1016/S0020-7292(01)00427-1CASPubMedWeb of Science®Google Scholar[8]Bailey P.E.,Binh H.T.,Bang H.T.Promoting accountability in obstetric care: Use of criterion-based audit in Viet Nam.Glob Public Health.5(1):2009;62-74Web of Science®Google Scholar[9]Lewis G.Why Mothers Die 2000-2002: The Sixth Report of the Confidential Enquiries Into Maternal Deaths in the United Kingdom.2007; Royal College of Obstetricians & Gynaecologists Press:LondonGoogle Scholar[10]National Department of Health South Africa.Saving mothers 2008-2010: Fifth report on the confidential enquiries into maternal deaths in South Africa.www.hst.org.za/sites/default/files/savingmothersshort.pdf, Published 2012Google Scholar[11]Thaddeus S.,Maine D.Too far to walk: maternal mortality in context.Soc Sci Med.38(8):1994;1091-111010.1016/0277-9536(94)90226-7PubMedWeb of Science®Google Scholar[12]Issah K.,Nang-Beifudah A.,Opuku C.F.Maternal and neonatal survival in the Upper West Region of Ghana.Int J Gynecol Obstet.113(3):2011;208-201010.1016/j.ijgo.2011.01.007Web of Science®Google Scholar[13]Jacques S.,Edgar-Marius O.,Bruno D.Maternal deaths audit in four Benin referral hospitals: quality of emergency care causes and contributing factors.Afr J Reprod Health.10(3):2006;28-4010.2307/30032469PubMedGoogle Scholar[14]Mogobe K.D.,Tshiamo W.,Bowelo M.Monitoring maternal mortality in Botswana.Reprod Health"
"in four Benin referral hospitals: quality of emergency care causes and contributing factors.Afr J Reprod Health.10(3):2006;28-4010.2307/30032469PubMedGoogle Scholar[14]Mogobe K.D.,Tshiamo W.,Bowelo M.Monitoring maternal mortality in Botswana.Reprod Health Matters.15(30):2007;163-17110.1016/S0968-8080(07)30330-3PubMedWeb of Science®Google Scholar[15]Nyamtema A.S.,De Jong A.B.,Urassa D.P.,Van Roosmalen J.Using audit to enhance quality of maternity care in resource limited countries; lessons learnt from rural Tanzania.BMC Pregnancy Childbirth.11:2011;9410.1186/1471-2393-11-94PubMedWeb of Science®Google Scholar[16]Tukur J.,Jido T.A.,Awolaja B.S.Maternal mortality in northern Nigeria.Trop Doct.38(1):2008;35-3610.1258/td.2006.006356PubMedWeb of Science®Google Scholar[17]Dumont A.,Gaye A.,de Bernis L.,Chaillet N.,Landry A.,Delage J.et al.Facility-based maternal death reviews: effects on maternal mortality in a district hospital in Senegal.Bull WHO.84(3):2006;218-22410.2471/BLT.05.023903PubMedWeb of Science®Google Scholar[18]Mbaruku G.,Bergstrøm S.Reducing maternal mortality in Kigoma, Tanzania.Health Policy Plan.10(1):1995;71-7810.1093/heapol/10.1.71CASPubMedWeb of Science®Google Scholar[19]Kongnyuy E.J.,Van den Broek N.The difficulties of conducting maternal death reviews in Malawi.BMC Pregnancy Childbirth.8:2008;4210.1186/1471-2393-8-42PubMedGoogle Scholar[20]Pearson L.,De Bernis L.,Shoo R.Maternal death review in Africa.Int J Gynecol"
"E.J.,Van den Broek N.The difficulties of conducting maternal death reviews in Malawi.BMC Pregnancy Childbirth.8:2008;4210.1186/1471-2393-8-42PubMedGoogle Scholar[20]Pearson L.,De Bernis L.,Shoo R.Maternal death review in Africa.Int J Gynecol Obstet.106(1):2009;89-9410.1016/j.ijgo.2009.04.009PubMedWeb of Science®Google Scholar[21]WHO.Maternal Death Surveillance and Response: technical guidance information for action to prevent maternal death.www.who.int/maternal_child_adolescent/documents/maternal_death_surveillance/en, Published 2013Google ScholarCiting Literature"
"AbstractModernWeb-based Information Systems(WIS) are becoming increasingly necessary to provide support for users who are in different places with different types of information, by facilitating their access to the information, decision making, workgroups, and so forth. Design of these systems requires the use of standardized methods and techniques that enable a common vocabulary to be defined to represent the underlying knowledge. Thus, mediation elements such astradersenrich the interoperability of web components in open distributed systems. These traders must operate with otherthird-partytraders and/or agents in the system, which must also use a common vocabulary for communication between them. This paper presents theOntoTraderarchitecture, anOntological Web Tradingagent based on the OMG ODP trading standard. It also presents the ontology needed by some system agents to communicate with the trading agent and the behavioral framework for the SOLERESOntoTraderagent, anEnvironmental Management Information System(EMIS). This framework implements a \"Query-Searching/Recovering-Response\" information retrieval model using a trading service, SPARQL notation, and the JADE platform. The paper also presents reflection, delegation and, federation mediation models and describes formalization, an experimental testing environment in three scenarios, and a tool which allows our proposal to be evaluated and validated.1. IntroductionIn a more open world, information systems must be flexible"
"federation mediation models and describes formalization, an experimental testing environment in three scenarios, and a tool which allows our proposal to be evaluated and validated.1. IntroductionIn a more open world, information systems must be flexible and readily adaptable, extendable, accessible, and operable by different people or groups of people who are in different places and have different types of information, facilitating access to information by decision-makers, workgroups, and so forth (convergent systems). This involves the use of rules and standards for their construction and real-time operation, interaction, and interconnection. In this kind of systems, system \"agents\" (e.g., web components, subsystems, and humans) working in the sameambient(computing space), or even otherthird-party\"agents\", interact. System convergence is possible through three basic parameters: (a) autonomy and intelligence (software agents), (b) a common vocabulary for all convergent systems (ontologies), and (c) trading between subsystems, necessary to enable, coordinate, translate, and maintain this common vocabulary (traders). The most recentWeb Information Systems(WIS) have been developed under open and distributed paradigms using rules and standards for the construction and operation of real time interaction and interconnection [1]. WIS are intended for the new era of information systems in web environments, due not only to the growing popularity of the web technology, but also to the"
"and standards for the construction and operation of real time interaction and interconnection [1]. WIS are intended for the new era of information systems in web environments, due not only to the growing popularity of the web technology, but also to the roles of web technology in modern information systems. The major features of web information systems are web semantics, XML technologies, web mining and querying, and information extraction [2].Environmental Management Information Systems(EMIS) [3] are a type of WIS. Experimentation with WIS technological advances in fields like medicine, biology, and especiallyenvironmenthas allowed real convergent systems to develop over time. EMIS are social and technical systems with a variety of final users and actors (i.e., politicians, technicians, and administrators) who cooperate with each other and interact with the system for decision making, problems solving, and so forth. An EMIS uses normally knowledge bases distributed in space and time. Not only is this information used by human actors in the system but also coordinates web software (and autonomous) components requiring a common vocabulary (e.g., ontologies). An example of web-based EMIS is the SOLERES system, a spatiotemporal environmental management system based on neural networks, agents, and software components [4].An EMIS is anInformation Systemsupporting environmental management. EMIS are a special case ofGeographic Information Systems(GIS), though the granularity of"
"environmental management system based on neural networks, agents, and software components [4].An EMIS is anInformation Systemsupporting environmental management. EMIS are a special case ofGeographic Information Systems(GIS), though the granularity of environmental information is more specific (e.g., satellite and ecological information). Furthermore, EMIS use a more advanced, more specific technology than geographic information systems; for instance, we use neural networks, multiagents systems, and cellular automata features.Two basic roles interact in WIS: theHumanand theComputer. Due to the nature of these systems (open and distributed), people organized in workgroups for decision making may be found in different places and be arranged by their profile (e.g., administrators, politicians, technicians, and users). This sort of interaction (Human-to-Human, HH) requires unified protocol and communication policies for all parts of the system. People and groups of people also interact through the system by usinguser interfaces(UI), which are generally well suited to their needs [5]. This type of interaction (Human-to-Computer, HC) also needs to establish communication protocols among users, profiles, groups, and user interface agents. Finally, these user interface agents act as mediators for people interacting with other system agents. This interaction (Computer-to-Computer, CC) requires communication protocol, commonly known as choreography (or orchestration). All three of"
"agents. Finally, these user interface agents act as mediators for people interacting with other system agents. This interaction (Computer-to-Computer, CC) requires communication protocol, commonly known as choreography (or orchestration). All three of these types of interaction protocol (HH, HC, and CC) software have to know the knowledge semantics that manages each part of the system (i.e., agents).Mediators (commonly known as \"traders\") enrich theinteroperabilityof web components working in a WIS approach [6,7]. These traders have to operate with other third-party traders and/or agents in the system, which must also use a common vocabulary to allow communication between them. The design of these components and the interaction protocols (mentioned above) must use standardized methods and techniques that allow a common vocabulary representing the underlying knowledge to be defined. Ontologies are used as a means to this goal [8].On the other hand, popularity of the WIS has led to an increasing volume of information available in information systems.Users depend on the web to meet their information needs through search engines, portals, digital libraries, and other information retrieval systems [9,10]. However, information overload has led to a situation where users are swamped with too much information and have to sift through the material in search of relevant content. To address these problems, a variety of techniques, inherent in information searching, drawing from the"
"overload has led to a situation where users are swamped with too much information and have to sift through the material in search of relevant content. To address these problems, a variety of techniques, inherent in information searching, drawing from the fields of information retrieval, information filtering, human-computer interaction, and the study of information search behavior have been adopted in the WIS. Information retrieval refers to techniques that assist users in meeting their information needs [11].The main WISinformation retrieval mechanism is the traditionalQuery-Searching/Recovering-Response(QS/RR). This mechanism is based on the traditional client/server model. On one hand, the term \"Query\" refers to the whole process of creating and formulating the client′s question. The term \"Searching\" refers to the process of locating the repositories where the information is found, and the term \"Recovering\" refers to the process of locating, identifying, and selecting the data from the data sources (repositories, data storage, or databases, regardless of the model). Finally, the term \"Response\" refers to the whole process of formulation, preparation, and creation of the response by the server to the client. The \"Query-Searching\" pair is a process that goes from the client to the server. The \"Recovering-Response\" pair goes from the server to the client.UDDI (Universal Description Discovery and Integration) specification and WSDL (Web-Services Definition Language) for SOA"
"pair is a process that goes from the client to the server. The \"Recovering-Response\" pair goes from the server to the client.UDDI (Universal Description Discovery and Integration) specification and WSDL (Web-Services Definition Language) for SOA (SOA,http://www.oasis-open.org/) (Service Oriented Architecture) are based on theseclient/server implementations for web systems. Nevertheless, these techniques allow agents to respect asubscribe/publish/responsemodel and aQS/RRinformation retrieval approach for locating WSDL documents (i.e., XML specifications of web-services) and connecting web services in WIS, but not for different types of information (non-WDSL information). Traders are another solution for open and distributed systems [12] that extend the OMA (OMA,http://www.omg.org/) (Object Management Architecture) ORB (Object-Request Broker) mechanism. Although traders are traditionally used asmiddlewarefor object interoperability, they can easily be adapted for interoperability of information and functionality. In respect to this, the use of functional ontologies in our work is a good solution for adapting traders to information retrieval in WIS. User information retrieval is an emerging area and a promising avenue for the design and implementation of a new generation of information retrieval systems, especially for new web-based EMIS due to the particularity and complexity of the information and users (politicians, technicians, and administrators) [13].In a sense, the"
"the design and implementation of a new generation of information retrieval systems, especially for new web-based EMIS due to the particularity and complexity of the information and users (politicians, technicians, and administrators) [13].In a sense, the SOLERES system (a spatiotemporal environmental management system based on neural networks, agents, and software components), our EMIS model, follows a WIS approach [14-17]. In this paper, we propose theOntological Web Trader(OntoTrader) as a mechanism for solving the complexity of information retrieval in the EMIS by means of a trading model for WIS guided and managed by ontologies. This kind of web service is a user-information search service based on a web QS/RR model. Therefore,OntoTraderis a new  information retrieval mechanism that implements a QS/RR model and uses the SPARQL query language and the OWL ontology description language to operate. This service is based on a user request action that identifies the agents involved and their communication protocols. In our system, the ontologies are used in two different contexts: (a) they represent the application domain information itself and (b) the services that some agents request from others during their interaction. Although a trader agent has five interfaces (i.e.,Lookup,Register,Link,Proxy,andAdmin), this paper discusses only the behavioral and data ontology design features of the Lookup trader interface, which is used for searching and recovering user information in"
"a trader agent has five interfaces (i.e.,Lookup,Register,Link,Proxy,andAdmin), this paper discusses only the behavioral and data ontology design features of the Lookup trader interface, which is used for searching and recovering user information in a QS/RR model. All research work presented here is part of a complete design strategy forOntology-Driven Software Engineering(ODSE) that we are developing in SOLERES.The remainder of the paper is organized as follows. Section2reviews some EMIS approaches and compares how ontologies, agents, and trading features are used. Section3presents the SOLERES system as a running case study. Section4definesOntoTrader, a WIS information retrieval mechanism. In this part, we describe the Lookup interface ontology and the metadata template that the trader manages (i.e., an OWL metadata repository of environmental information) in OWL and formalize them in UML. Section5presentsOntoTraderformalization. Sections6and7describe some implementation and experimental scenario details and some evaluation and validation discussions, respectively. We end with some conclusions and prospects for future work in Section8.2. EMIS TechnologyThe progress of the new technologies in web-based information systems is obvious. In a moreopen world, information systems must be flexible and readily adapted, extendable, accessible and operable by different people or groups of people (convergent systems). The convergence of these systems may appear over time with the"
"is obvious. In a moreopen world, information systems must be flexible and readily adapted, extendable, accessible and operable by different people or groups of people (convergent systems). The convergence of these systems may appear over time with the business needs of the system. For instance, a decision-making system in medicine, originally made up of two subsystems, may increase over time by connecting to other systems in networks which require/provide contents/services to the system service as a whole. The convergence of these systems is possible due to three basic parameters: (a) autonomy and intelligence, (b) a common vocabulary for all convergent systems, and (c) mediation between subsystems, necessary to enable, coordinate, translate, and maintain this common vocabulary. In the first parameter, software agent and multiagent system properties encapsulate traditional concepts of web components (or web services) with repositories of knowledge-based rules that work autonomously (endowing it with a certain degree of intelligence). These rules can be made and applied to agent groups that work in the same communication and behavior patterns (choreography). Ontologies are a good mechanism for establishing this common vocabulary necessary in convergent systems.Semantic webis a good example of this. It standardizes the criteria, languages, mechanisms, methodologies, and platforms in universal web data semantics. Finally, trading services are a good device for"
"common vocabulary necessary in convergent systems.Semantic webis a good example of this. It standardizes the criteria, languages, mechanisms, methodologies, and platforms in universal web data semantics. Finally, trading services are a good device for communication-coordination (interoperability) between WIS subsystems as, for example, UDDI and WSDL in SOA. EMIS is an example of WIS developed during recent years. Experimentation with technological advances in WIS in fields like medicine, biology, and especially environment has allowed real convergent systems to gradually emerge. In the following sections, we analyze some relevant EMIS found in the literature and see how agents, ontologies, and trading services are applied, ending with a case study, the SOLERES system architecture, as an example of an environmental information system developed by the Applied Computing Group (ACG) at the University of Almeria, Spain [4].2.1. Agent and Multiagent Systems in EMISSoftware agents are applied in different contexts in information systems. They are applied in four basic ways (their hybrids) in Web-based Environmental Information Systems (our main line of research).(a)Ininformation management, agents can be used for searching for information (such as a database); they can filter results, recall them, organize, or even automatically distribute them.(b)Incontrolandsupervisionprocesses (monitoring), an agent can monitor a particular element or activity and respond to any event that may"
"(such as a database); they can filter results, recall them, organize, or even automatically distribute them.(b)Incontrolandsupervisionprocesses (monitoring), an agent can monitor a particular element or activity and respond to any event that may occur, for example, in transport system modeling and control or in industrial processes.(c)In cooperative work, group applications (Computer Supported Cooperative Work, CSCW), where, due to their nature, agents can support the information flow necessary for the activity and interaction of group members.(d)Aspersonal assistants, an agent can only easily represent a user if he/she knows his/her preferences beforehand and can act according to those preferences. For example, in electronic commerce applications, the commercial transactions require access to many resources in real time, and this task can be performed by one or more agents on behalf of the user.We used these four contexts to design and implement the QS/RR model for a web-based trading agent (OntoTrader), Section4. For an MAS design, not only the properties mentioned above must be borne in mind, but also the choice of a clear, precise methodology and a development platform. There are currently over a hundred software products for agent-based application design, which are mainly used in academic and commercial environments. Some examples are AdventNet Agent Toolkit, Agent Builder, AgentTcl, AgentTalk, AgentTool, AgentWare, Cable, Emorphia, FIPA-OS, Grasshopper, Impact, JADE,"
"for agent-based application design, which are mainly used in academic and commercial environments. Some examples are AdventNet Agent Toolkit, Agent Builder, AgentTcl, AgentTalk, AgentTool, AgentWare, Cable, Emorphia, FIPA-OS, Grasshopper, Impact, JADE, MAGE, MASS, Microsoft Agent, SiWalk, Soar, and so forth. We used JADE (JADE,http://jade.tilab.com/) (Java Agent Development Framework) to implement the SOLERES multiagent system because it simplifies the implementation of multiagent systems through middleware and provides a tool-set as support for depuration and implementation of open, distributed, and heterogeneous information systems.Agent-based environmental systems are grouped into environmental information management, assistance in decision-making for environmental problems, and environmental system and process simulation. Due to our special interest in EMIS designed with agent technology, we exhaustively reviewed the most important systems. Table1shows a summary of the EMIS architectures studied. We have included the following relevant system metrics used in our web trading agent proposal, including SOLERES, in the table for comparison: (a) use of trading mechanisms, (b) use of modeling and designing ontologies, and (c) use of some type of user or interface agent. We also studied the technology and the main application domain metrics. The EMIS architectures studied were InfoSleuth [18], EDEN-IW [19], NZDIS [20], FSEP [21], MAGIC [22], DIAMOND [23], and BUSTER [24].Table"
"use of some type of user or interface agent. We also studied the technology and the main application domain metrics. The EMIS architectures studied were InfoSleuth [18], EDEN-IW [19], NZDIS [20], FSEP [21], MAGIC [22], DIAMOND [23], and BUSTER [24].Table  1.A comparative view of some environmental management system architectures.SystemTradingOntologiesUser agentTechnologyApplication domainInfoSleuthNoYesYesXML/RDF, KQML, and OKBCWater resourcesEDEN-IWNoYesYesJADE, DAML-OILWater resourcesNZDISNoNoYesCORBA/OQL, MOFEnvironmental dataFSEPNoNoNoJACKMeteorologyMAGICNoNoYesFIPA-ACL, CORBAWater treatmentsDIAMONNoNoYesJava/C++, FIPA-ACLWater treatmentsBUSTERYesYesNoOIL, FIPA-OSGeographical informationSOLERESYesYesYesJADE, OWL, SPARQL, and UMLEcology2.2.  Ontology Applications in EMISOntologies were designed to be used in applications that need to manage information semantics. In general, ontologies not only describe spatial data, for instance, more easily understood by computers in encoded semantics, but also integrate other EMIS data (i.e., geographical) from different sources and different ways of reasoning.There are several languages available for modeling knowledge domains [25], in particular, DAM-OIL [26] and OWL [27]. Web Ontology Language (OWL), the most recent and widely used language at present, was designed to be used in applications that need to test the content of the information instead of just representing it. Such content can either be new or related to others. An"
"Ontology Language (OWL), the most recent and widely used language at present, was designed to be used in applications that need to test the content of the information instead of just representing it. Such content can either be new or related to others. An ontology can therefore use terms that are included in other ontologies and change them, creating an open, distributed system.In the literature, ontologies have been used to represent environmental knowledge. In [28], the authors present an environmental decision-support system called OntoWEDSS for wastewater management. In this system, an ontology is used to provide a common vocabulary for modeling the wastewater treatment and an explicit conceptualization that describes data semantics. Another example may be found in [29], an air quality monitoring system, which uses an ontology to define messages and communications concisely and unambiguously. In [30], the authors present Ecolingua, an EngMath family ontology for representing quantitative ecological data. These examples show the use of ontologies to build models that describe the entities in the given domain and characterize the relationships and constraints associated with them.In [31], the authors present an ontology for representing geographic data and related functions. To meet the need for an interoperable GIS, in [27] the authors propose a Geo-ontology model design to integrate geographic information. We have also explored an ontological application in the field of"
"representing geographic data and related functions. To meet the need for an interoperable GIS, in [27] the authors propose a Geo-ontology model design to integrate geographic information. We have also explored an ontological application in the field of geographic information retrieval [32]. A different use appears in [6], where an OWL extension has new primitives for modeling spatial location and spatial relationships with a geographic ontology.Extensions of existing ontologies have also appeared in this knowledge domain. In [33], the authors propose a geographic ontology based on Geographic Markup Language (GML) [34], and the OWL-S profile is extended to geographic profiles. Another case is an extension of the NASA Semantic Web for Earth and Environmental Terminology (SWEET) ontologies that includes part of the hydrogeology domain [35].2.3.  Trading in Open Distributed SystemsThe Reference Model of Open Distributed Processing (RM-ODP) is a model jointly developed by the International Standard Organisation (ISO) and the International Telecommunication Union (ITU-T). This model defends the transparent use of services distributed in platforms and heterogeneous networks and dynamic location of these services. Thetrading functionis one of the 24 functions of ISO/ITU-T ODP model [12]. This speciation was adopted by the Object Management Group (OMG) which called it CosTrading for the CORBA services trading service.From the viewpoint of object-oriented programming (OOP), a trading"
"one of the 24 functions of ISO/ITU-T ODP model [12]. This speciation was adopted by the Object Management Group (OMG) which called it CosTrading for the CORBA services trading service.From the viewpoint of object-oriented programming (OOP), a trading function (trader) is a software object which serves as an intermediary between objects that provide certain capacities (services) and objects that require dynamic use of these capacities. From the ODP perspective, those objects providing capacities to other objects are calledexportersand those requiring capacities from the system objects are calledimporters(Figure1).Figure 1Open in figure viewerPowerPointRoles of the ODP trader (Adapted from ISO RM-ODP).A trading object uses five interfaces to interact with client objects (importer and exporter): Register, Lookup, Link, Proxy, and Admin. The Lookup interface allows clients to ask the trader about the services stored in the trading service. With the Register interface, clients can export services offered in the trader. The Link interface allows the trader to be connected to other traders (i.e., trading federation). This enables the system administrator to connect his trader with other well-known traders and propagate requests in a network. The trader can also send the request to connected traders and locate new offers with the same searching conditions imposed on the target trader. The Admin interface allows administrators to configure the trader (e.g., searching policies,"
"in a network. The trader can also send the request to connected traders and locate new offers with the same searching conditions imposed on the target trader. The Admin interface allows administrators to configure the trader (e.g., searching policies, ordering policies, and numbers of federated traders allowed). The Proxy interface is used to enablelegacy systemproperties in federated trader systems.3. A Case Study: The SOLERES SystemThis section presents the main SOLERES system architecture, a spatiotemporal information system for environmental management (an example of EMIS). This system is supported by the application, integration, and development (extension) of multidisciplinary studies in satellite imaging, neural networks, cooperative systems based on multiagent architectures and intelligent agents, and software systems with commercial components. The general idea of the system is a framework for integrating the disciplines above for \"environmental information\" as the application domain, specifically ecology and landscape connectivity. The system has two main subsystems, SOLERES-HCI and SOLERES-KRS. Figure2shows the general system architecture.Figure 2Open in figure viewerPowerPointSOLERES architecture.SOLERES-HCI is the framework specialized in human-computer interaction. This level of the information system is defined by means of theComputer Supported Cooperative Work(CSCW) paradigm and implemented using innovative intelligent agent technology and multiagent"
"is the framework specialized in human-computer interaction. This level of the information system is defined by means of theComputer Supported Cooperative Work(CSCW) paradigm and implemented using innovative intelligent agent technology and multiagent architectures. The system is designed to be used for cooperative environmental decision-making tasks by different people (systems users) arranged in different organization models (i.e., depending on their hierarchy or profile). There may be politicians, technicians, or administrators, among others, who need to interact with each other and with the system.A user of the cooperative system has an intelligent agent (Interface agent in Figure2), which operates two ways: (a) by managing user interface presentation and interaction (UI agent) and (b) by managing the environmental queries (EMIS agent). The UI agent mediates between the user and other users in the system (using other UI agents). The EMIS agent refers to a virtual consultant or virtual supervisor who cooperates with other agents within a previously established multiagent architecture. Both agents (i.e., UI and EMIS agents) follow protocol models for orchestration of the cooperative system, cooperation among agents. UI agents use HCI choreography (protocol) and EMIS agents use CSCW choreography.On the other hand, SOLERES-KRS is used to manage environmental information. TheIMI agentis like a gateway between the user interface and the rest of the modules and is responsible"
"use HCI choreography (protocol) and EMIS agents use CSCW choreography.On the other hand, SOLERES-KRS is used to manage environmental information. TheIMI agentis like a gateway between the user interface and the rest of the modules and is responsible for the management of user demands.Given the magnitude of the information available in the information system, and that this information may be provided by different sources, at different times or even by different people, the environmental information (i.e., the knowledge) can be distributed, consulted, and geographically located in different ambients (i.e., locations, containers, nodes, or domains) called Environmental Process Units (EPU). Thus, the system is formed by a cooperative group of knowledge-based EPUs. These groups operate separately by using an intelligent agent to find better solutions (queries on ecological maps).We accomplished the distributed cooperation of these EPUs by developing a web trading agent (OntoTrader) based on the ODP trader specification [12] and extended to agent behavior. Our trading agent mediates between HCI requests and EPU services. EPUs manage two local repositories of environmental information. One of the repositories contains metadata on the information in the domain itself (i.e., basically information related to ecological classifications and satellite images), called Environmental Information Map (EIM) data or EIM documents. This information is extracted from outside databases"
"on the information in the domain itself (i.e., basically information related to ecological classifications and satellite images), called Environmental Information Map (EIM) data or EIM documents. This information is extracted from outside databases (External_DBrepository in Figure2). The EIM documents are specified by an ontology in OWL [15,16] (<<OWLrepository>>). These EIM documents are the first level of information in the KRS subsystem.The second repository contains metadata calledenvironmental information metadata(EID), or EID documents. These documents contain the most important EIM metadata that could be used in an information retrieval service and, furthermore, incorporate other new metadata necessary for agent management itself. To a certain extent, an EID document represents a \"template\" with the basic metadata from the EIM document data. The EID documents have also been specified by an ontology to accomplish open distributed system requirements. EID documents represent the second level of information in the KRS subsystem. Each EPU keeps its own EID document (or sets of documents) locally and also registers them with theOntoTrader(the web trading agent). This way, theOntoTraderhas an overall repository of all the EID documents from all EPUs in an ambient and can thereby offer an information search service, as described further below.The trading service implemented and the requirements that it must fulfill to be considered open and distributed are described below."
"EID documents from all EPUs in an ambient and can thereby offer an information search service, as described further below.The trading service implemented and the requirements that it must fulfill to be considered open and distributed are described below. Afterwards, the structure and ontology used by the software agent responsible for this service (the trader agent) are explained.4. Ontological Web Trading (OntoTrader)Trading is a well-known concept for searching and locating services. In a trader-based architecture, a client component that requires a particular service can query a matchmaking agent (i.e., the trader) for references to available components that provide the kind of service required. We based our work on the traditional functionality of a trader, but with adapting it to knowledge-based agents instead of objects (or software components). But first, let us see the requirements a trader should have.4.1. Requirements for Open Distributed (Web) TradingAlthough the trading services could be compared to web search engines, in reality, web searches are more structured. In a trading service, the matching heuristics need to model the vocabulary, the distance functions, and the equivalence classes in a specific domain. For cooperation among web traders, trading services using different strategies should be able to federate. For example, arepository-based federation strategymakes it possible for different trading services to read and write in the same repository at the"
"For cooperation among web traders, trading services using different strategies should be able to federate. For example, arepository-based federation strategymakes it possible for different trading services to read and write in the same repository at the same time, each unaware of the presence of the others in the federation, and thereby allowing the approach to be scalable. On the other hand, the traditional \"direct\" federation strategy requires a trading service to communicate directly with the trading services with which it is federated. Although this federation-based scheme is very safe and effective, communication overloads increase with the number of federated trading services.Current information searching and selection (recovery) use \"hard\" matchmaking operations which are too restrictive, and \"soft\" matching criteria are often necessary. In trading services, especially in independently extendable open systems (e.g., the Internet), it must be decided whether \"soft\" or \"hard\" matching is required. A trading service should thus allow users to be able to specify heuristic or metric functions in the search, particularly in cases where matches are \"soft.\" For instance, the trading service could return results ordered by a search criterion or discard some search sequences in the repositories where they are carried out.Furthermore, after processing, a trading service should respond to a user-query request (through a SOLERES-HCI interface agent) with a result. This result,"
"a search criterion or discard some search sequences in the repositories where they are carried out.Furthermore, after processing, a trading service should respond to a user-query request (through a SOLERES-HCI interface agent) with a result. This result, found after arequest-responseaction, can refer either to a list of results that meet the restrictions imposed on the query or to a \"failure\" notice if the search could not find a solution. If a \"failure\" notice is returned, the trading service should also be able to demand that the query request must necessarily be satisfied; otherwise, the query request is stored, and the response is delayed. Thisrequest-responsebehaviour is calledstore and forwardquery. Finally, a trading service should also allow query requests to be delegated to other (known) traders if they cannot be satisfied by the current trading service.Now that the demanded requirements of the trading service have been identified, the service support structure can be described.4.2.  Web Trading AgentAs outlined in Section1, this section describes the internal structure of our trading agent and some details about its design and implementation. It should be emphasized that the trader agent, like all SOLERES system agents, was modeled, designed, and implemented based on run-time management of the ontologies used. The trader therefore manages two kinds of ontologies, data and functionality (or process). The first are related to the ecological information repositories"
"agents, was modeled, designed, and implemented based on run-time management of the ontologies used. The trader therefore manages two kinds of ontologies, data and functionality (or process). The first are related to the ecological information repositories which the trader can access. The second refers to trader functionality, that is, things which it can do and demand from others. In this case, behaviour and interaction protocols must be also defined. These definitions set the operating and interaction rules for agents, governing how the functions that the trader provides and demands to work (behaviour) are used and the order they are called up in (protocols or choreography). With this in mind, certain development details must be explained. Since the work perspective presented here is more focused on the searching process and how the trader was designed based on the ontologies, the explanation concentrates only on the Lookup interface (definition of the rest was similar to the following explanation).Ontologies are written in the OWL notation and formalized as a metamodel using UML class diagrams. We also use graphs to show details of relationships between properties. Throughout the explanation, these notations are used to refer to data or functionality ontology, though all three notations represent the same thing.As mentioned above, the trading service takes part in the search for environmental information based on the QS/RR model. As shown in Figures3(a)and3(b), there are"
"refer to data or functionality ontology, though all three notations represent the same thing.As mentioned above, the trading service takes part in the search for environmental information based on the QS/RR model. As shown in Figures3(a)and3(b), there are two basic sections in the model: (a) the user or user groups who are represented by an agent interface (Figure3(a)) and (b) the trading service which locates the metainformation (Figure3(b)). Regarding which it should be recalled that the SOLERES system stores (as a whole) the environmental information distributed in different OWL repositories on two levels. Some contain environmental metadata (EIM repositories) and other metadata from the first one (EID repositories). The trader manages anEIDrepository.Figure 3(a) QS/RR model viewOpen in figure viewerPowerPointThe web trading agent (b) uses the QS/RR model (a).Figure 3(b) Web trading agent viewOpen in figure viewerPowerPointThe web trading agent (b) uses the QS/RR model (a).The system makes use of ontologies. Specifically, it distinguishes data ontologies, which represent the information in the domain on two levels, and service/process ontologies, which represent the actions that can be performed in the system, the information necessary to perform them, and the results of those actions. In SOLERES, the EIM and EID data ontologies, as well as the Lookup, Register, Admin, and Link service/process ontologies, are described, and they in turn are related to the mediation system"
"necessary to perform them, and the results of those actions. In SOLERES, the EIM and EID data ontologies, as well as the Lookup, Register, Admin, and Link service/process ontologies, are described, and they in turn are related to the mediation system interfaces.Figure4shows a data ontology from an EID repository. For a better understanding, we also show two figures with the ontological relationships of the elements which describe the EID ontology (Figures5and6). Let us recall that the application domain to be modeled is ecological information (a type of environmental information) on cartographic maps and satellite images. Advanced algorithms based on neuronal networks to find correlations between satellite and cartographic information were developed by the SOLERES work team. For the calculation of this correlation, prior treatment of the satellite images and maps is necessary (an image classification,Classification). A cartographic map stores its information in layers (Layer), each of which is identified by a set of variables (Variable). For instance, we are using cartographic maps classified in 4 layers (climatology, lithology, geomorphology, and soils) with over a hundred variables (e.g., scrubland surface, pasture land surface, and average rainfall).Figure 4Open in figure viewerPowerPointOntology of the EID metadata that traders use.Figure 5Open in figure viewerPowerPointClassification is temporal information carried out by technicians.Figure 6Open in figure"
"land surface, and average rainfall).Figure 4Open in figure viewerPowerPointOntology of the EID metadata that traders use.Figure 5Open in figure viewerPowerPointClassification is temporal information carried out by technicians.Figure 6Open in figure viewerPowerPointOntological relationships of a classification.Satellite images work almost the same way. The information is also stored in layers, but here they are called bands. An example of satellite images are the LANDSAT images, which have 7 bands (but no variables are stored in this case). Finally, both the cartographic and satellite classifications have geographic information associated (Classification), which is made at a given time (Time) by a technician or group of technicians (Technician). As a complement and formalization for graphs and metamodel, Table2shows the complete assertions of the eight ontology entities (the assertions may easily be interpreted from Figures4,5, and6).Table  2.Formal EID ontology assertions.NumberEntityAssertionsNumber 1Band(band_id exactly 1) and (band_is_shown_by_satellite_image min 0) and (band_name exactly 1)Number 2Classification(classification_id exactly 1) and ((classification_shows_layer min 1) or (classification_uses_satellite_image min 1)) and (classification_ends_time exactly 1) and (classification_is_made_by_technician min 1) and (classification_name exactly 1) and (classification_shows_geography exactly 1) and (classification_starts_time exactly 1)Number 3Geography(geography_id"
"min 1)) and (classification_ends_time exactly 1) and (classification_is_made_by_technician min 1) and (classification_name exactly 1) and (classification_shows_geography exactly 1) and (classification_starts_time exactly 1)Number 3Geography(geography_id exactly 1) and (geography_is_shown_by_classification min 0) and (geography_locality exactly 1) and (geography_name exactly 1) and (geography_town exactly 1)#4Layer(layer_id exactly 1) and (layer_has_variable min 1) and (layer_is_shown_by_classification exactly 1) and (layer_name exactly 1) and (layer_observations max 1)Number 5Satellite_image(satellite_image_id exactly 1) and (satellite_image_is_used_by_classification min 0) and (satellite_image_shows_band min 1)Number 6Technician(technician_id exactly 1) and (technician_first_name exactly 1) and (technician_last_name exactly 1) and (technician_makes_classification min 0) and (technician_organization max 1)Number 7Time(time_id exactly 1) and (time_day exactly 1) and (time_month exactly 1) and (time_year exactly 1) and (time_is_started_by_classification min 0)Number 8Variable(variable_id exactly 1) and (variable_name exactly 1) and (variable_is_had_by_layer exactly 1)The functionality of our web trading agent [14,36] is divided into three clearly differentiated components (see Figure3): (a) a component that manages the agent-communication mechanism (Communication); (b) a parser that codes and decodes the trading ontology-based messages exchanged (Parser); and (c) trading"
"divided into three clearly differentiated components (see Figure3): (a) a component that manages the agent-communication mechanism (Communication); (b) a parser that codes and decodes the trading ontology-based messages exchanged (Parser); and (c) trading itself (Trader). The third component is inspired by the traditional OMG trading object service specification concepts [12] (see Section2.3). This specification indicates how offers and demands are to be implemented among objects in a distributed environment and proposes grouping all the different functionalities that a trader may include. Although the standard specifies five trader interfaces (i.e., Lookup, Register, Admin, Link, and Proxy), its specification does not demand a trader to implement these five interfaces to work. In fact, we have only developed ontologies for theLookup,Register,Admin,andLinkinterfaces, but none has been implemented for the last one yet. TheLookupinterface offers the search-information in a repository under certain query criteria. TheRegisterinterface enables objects in this repository to be inserted, modified, and deleted. TheAdmininterface can modify the main parameters of the trader configuration, and finally, theLinkinterface makes trading agent federation possible.As previously explained, this paper focuses on identifying and explaining how ontologies appear and intervene in the web trading agent service. Of the interfaces implemented, we only explain here how theLookupinterface works,"
"agent federation possible.As previously explained, this paper focuses on identifying and explaining how ontologies appear and intervene in the web trading agent service. Of the interfaces implemented, we only explain here how theLookupinterface works, because it takes part in the search, which is the primary subject of this paper. Several system agents, depending on their functionality, request these tasks (provided by the interfaces) from the trading agents. For example, a resource agent (belonging to a given EPU) could request the trading agent of the ambient where both are located to register a new EID document by using theRegisterinterface. Under these circumstances, how is this request between agents expressed? In SOLERES, this is done by specifying the service requests as ontologies. The ontologies used to describe services are known as \"process ontologies,\" and they are for three types of entities: concepts, actions, and predicates.In our system, an ontology has been created for each of the four interfaces (services) implemented by the trading agent. The set of all ontologies used for these trading agent services is called the trading ontology. Creation of specific ontologies for specific services allows the agents to use only the ontology that they need at any given time. Figure7shows an example of a service (i.e., interface) ontology expressed in UML notation. In this case, the part of the ontology that defines the Lookup service is specified. This ontology is"
"to use only the ontology that they need at any given time. Figure7shows an example of a service (i.e., interface) ontology expressed in UML notation. In this case, the part of the ontology that defines the Lookup service is specified. This ontology is written in terms of concepts (domain entities), actions carried out in the domain (actions that affect concepts), and predicates (expressions related to concepts). The only action in theLookupservice ontology isquery, which makes the search for EID documents according to specified prerequisites. The concepts identified in the ontology are(i)QueryFormgives the information in the EID document necessary to make the query.(ii)PolicySeqrepresents the set of policies that specify how the search is to be made. These policies may affect the functionality of the trader during the execution time.(iii)OfferSeqrefers to the set of EID documents that meet the query requirements. It therefore represents the result of the service requested.(iv)OfferSeqMachrefers to the matchmaking process result. Results can behardorsoftsolutions. The first one represents an exact solution (i.e., what the user exactly wants) and the second one refers to a partial solution.Figure 7Open in figure viewerPowerPointUML Lookup ontology metamodel.4.3.OntoTrader: Trading ModelsLet us now see how the ontological web trading agent operates in the query process following the QS/RR model, since the query made by the user (or group of users) remains in the user interface"
"Lookup ontology metamodel.4.3.OntoTrader: Trading ModelsLet us now see how the ontological web trading agent operates in the query process following the QS/RR model, since the query made by the user (or group of users) remains in the user interface until the results are retrieved.This model is a trading-based version of the three-level client/server model. It is comprised basically of a series of objects or processes<I,T,D>, each of which intervenes on a different level, depending on the treatment of the query. The implementation of these objects then corresponds to agents. Level 1 (L1) is like the client side. Queries are generated and dealt with by an interface object (I). Level 3 (L3) is the server side. System data (D) reside on this level. In our case, these are the EIM repositories with the environmental information. Level 2 (L2) is the middleware that enables the source information to be located. This is the level where the trader objects (T) operate. In our case, associated with the trader (T), the EID repositories with the source environmental information metadata (EIM) also reside there. All three objects use the Lookup ontology (defined in Figure7) to communicate. As the premise for their functioning, an interface object must be associated with a trader object. However, a trader object can also be associated with one or more outside data sources or resources, in our case, with the environmental source data (which reside in the EPU units, as discussed above). This"
"object must be associated with a trader object. However, a trader object can also be associated with one or more outside data sources or resources, in our case, with the environmental source data (which reside in the EPU units, as discussed above). This \"trader-information source\" association arises from the production of environmental information, where each EPU has an associated trader in which a subset (metadata) of environmental information generated in the EPU is registered. On the other hand, each trader can be associated with one or more traders in federations.In this three-level architecture, three different scenarios or trading models are possible:Trading Reflection,Trading Delegation, andTrading Federation. Figure8shows the three levels (L1, L2, and L3), where the three basic objects (I, T, and D) reside, and the three trading models are permissible inOntoTrader, as described below.(i)TheTrading Reflectionmodel is a model for direct trading on the trader. The query may be solved directly by the trader. The query is generated on the interface and the information can be reached by the metadata that reside in the repository associated with the trader. In this case, the model<I,T>pair intervenes.(ii)TheTrading Delegationmodel trades indirectly with the trader. The query is partly resolved by the trader. A query is generated on the interface level that goes on to the trading level (T). The trader locates the source (or sources) of the source data (D) in its repository,"
"trades indirectly with the trader. The query is partly resolved by the trader. A query is generated on the interface level that goes on to the trading level (T). The trader locates the source (or sources) of the source data (D) in its repository, inferring this information from its metadata repository. Therefore, the trader delegates the query to the outside data source (D). In this case, the object series intervening is<I,T,D>.(iii)Finally, theTrading Federationmodel is a case in which two or more traders are able to federate. As in the cases above, the query remains preset on the interface. This query is passed on to the associated trader. The trader can propagate the query to another federated trader, who locates the external data source (D). In this case, the object series intervening is<I,T,T,D>.Figure 8Open in figure viewerPowerPointThe three trading models ofOntoTrader.4.4.  The Lookup Ontology inOntoTraderThe Lookup ontology is used between system objects. The trader uses theQueryaction and thequery formconcept (see the Lookup ontology, Figure7). TheQuery Formconcept expresses the query in a specific language, whose properties, among others, are anid(a query identifier) and auri(reference to the file where the query is stored). In addition, there could be a set of query policies (Policy) through thePolicy Seqconcept, and each \"policy\" is represented by means of a tuple (name, value). For instance, some of the tuples implemented"
"to the file where the query is stored). In addition, there could be a set of query policies (Policy) through thePolicy Seqconcept, and each \"policy\" is represented by means of a tuple (name, value). For instance, some of the tuples implemented aredef_search_card_Policyormax_search_card_Policy, indicating the number of records to be located by default and the maximum number of records to be located in the query, respectively. Possible exceptions are (Lookup ontology, Figure7).(i)UnknownQueryFormindicates that the query cannot be answered because the file specified in theuriis not accessible.(ii)PolicyTypeMismatchindicates that the type of value specified is not appropriate for thepolicy.(iii)InvalidPolicyValueindicates that thepolicyvalue specified is not within the permissible value range for thatpolicy.(iv)DuplicatePolicyNameindicates that more than one value for thesamepolicyhve been specified in thePolicySeq.(v)QueryErrorindicates that an error has occurred during the query.If there is no exception and the query is successfully executed, either theEmptyOfferSeqpredicate is used when no record is returned by the query or theNotEmptyOfferSeqpredicate, when some record is returned. This, in turn, uses theOfferSeqconcept to represent the set of records located in the query, whose properties are the query \"id\" and the file \"uri\" where the records found are stored.5. Formalization of Ontological Web TradingThis section presents the formalization of ontological views of"
"to represent the set of records located in the query, whose properties are the query \"id\" and the file \"uri\" where the records found are stored.5. Formalization of Ontological Web TradingThis section presents the formalization of ontological views of thequeryandresponseactions for the proposed web trader agent. Both actions are described by means of theLookup ontology (see Figure7). We focus only on the formalization of the Lookup ontology because of its relationship with the QR/RR process.Definition 1 (web trader).A web trader𝒯is determined by two sets𝒯= {𝒪,𝒢}, where𝒪is a set of two types of ontologies (data and functions)𝒪= {𝒪d,𝒪f} and𝒢is a set of scheduling and control agents, where(a)𝒪dis an OWL repository used by the trader,(b)𝒪fis a set of five ontologies:𝒪f= {ℒ,ℰ,𝒟,𝒦,𝒳},whereℒis the ontology of the Lookup interface,ℒ≠∅(mandatory).ℰis the ontology of the Register interface,ℰ≠∅(mandatory).𝒟is the ontology of the Admin interface.𝒦is  the  ontology  of  the  Link  interface.𝒳is the ontology of the Proxy interface.In the framework of SOLERES system, ontological data𝒪dare related to ecological information repositories written in OWL. Ontological functions𝒪frefer to trader functionality. There are at least two ontological functions: (a) the Lookup ontology (ℒ), which models the query made to the trader about information (templates) stored in the trading service, and (b) the Register ontology (ℰ), which models the export (register) of OWL instances in the trader. The three"
"functions: (a) the Lookup ontology (ℒ), which models the query made to the trader about information (templates) stored in the trading service, and (b) the Register ontology (ℰ), which models the export (register) of OWL instances in the trader. The three remaining ontologies are not mandatory in a web trader. The Link ontology (𝒟) models the interconnection of traders (i.e., trading federation). An Admin ontology (𝒦) models the trader configuration (e.g., searching policies, ordering policies, and numbers of federated traders allowed). Finally, a Proxy ontology (𝒳) models thelegacy systemsproperties in a federated trader system.Definition 2 (Lookup ontology).The Lookup interface of a web trader agent is defined as an ontologyconsisting of(a)𝒞, a finite set of concepts:, where(i)ℱis a query formℱ= {id, uri, type, source, target};(ii)𝒴is a policy sequence, for instance: {def_search_cardPolicy, max_search_cardPolicy, exact_type_matchPolicy};(iii)𝒪is an offer sequence𝒪= {id, uri};(iv)is an offer sequence matchℳ= {id, uri}.(b)𝒜, an action𝒜= {𝒬} where𝒬is an input query action.(c)𝒫, a finite set of predicates𝒫= {ℳ}, whereℳis a returned message.(d)ℛ, a relation of request.(e), a relation of response.𝒜represents the set of possible actions (in the Lookup ontology, only a Query,𝒬), whileℱis a concept related to a Query action, which represents the query made.Predicates report any errors in the previous action (UnknownQueryForm,PolicyTypeMismatch,InvalidPolicyValue,DuplicatePolicyName,"
"(in the Lookup ontology, only a Query,𝒬), whileℱis a concept related to a Query action, which represents the query made.Predicates report any errors in the previous action (UnknownQueryForm,PolicyTypeMismatch,InvalidPolicyValue,DuplicatePolicyName, andQueryError) or a successful action; that is, it has been performed satisfactorily (EmptyOfferSeqandNotEmptyOfferSeq).Definition 3 (relation of request).Given a query form conceptℱ, a policy sequence concept𝒴, and a query action𝒬, a relation of request is defined asℛ⊆(ℱ×𝒬)∪(ℱ×𝒬×𝒴).The purpose of the relation of request is to define the relationships that exist between concepts (set𝒞) and actions (set𝒜).Definition 4 (relation of response).Given an input query action𝒬, a returned message predicateℳ, and an offer sequence𝒪, a relation of request is defined as, a relation of response.Finally, there could be relationships between \"Actions\" and \"Concepts,\" between \"Predicates\" and \"Actions,\" or even between the pair \"Predicates\" and \"Concepts.\"Definition 5 (ontology uses).Let us assume a given query𝒬, a messageℳ, an offer sequence𝒪, and an offer sequence match. The uses of the ontology are defined in these three ways:(a) (Q×M) →M=UnknownQueryForm∨PolicyTypeMismatch∨InvalidPolicyValue∨DuplicatePolicyName∨QueryError∨EmptyOfferSeq(b) (Q×M×O) →M=NotEmptyOfferSeq(c).6. Implementation and Experimental ScenariosTo evaluate the proposal, a specific environment was developed for experimentation, which is available at the"
"(Q×M×O) →M=NotEmptyOfferSeq(c).6. Implementation and Experimental ScenariosTo evaluate the proposal, a specific environment was developed for experimentation, which is available at the website:http://tkrs.ual.es/SKRS/. Several differentOntoTradertrading service functionality tests can be carried out in this environment. Behind it, the objects which comprise theOntoTradersystem have been implemented by agents using the JADE platform. Three test cases, one corresponding to each of the three possible scenarios (reflection, delegation, and federation), were prepared. Below we explain some details ofOntoTraderimplementation, the framework of experimentation and testing, and the three case studies implemented.6.1. ImplementationFor design reasons, the three basicOntoTradermodel levels<I,T,D>were implemented by agents. The interface (I) was implemented by two agents: theInterface Agentand theIMI Agent. The trading level (T) was implemented by another two agents:Query AgentandTrading Agent. The data level (D) was implemented by aResource Agent.TheInterface Agentis the agent in charge of receiving the queries from the user over the user interface, transferring them to theIMI Agentfor management and returning the result to the user. TheIMI Agentacts like a hub between the user interface and the rest of the modules and is responsible for managing user demands. TheQuery Agentsare in charge of solving the information queries demanded. TheTrading Agentsenable search and location of the"
"TheIMI Agentacts like a hub between the user interface and the rest of the modules and is responsible for managing user demands. TheQuery Agentsare in charge of solving the information queries demanded. TheTrading Agentsenable search and location of the information in the system and a filter based on the query parameters. Finally, theResource Agentsare responsible for managing the information bases.Figure9shows the multiagent architecture for the Trading-Based Knowledge Representation System design under these premises. As observed in the figure, the information system may be distributed in different nodes, each of which may be comprised of a series of agents according to the configuration desired. As their basic configuration, each node must have at least one set of interface agents (made up of one or more agents), an IMI agent and a set of Query Agents (also made up of one or more agents). A node may also contain zero or more trading agents and resource agents, but the system as a whole must have at least one agent of each type in some of its nodes. Let us further recall that the trading agents have an associated repository (EID), which contains environmental information metadata. The resource agents also have associated repositories with the original data sources containing the environmental information (EIM). The dashed lines in the drawing represent the types of ontologies that intervene in agent communication. There are three basic ontologies in our system: Lookup,"
"repositories with the original data sources containing the environmental information (EIM). The dashed lines in the drawing represent the types of ontologies that intervene in agent communication. There are three basic ontologies in our system: Lookup, Admin, and Link. In this paper, we have only discussed the Lookup ontology as an example of the process ontologies. The other two are outside the scope of this study.Figure 9Open in figure viewerPowerPointThe generalOntoTrader-based architecture.6.2.  Test ScenariosGiven the agent architecture, a multitude of scenarios could be suggested for processing a query made by a user. All the possible scenarios result in a combination of the three main scenarios which we have identified and used to evaluate and validate the proposal.(a)Scenario number 1 (reflection). The user query can be solved directly by a trading agent without the action of any of the resource agents.(b)Scenario number 2 (delegation). The user query cannot be solved directly by a trading agent and requires the action of one or more resource agents.(c)Scenario number 3 (federation). The user query can be solved by a federated trading agent or other trading agents with/without the action of a resource agent.Figure10shows the three basic architectures defined, where the number of agents that intervene in each scenario can be seen. The dashed lines show the order of the calls between agents. The diagram shows the QS/RR model underlying theOntoTradermodel, which was"
"the three basic architectures defined, where the number of agents that intervene in each scenario can be seen. The dashed lines show the order of the calls between agents. The diagram shows the QS/RR model underlying theOntoTradermodel, which was implemented as a prototype for testing and validating the web trader agent implementation. Keep this figure in mind during the description of the three scenarios below.Figure 10Open in figure viewerPowerPointThe three main scenarios (reflection, delegation, and federation).In general, the sequence of the three models is very similar, as follows. The sequence begins when a user writes a query from the user interface. The following section shows how a query from the user interface is constructed. Connected to the interface is an interface agent which is in charge of translating this query into the SPARQL query language. The requests that are sent between agents are constructed based on \"QUERY-REF\" forms in which the query is embedded in SPARQL. The results returned by the agents are constructed using \"INFORM-REF\" forms. We show some of these forms further below. The interface agent transfers the query to the IMI agent which is in charge of deciding which query model to follow (reflection, delegation, and federation) based on the type of data in the query. The IMI agent tells the Query Agent which path to take. The tests for the three scenarios (three paths) are shown below.6.2.1. Scenario Number 1 (Reflection)Figure11shows the"
"(reflection, delegation, and federation) based on the type of data in the query. The IMI agent tells the Query Agent which path to take. The tests for the three scenarios (three paths) are shown below.6.2.1. Scenario Number 1 (Reflection)Figure11shows the sequence diagram for the reflection trading model. This scenario takes place when there is a query with the result that can be directly found from the metadata stored in the trading agent′s repository. An example of a query in this scenario could be \"Find the name of the soil science classification variables for the year 2008.\" As mentioned, we show further below how a query is formed from the user interface (message number 1 in Figure10and sequence number 3 in Figure11). The interface agent translates this query into SPARQL (sequence number 2 in Figure11) and generates aQUERY-REFmessage which it passes on to the IMI agent. The message form is as shown in Algorithm 1.Algorithm 1(01) (QUERY-REF(02)   :sender(agent-identifier:name WIAgent@SOLERES-KRS(03)   :addresses(sequencehttp://...))(04)   :receiver(set(agent-identifier(05)   :nameIMIAgent@SOLERES-KRS))(06)   :content\"PREFIX eid:http://acg.ual.es/soleres/tests/EIDOntology.owl#(07)PREFIX rdf:http://www.w3.org/1999/02/22-rdf-syntax-ns#(08)SELSCT DISTINCT?EID__VariableName(09)WHERE{(10)?EID__EIDeid:EID_eimId?EID__EID_eimID.(11)?EID__EIDeid:EID_hasClassification?EID__Classification.(12)?EID__Classification"
"rdf:http://www.w3.org/1999/02/22-rdf-syntax-ns#(08)SELSCT DISTINCT?EID__VariableName(09)WHERE{(10)?EID__EIDeid:EID_eimId?EID__EID_eimID.(11)?EID__EIDeid:EID_hasClassification?EID__Classification.(12)?EID__Classification eid:Classification_hasLayer?EID__Layer.(13)?EID__Layereid:Layer_hasVariable?EID__Variable.(14)?EID__Variable eid:Variable_name?EID__VariableName.(15)?EID__Classification eid:Classification_hasTime?EID__Time.(16)?EID__Timeeid:Time_year?EID__TimeYear.(17)FILTER(?EID__TimeYear= 2008).(18)     }(19)ORDER BYASC(?EID__VariableName)(20)   :language SPARQL)Figure 11Open in figure viewerPowerPointSequence diagram for Scenario number 1 (reflection).A QUERY-REF form always has four basic clauses: the:senderclause (line number 2), where the name of the agent sending the message is given (in our case in the implementation, the interface agent is calledWIAgent, and it resides in theSOLERES-KRS workspace), the:receiverclause (line number 4) where the name of the agent that receives the message is given (in this caseIMIAgent), and the:contentclause which contains the content of the message. Observe how the query is made in SPARQL in the message content (lines number 7 to number 20). Finally, the:languageclause is where the type of language used to write the message content is given. In this case, it indicates that the content is written in SPARQL.When the IMI agent interprets the query, it detects a query that can be solved directly by the trader (reflection model). The IMI"
"type of language used to write the message content is given. In this case, it indicates that the content is written in SPARQL.When the IMI agent interprets the query, it detects a query that can be solved directly by the trader (reflection model). The IMI analyzes the query sentence and the types of metadata in the trader repository to determine whether the query can be solved directly by the trader. If so, it resends this request to a Query Agent. In the case of the example above (Scenario 1), all the types of data in the query are available in the trader. The message to the Query Agent is as shown in Algorithm 2 (message number 2 in Figure10, sequence number 5 in Figure11).Algorithm 2(01) (QUERY-REF:sender...:receiver...(02)    :content\"<rdf:RDFxmlns:rdf=∖\"http://www.w3.org/1999/02/22-rdf-syntax-ns#∖\"...(03)<owl:Ontology rdf:about=∖\"http://acg.ual.es/soleres/tests/LookupOntology.owl∖\"/>(04)...(05)<QueryFormrdf:about=∖\"http://acg.ual.es/soleres/tests/LookupOntology.owl#QueryFormInstance∖\">(06)<queryStringrdf:datatype=∖\"http://www.w3.org/2001/XMLSchema#string∖\">(07)%here the SPARQL sentence(08)</queryString>(09)</QueryForm>(10)<Query rdf:about=∖\"http://acg.ual.es/soleres/tests/LookupOntology.owl#QyeryInstance∖\"(11)</rdf:RDF>\"(12)    :language\"LookupOntology\"(13)    :ontologyhttp://acg.ual.es/soleres/tests/LookupOntology.owl)Certain parts of the message have been omitted to reduce its length in this paper. The OWL ontology is used to write the content of this message (RDF"
":language\"LookupOntology\"(13)    :ontologyhttp://acg.ual.es/soleres/tests/LookupOntology.owl)Certain parts of the message have been omitted to reduce its length in this paper. The OWL ontology is used to write the content of this message (RDF notation, lines number 2 to number 11). The argument in the:contentclause is a document in RDF. Specifically, the Lookup ontology is used for this type of request between agents. The message makes use of the \"concept/action\" pair in the ontology to formulate the query. Specifically, the conceptQueryForm(lines number 2 to number 11), where the query (generated in SPARQL) and the action to be performed,Query, are specified (line number 10), is used. Observe how the concept and action were defined in the ontology in Figure7. The previous message (Algorithm 2), as in the:languageclause, gives the type of ontology used (line number 12). The new:ontologyclause gives the path where the ontology is found.When the Query Agent receives this message, it infers that this query can be solved directly by the trading agent and generates a newQUERY-REFmessage similar to the one before, again using the Lookup ontology (sequence number 6), and sends it to the trading agent, which launches thesparqlquery to its repository (sequence number 9), obtaining results. These results are returned to the Query Agent, constructing anINFORM-REFform in this case, as shown in Algorithm 3 (message number 4, sequence number 12).Algorithm"
"which launches thesparqlquery to its repository (sequence number 9), obtaining results. These results are returned to the Query Agent, constructing anINFORM-REFform in this case, as shown in Algorithm 3 (message number 4, sequence number 12).Algorithm 3(01)  (INFORM-REF:sender...:receiver...(02)    :content\"<rdf:RDFxmlns:rdf=∖\"http://www.w3.org/1999/02/22-rdf-syntax-ns#∖\" ...(03) <owl:Ontologyrdf:about=∖\"http://acg.ual.es/soleres/tests/LookupOntology.owl∖\"/> ...(04)  <OfferSeq rdf:about=∖\"http://acg.ual.es/soleres/tests/LookupOntology.owl#OfferSeqInstance∖\">(05)<resultString rdf:datatype=∖\"http://www.w3.org/2001/XMLSchema#string∖\">(06)<?xml version = ∖\"1.0∖\"?>(07)<sparql xmlns=∖\"http://www.w3.org/2005/sparql-reslts#∖\"(08)<head>  <variable name=∖\"EID__VariableName∖\"/>  </head>(09)<results>(10)<result>(11)       <binding name=∖\"EID__VariableName∖\">(12)<literal datatype=∖\"http://www.w3.org/2001/XMLSchema#string∖\">C1</literal>(13)     </binding>(14)</result>(15)<result>(16)      <binding name=∖\"EID__VariableName∖\">(17)<literal datatype=∖\"http://www.w3.org/2001/XMLSchema#string∖\">C1L1</literal>(18)      </binding>(19)</result>(20)...(21)</results>(22)  </sparql>(23)  </resutString>(24)  </OfferSeq>(25)  <NotEmptyOfferSeq rdf:about=∖\"http://.../LookupOntology.owl#NotEmptyOfferSeqInstance∖\"/>(26)  <Query"
"rdf:about=∖\"http://.../LookupOntology.owl#NotEmptyOfferSeqInstance∖\"/>(26)  <Query rdf:about=∖\"http://acg.ual.es/soleres/tests/LookupOntology.owl#QueryInstance∖\"/>(27)</rdf:RDF>\"(28):language\"LookupOntology\"(29):ontologyhttp://acg.ual.es/soleres/tests/LookupOntology.owl)The ontology series \"concept/action/predicate\" is used to construct this message. The conceptOfferSeq(lines number 4 to number 24) in the Lookup ontology shows the results found after processing the query. The actionQuery(line number 26) and the predicateNotEmptyOfferSeq(line number 25) show that the query returns a result, all of them in the Lookup ontology. If the query should not return any result, or if there were an error in the message constructed, the predicateEmptyOfferSeqor some predicates in the ontology indicating error would be used instead of the conceptOfferSeq, respectively.Then, when the Query Agent receives the results from the trading agent, it transfers them directly to the IMI agent, constructing a newINFORM-REFform with the headings:senderand:receiver(message number 5, sequence number 14). The IMI agent performs the same operation in turn, constructing its return form for the interface agent (message number 6, sequence number 16), which decodes the message and shows the results on the user interface, thus ending the trading reflection sequence in Scenario number 1.6.2.2. Scenario Number 2(Delegation)Figure12shows the sequence diagram for thedelegation trading model. In this scenario, the"
"decodes the message and shows the results on the user interface, thus ending the trading reflection sequence in Scenario number 1.6.2.2. Scenario Number 2(Delegation)Figure12shows the sequence diagram for thedelegation trading model. In this scenario, the user query cannot be solved directly by a trading agent and requires the action of one or more resource agents to complete it. A possible query that would enter in this scenario could be\"Find the minimum value of variable X used in information layer Y.\"In this case, the result cannot be found directly in the meta-metadata that the trading agent stores in its repository and the metadata in the resource agent must be queried.Figure 12Open in figure viewerPowerPointSequence diagram for Scenario number 2 (delegation).It may be observed that the interface agent, IMI agent, and Query Agent sequence are the same as for reflection (Scenario number 1). In this case, the above query generates the text in SPARQL shown in Algorithm 4, which is transmitted onQUERY-REFforms (for the sake of simplicity, only the SPARQL query is shown) (see Algorithm 4).Algorithm 4(01)PREFIX eid: <http://acg.ual.es/soleres/tests/EIDOntology.owl#>(02)PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>(03)SELECT DISTINCT?EID__EID_eimID?EID__VariableId(04)WHERE{(05)  ?EID__EID_eid:EID_eimId?EID__EID_eimID.(06)  ?EID__EID_eid:EID_hasClassification?EID__Classification.(07)  ?EID__Classification eid:Classification_hasLayer?EID__Layer.(08)  ?EID__Layer"
"DISTINCT?EID__EID_eimID?EID__VariableId(04)WHERE{(05)  ?EID__EID_eid:EID_eimId?EID__EID_eimID.(06)  ?EID__EID_eid:EID_hasClassification?EID__Classification.(07)  ?EID__Classification eid:Classification_hasLayer?EID__Layer.(08)  ?EID__Layer eid:Layer_name?EID__LayerName.(09)  ?EID__Layer eid:Layer_hasVariable?EID__Variable.(10)   ?EID__Variable eid:Variable_id?EID__VariableId.(11)    ?EID__Variableeid:Variable_name?EID__VariableName.(12)FILTER(regex(?EID__LayerName,∖\"Edaphic sectors∖\")).(13)FILTER(regex(?EID__VariableName,∖\"E6∖\")).(14)  }(15)ORDER BY ASC(?EID__EID_eimID)In this example, the variable X remains on the user interface as variable \"E6\" and layer Y is given as \"Edaphic sectors.\" When the form gets to Query Agent (sequence number 5 in Figure12), it infers that the type of query is by delegation and makes asplit(sequence number 6) to prepare a double query. The first is the original query, which continues its course to the trading agent (sequence number 8). After querying its associated EID repository, the trading agent returns a message (Algorithm 5) to the Query (sequence number 13, in the sequence diagram of the Scenario 2 (see Figure12)).Algorithm 5(01) (INFORM-REF:sender...:receiver...:content\"...(02)<OfferSeq...>(03)  <resultString rdf:datatype=∖\"http://www.w3.org/2001/XMLSchema#string∖\">(04)<?xml version = ∖\"1.0∖\"?>(05)<sparql xmlns=∖\"http://www.w3.org/2005/sparql-results#∖\">(06)    <head>(07)     <variable name=∖\"EID__EID_eimID∖\"/>(08)     <variable"
"rdf:datatype=∖\"http://www.w3.org/2001/XMLSchema#string∖\">(04)<?xml version = ∖\"1.0∖\"?>(05)<sparql xmlns=∖\"http://www.w3.org/2005/sparql-results#∖\">(06)    <head>(07)     <variable name=∖\"EID__EID_eimID∖\"/>(08)     <variable name=∖\"EID__variableId∖\"/>(09)    </head>(10)<results>(11)   <result>(12)     <binding name=∖\"EID__EID_eimID∖\"/>(13)<literal datatype=∖\"http://www.w3.org/2001/XMLSchema#string∖\">EIM_0000000003</literal>(15)      </binding>(16)      <binding name=∖\"EID__variableId∖\">(17)       <literal datatype=∖\"http://www.w3.org/2001/XMLSchema#string∖\">VAR_0000000202</literal>(18)      </binding>(19)</result>(20)  </results>(21)  </sparql>(22)</resultString>(23) :language\"LookupOntology\"(24) :ontologyhttp://acg.ual.es/soleres/tests/LookupOntology.owl)This message states that the trader has found variable \"E6\" in its repository in document \"EIM_0000000003\" coded as \"VAR_0000000202\". Notice that \"EIM_0000000003\" is a metadata (i.e., it resides in the trader′s EID repository) of an EIM resource found in a resource agent repository. This message is received by the Query Agent which generates a new message using the Lookup Ontology and applying a filter to the original SPARQL query with the data found in the last query (previous message). Specifically, the results are filtered for those documents that contain the variable called \"VAR_0000000202.\" This message is sent to the resource agent so it can complete the query by applying this filter. The new message (with the filter)"
"message). Specifically, the results are filtered for those documents that contain the variable called \"VAR_0000000202.\" This message is sent to the resource agent so it can complete the query by applying this filter. The new message (with the filter) is as shown in Algorithm 6.Algorithm 6(01) (QUERY-REF:sender...:receiver...:content\"...(02)   <QueryForm rdf:about=∖\"http://acg.ual.es/soleres/tests/LookupOntology.owl#QueryFormInstance∖\">(03)<queryString rdf:datatype=∖\"http://www.w3.org/2001/XMLSchema#string∖\">(04)PREFIX eim: <http://acg.ual.es/soleres/tests/EIMOntology.owl#>(05)PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>(06)SELECT DISTINCT?EIM__VarMin(07)WHERE{(08)?EIM__Var eim:Variable_id?EIM__VarId.(09)?EIM__Var eim:Variable_name?EIM__VariableName.(10)?EIM__Var eim:Variable_minimumValue?EIM__VarMin.(11)FILTER(?EIM__VarId=∖\"VAR_0000000202∖\").(12)}(13)</queryString>(14)</QueryForm>(15)<Qyeryrdf:about=∖\"http://acg.ual.es/soleres/tests/LookupOntology.owl#QueryInstance∖\"/>(16) </rdf:RDF>\"(17) :language\"LookupOntology\"(18) :ontologyhttp:// .../tests/LookupOntology.owl)Finally, the sequence ends by returning the results between agents until arriving at the interface agent, which is in charge of displaying the results on the user interface.6.2.3. Scenario Number 3 (Federation)As mentioned, the federation-based model arises when the system has been configured for the trader to propagate the query to a second federated trader if the query could not be satisfied by the"
"on the user interface.6.2.3. Scenario Number 3 (Federation)As mentioned, the federation-based model arises when the system has been configured for the trader to propagate the query to a second federated trader if the query could not be satisfied by the first. In this model, several different combinations are possible. One situation is that the second trader can satisfy the query directly in what is known as a case of \"reflexive federation,\" that is, a federation model on the first trader and in continuation reflection on the second. Another situation appears when the second trader redirects the query to a data resource (resource agent). For this case, a \"delegated federation\" appears, that is, federation on the first trader and then delegation to the resource. There could also be a case of \"multiple federation\" where the system has been configured for queries to be propagated among federated traders if they cannot be satisfied.Figure13shows the sequence diagram that follows the federation-based trading model. For the sake of simplification, the diagram presents a case of \"reflexive federation.\" The functioning for the rest of the possible combinations is similar.Figure 13Open in figure viewerPowerPointSequence diagram for Scenario number 3 (federation).One possible query in this scenario could be the following:\"Find the identifier of the classifications of city X in which there is information on variable V1 and variable V2.\"From the type of query, the data may be found in"
"Scenario number 3 (federation).One possible query in this scenario could be the following:\"Find the identifier of the classifications of city X in which there is information on variable V1 and variable V2.\"From the type of query, the data may be found in the metadata of a trading repository. For this example, we assume that Variable V1 is a metadatum in the repository of one trader, and Variable 2 is in the repository of another.In the example of the query above, the following sentence is generated in SPARQL. The sequence of theQUERY-REFcalls and their correspondingINFORM-REFamong the system agents is similar to those explained in the scenarios above (see Algorithm 7).Algorithm 7(01)PREFIX rdf: <http:// .../02/22-rdf-syntax-ns#>(02)SELECT DISTINCT?EID__ClassificationId(03)WHERE{(04)  ?EID__EIDeid:EID_eimId?EID__EID_eimID.(05)  ?EID__EIDeid:EID_hasClassification?EID_Classification.(06)  ?EID__Classificationeid:Classification_id?EID__ClassificationId.(07)  ?EID__Classification eid:Classification_hasGeography?EID__Geography.(08)  ?EID__Geography eid:Geography_towns?EID__GeographyTown.(09)  ?EID__Classification eid:Classification_hasLayer?EID__Layer.(10)   ?EID__Layer eid:Layer_hasVariable?EID__Variable.(11)    ?EID__Variable eid:Variable_name?EID__VariableName.(12)   ?EID__Variable eid:Variable_id?EID__VariableId.(13)FILTER(regex(?EID__GeographyTown,∖\"Granada and Almeria∖\")).(14)FILTER(regex(?EID__VariableName,∖\"∧C∖\") ∣∣regex(?EID__VariableName,∖\"∧E∖\")).(15)  }(16)ORDER BY"
"eid:Variable_name?EID__VariableName.(12)   ?EID__Variable eid:Variable_id?EID__VariableId.(13)FILTER(regex(?EID__GeographyTown,∖\"Granada and Almeria∖\")).(14)FILTER(regex(?EID__VariableName,∖\"∧C∖\") ∣∣regex(?EID__VariableName,∖\"∧E∖\")).(15)  }(16)ORDER BY ASC(?EID__ClassificationId)6.3. Experimentation EnvironmentAs mentioned, to evaluate the proposal, a specific experimental prototype was developed for testing. The three scenarios posed in the section above can be put into practice at the test websitehttp://tkrs.ual.es/SKRS/. Figure14shows a portion of the window of this test scenario. This website consists of three basic sections: the \"System Query,\" which contains a series of system capabilities with a basic list of preset queries, the \"Complex Query\" section, where any type of complex query can be constructed, and the \"Graphic\" section, where the information repositories used can be displayed graphically as a tree.Figure 14Open in figure viewerPowerPointA part of theSystem Querywindow in the test environment.The preset queries section, \"System Query,\" is divided in half vertically into two zones (Figure14). On the left, the user has a list of capabilities that represent basic system queries. When one of them is selected, a menu drops down with the parameters that must be entered before it can be executed. In the example in the figure, the user wants to know the names of the classification variables used in the information layer, \"Climate sectors\" in the cities of \"Granada"
"a menu drops down with the parameters that must be entered before it can be executed. In the example in the figure, the user wants to know the names of the classification variables used in the information layer, \"Climate sectors\" in the cities of \"Granada and Almeria\".After executing the query, in the right-hand part of the window, certain information appears which is organized in turn in other three sections. On one hand, the result of the query is shown in XML format (\"Result\" tab). From this zone, it can be checked whether the result returned by the system is well constructed by making use of a standard external (third-party) tool, which does not belong to the system, called \"Pellet.\" Another capability enables the query made to be displayed in SPARQL. In order to validate the implementation, we have included a third capability which makes it possible to trace the messages exchanged by the different system agents. The traces of the messages exchanged among system agents after executing the query above are shown in the \"Trace\" tab (see Figure15). These traces can be folded up or dropped down to facilitate supervision and checking of the messages generated in the query sequence. The figure shows theQUERY-REFmessage, which was generated and transmitted from the interface agent to the IMI agent. It is also possible to observe the SPARQL sentence generated in this message.Figure 15Open in figure viewerPowerPointTrace of messages sent between agents after the query.Any type of"
"was generated and transmitted from the interface agent to the IMI agent. It is also possible to observe the SPARQL sentence generated in this message.Figure 15Open in figure viewerPowerPointTrace of messages sent between agents after the query.Any type of complex system query can be constructed in the section \"Complex Query.\" This section is also divided vertically into two parts (Figure16). On the left, the test repository (on which the complex query will be executed) can be selected. Any EIM or EID repository in the test environment can be selected, or else the URL where the repository is found can be specified. On the right, the query can be constructed from the \"Query\" tab, by selecting the fields and criteria for the query and specifying their values. When constructing the query, the attributes to be selected can be incorporated in either the SELECT or the WHERE part of the query. All the properties selected are incorporated in the SELECT part of the query. When the option marked is related to the WHERE part of the query and one of the attributes in the list on the left has been selected, the option to select one of the operators for filtering the condition to be set appears on the query interface. When the operator has been selected, it is added to the tree on the right where the query is saved and then the value to be checked must be entered for the WHERE clause filter. AdditionalinsertionOf(AND) and/orunionOf(OR) type conditions may also be added. Once the query is"
"been selected, it is added to the tree on the right where the query is saved and then the value to be checked must be entered for the WHERE clause filter. AdditionalinsertionOf(AND) and/orunionOf(OR) type conditions may also be added. Once the query is executed, the result of its execution appears on the \"Result\" sheet, as shown in XML.Figure 16Open in figure viewerPowerPointA portion of theComplex Querywindow in the test environment.The section \"Graphics\" of the website enables graphical display of the information repositories. A basic repository of the system may be displayed, or it is also possible to introduce a URL where an external repository is located. On the right-hand side of the window, an \"applet\" draws its content graphically. This \"applet\" can also make searches for concepts in the data ontology represented.7. Evaluation and Validation:Final ConsiderationsFor the validation of our environmental information system, the starting point is establishing certain \"contracts\" or restrictions to be evaluated in different areas of our framework. Figure17shows a summary of the steps in developing the TKRS (Trading-based Knowledge Representation System). The three main features of the TKRS are trading, software agents, and the ontologies.Figure 17Open in figure viewerPowerPointOntoTraderrestrictions for TKRS validation.Each of these features has a series of restrictions that make it possible for the system implemented to function as desired (validation). In the case of the"
"the ontologies.Figure 17Open in figure viewerPowerPointOntoTraderrestrictions for TKRS validation.Each of these features has a series of restrictions that make it possible for the system implemented to function as desired (validation). In the case of the trading function, a trader was designed and implemented following the standard RM-ODP specification, which enabled us to develop a trading system with the functions we required properly. The ODP trading standard was described in Section2.3.Several different system objects (including the trader) were implemented as software agents using the JADE platform, which enabled us to validate their behavior, as well as their proper functioning. Furthermore, JADE is an implementation framework that complies with the FIPA (FIPA,http://www.fipa.org/) (Foundation for Intelligent Physical Agents) specification. FIPA is an IEEE Computer Society Standards organization that promotes agent-based technology and the interoperability of its standards with other technologies.Besides the trading and software agents mentioned above, the third key feature in the development of the TKRS is the ontologies (see Section4for further details). Their design is assumed to be correct for two reasons: (1) the process ontologies were developed with the JADE specification for messages exchanged by agents and under the trader ODP interface specification and (2) the data ontologies were found from questionnaires filled out by the experts who made the data"
"(1) the process ontologies were developed with the JADE specification for messages exchanged by agents and under the trader ODP interface specification and (2) the data ontologies were found from questionnaires filled out by the experts who made the data classification in the framework of the national project this research a part of [4]. Based on this design premise, it was implemented using the Protege (Protege,http://protege.stanford.edu/) tool, a standard ontologies tool, and with this tool we were able to verify that the implementation of the ontologies is correct.When the TKRS system had been implemented, a series of \"contracts\" or restrictions were placed on data input and output (Figure17). The restrictions on input enabled us to verify that the queries executed in the system are properly constructed queries that can be translated correctly into SPARQL and can be correctly launched in TKRS. These restrictions were made using a query interface which guided us in constructing executable system data queries. This can be checked on the website test environment specially developed for validating and evaluating the proposal:http://tkrs.ual.es/SKRS/.Finally, once the results of the queries have been returned by the TKRS, another feature of the system is in charge of checking that the data obtained are correct. This feature is an external check (Pellet) to which our data ontology and the SPARQL query made are sent as parameters, obtaining as a result the data that must be"
"another feature of the system is in charge of checking that the data obtained are correct. This feature is an external check (Pellet) to which our data ontology and the SPARQL query made are sent as parameters, obtaining as a result the data that must be returned to the query. It also checks the validity of the ontology, warning if there is any type of error in it. TKRS implementation was checked with these five system features (marked in Figure17with a double box), and the functioning of the QS/RR data recovery model proposed was validated.Furthermore, several sample scenarios were developed where the different types of query that can be executed were tested. In addition, a tool with which several evaluation and validation tests, predefined system queries, generic queries on system documents, display of the system document ontologies, and so forth, can be made was developed and is available on the web. The tool has a mechanism for agent messagetraceabilityand can check and validate their functioning and proper implementation. The link to this tool is included in the paper, so anyone can make the pertinent validation and evaluation tests. For the time being, these information retrieval (IR) evaluation techniques only examine whether information retrieval is done correctly and that the data are what was asked for.8. Conclusions and Future WorkModern information systems are increasingly required to provide support for users who are in different places and have different types"
"whether information retrieval is done correctly and that the data are what was asked for.8. Conclusions and Future WorkModern information systems are increasingly required to provide support for users who are in different places and have different types of data, facilitating access to information, decision-making, workgroups, and so forth.Distributed Information Systems(DIS) appear to provide the answer to these new requirements [37]. Web-based Information Systems (WIS) [2], for instance, are developed under open, distributed paradigms. This involves the use of rules and standards for their construction and real time operation, interaction, and interconnection. In this kind of system, interactions are between system \"agents\" (e.g., web components, subsystems, and humans) working in the same ambient (computing space), or even with other third-party \"agents.\" In both cases, the knowledge semantics for managing each part (i.e., software agent in our case) of the system must be formally defined [38].EMIS, a type of WIS, have been under development in the last few years [3]. The EMIS are social and technical systems with a variety of final users and actors (i.e., politicians, technicians, and administrators) who cooperate with each other and interact with the system for decision making, problem solving, and so forth. Today, web-based EMIS greatly facilitate information search and retrieval, favoring user cooperation and decision making. Their design requires the use of"
"with each other and interact with the system for decision making, problem solving, and so forth. Today, web-based EMIS greatly facilitate information search and retrieval, favoring user cooperation and decision making. Their design requires the use of standardized methods and techniques that provide a common vocabulary to represent the knowledge in the system and a capability for mediation to allow interaction (communication, negotiation, coordination, etc.) of its components. Ontologies are able to provide that shared vocabulary, and trading systems can improve the interoperability of open, distributed system components.The present paper showed how traditional traders, properly extended to operate in WIS, are a good solution for information retrieval. An example of web-based EMIS is the SOLERES system, a spatiotemporal environmental management system based on neural networks, agents, and software components [4]. In this paper, we have reviewed the most important EMIS in the literature and have compared them, especially their agent, trader, and ontology features. We have also introduced ontological web trading (OntoTrader), an extension of the traditional OMG trading service to support ontological information retrieval issues on web-based EMIS. The paper also presents three trading models for \"information retrieval\": trading reflection, trading delegation, and trading federation.We have also shown anOntoTradermodel implementation using software agent-based approaches. This"
"on web-based EMIS. The paper also presents three trading models for \"information retrieval\": trading reflection, trading delegation, and trading federation.We have also shown anOntoTradermodel implementation using software agent-based approaches. This kind of web service is a search service based on a \"Query-Searching/Recovering-Response\" web model using the SPARQL query language and theOntoTraderontology description language for information retrieval. This service is based on a user request action that identifies the agents involved and their communication protocols. Ontologies are used in two different contexts: (a) to represent the application domain information itself (data ontology) and (b) the services that some agents request from others during their interaction (process ontology). In this paper, we have described the process and data ontology design features of the Lookup trader interface. All research work presented in this paper was part of the completeOntology-Driven Software  Engineering(ODSE) design strategy we are now developing in SOLERES. Implementation details and a prototype ofOntoTraderare available athttp://tkrs.ual.es/SKRS/.Future work will focus on several open lines of research. On one hand, we are studying the possibility of grouping all ontology management under a single agent (ontology agent). This agent would manage a database with all the ontologies used in the system and would code/decode them. This would considerably simplify the implementation"
"the possibility of grouping all ontology management under a single agent (ontology agent). This agent would manage a database with all the ontologies used in the system and would code/decode them. This would considerably simplify the implementation of other agents and would provide more efficient management. Our work regarding the implementation of SOLERES-HCI (human-computer interaction) is also ongoing. This level of the EMIS is defined by means of the Computer Supported Cooperative Work (CSCW) paradigm [39] and implemented by using an innovative technology of intelligent agents and multiagent architectures. Furthermore, we continue working on this subsystem, which is described throughout the paper, and we are studying how to decompose the user tasks into actions that will have to be performed by the SOLERES-KRS subsystem for retrieval of the information requested and the ontology mapping problems involved.In literature review, there are no approaches with enough similarities to make an empirical comparison between our processes and other existing algorithms. However, we intend to add some experimental comparisons with some isolated parts of other works, in order to highlight the advantages of our proposal. Finally, we would like to study, develop, and incorporate new evaluation and validation techniques, such as measuring the precision of data returned to queries, response time in executing the query, and usability.Conflict of InterestsThe authors declare that they have"
"like to study, develop, and incorporate new evaluation and validation techniques, such as measuring the precision of data returned to queries, response time in executing the query, and usability.Conflict of InterestsThe authors declare that they have no conflict of interests.AcknowledgmentsThis work was funded by the EU ERDF and the Spanish Ministry of Economy and Competitiveness (MINECO) under Project no. TIN2010-15588, the Spanish Ministry of Education, Culture and Sport (MECD) under a FPU Grant no. (AP2010-3259), and the Andalusian Regional Government (Spain) under Project no. P10-TIC-6114.References1Xiao-feng M.,Bao-wen X.,Qing L.,Ge Y.,Jun-yi S.,Zheng-ding L., andYan-xiang H.,A survey of Web information technology and application,Wuhan University Journal of Natural Sciences. (2006)11, no. 1,1-5,https://doi.org/10.1007/BF02831693.10.1007/BF02831693Google Scholar2Taniar D.andRahayu J.,Web Information Systems,2004, IGI Global.10.4018/978-1-59140-208-4Google Scholar3El-Gayar O.andFritz B.,Environmental Management Information Systems (EMIS) for sustainable development: a conceptual overview,Communications of the Association for Information Systems. (2006)17, no. 1.10.17705/1CAIS.01734Google Scholar4ACG/CEG,SOLERES Project: a spatio-temporal environmental management information system based on neural-networks, agents and software components,2010, Applied Computing Group (ACG), University of Almeria,Almeria, Spain,http://www.ual.es/acg/soleres.Google Scholar5Mukherjee"
"a spatio-temporal environmental management information system based on neural-networks, agents and software components,2010, Applied Computing Group (ACG), University of Almeria,Almeria, Spain,http://www.ual.es/acg/soleres.Google Scholar5Mukherjee S.andRamakrishnan I. V.,Automated semantic analysis of schematic data,World Wide Web. (2008)11, no. 4,427-464, 2-s2.0-54249169071,https://doi.org/10.1007/s11280-008-0046-0.10.1007/s11280-008-0046-0Google Scholar6Huang M.,A New Method to formal description of spatial ontology,Information Technology and Environmental System Sciences. (2008)3,417-421.Google Scholar7OMG,Trading object service specication,2001,http://www.omg.org.Google Scholar8Leida M.,Ceravolo P.,Damiani E.,Cui Z., andGusmini A.,Semantics-aware matching strategy (SAMS) for the Ontology meDiated Data Integration (ODDI),International Journal of Knowledge Engineering and Soft Data Paradigms. (2010)2, no. 1,33-56,https://doi.org/10.1504/IJKESDP.2010.030465.10.1504/IJKESDP.2010.030465Google Scholar9Goh D.andFoo S.,Social Information Retrieval Systems: Emerging Technologies and Applications for Searching the Web Effectively,2007, Idea Group Reference.Google Scholar10Gama J.andMay M.,Ubiquitous knowledge discovery,Intelligent Data Analysis. (2011)15, no. 1,1-2, 2-s2.0-79551559522,https://doi.org/10.3233/IDA-2010-0452.10.3233/IDA-2010-0452Web of Science®Google Scholar11Carrillo-Ramos A.,Gensel J.,Villanova-Oliver M., andMartin H.,Adapted information retrieval in web"
"Data Analysis. (2011)15, no. 1,1-2, 2-s2.0-79551559522,https://doi.org/10.3233/IDA-2010-0452.10.3233/IDA-2010-0452Web of Science®Google Scholar11Carrillo-Ramos A.,Gensel J.,Villanova-Oliver M., andMartin H.,Adapted information retrieval in web information systems using PUMAS,Agent-Oriented Information Systems III,2006,3529,Lecture Notes in Computer Science.10.1007/11916291_17Google Scholar12Trader I.,ISO/IEC DIS, 13235-1: IT-Open Distributed Processing-ODP Trading Function-Part 1: Specification, 1996.Google Scholar13Chang C.-H.,Kayed M.,Girgis M. R., andShaalan K. F.,A survey of Web information extraction systems,IEEE Transactions on Knowledge and Data Engineering. (2006)18, no. 10,1411-1428, 2-s2.0-33748336500,https://doi.org/10.1109/TKDE.2006.152.10.1109/TKDE.2006.152Web of Science®Google Scholar14Asensio J. A.,Iribarne L.,Padilla N., andAyala R.,Implementing trading agents for adaptable and evolutive UI-COTS components architectures,Proceedings of the International Conference on e-Business (ICE-B ′08), July 2008, Porto, Portugal,259-262, 2-s2.0-58049157535.Google Scholar15Iribarne L.,Padilla N.,Asensio J. A.,Criado J.,Ayala R.,Almendros J., andMenenti M.,Open-environmental ontology modeling,IEEE Transactions on Systems, Man, and Cybernetics A. (2011)41, no. 4,730-745, 2-s2.0-79959603229,https://doi.org/10.1109/TSMCA.2011.2132706.10.1109/TSMCA.2011.2132706Google Scholar16Padilla N.,Iribarne L.,Asensio J.,Muñoz F., andAyala R.,Modelling an environmental"
"on Systems, Man, and Cybernetics A. (2011)41, no. 4,730-745, 2-s2.0-79959603229,https://doi.org/10.1109/TSMCA.2011.2132706.10.1109/TSMCA.2011.2132706Google Scholar16Padilla N.,Iribarne L.,Asensio J.,Muñoz F., andAyala R.,Modelling an environmental knowledge-representation system,Proceedings of the 1st World Summit on The Knowledge Society: Emerging Technologies and Information Systems for the Knowledge Society, 2008,70-78.Google Scholar17Iribarne L.,Asensio J.,Padilla N., andAyala R.,SOLERES-HCI: modelling a human-computer interaction framework for open EMS,The Open Knowledge Society: A Computer Science and Information Systems Manifesto,2008, Springer,320-327,FirstWorld Summit on the Knowledge Society, Wsks 2008, Athens, Greece, September 24-26, 2008. Proceedings.10.1007/978-3-540-87783-7_41Google Scholar18InfoSleuth,The infosleuth agent system,2005,http://www.argreenhouse.com/InfoSleuth/.Google Scholar19EDEN-IW,Environmental data exchange network for inland water,2001,http://www.edeniw.org.Google Scholar20NZDIS,New zealand distributed information systems project,2001,http://nzdis.otago.ac.nz.Google Scholar21Dance S.,Gorman M.,Padgham L., andWinikoff M.,An evolving multi agent system for meteorological alerts,Proceedings of the 2nd International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS ′03), July 2003, ACM,966-967, 2-s2.0-1142280414.Google Scholar22Wörn H.,Längle T., andAlbert M.,Multi-agent architecture for monitoring and diagnosing complex"
"of the 2nd International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS ′03), July 2003, ACM,966-967, 2-s2.0-1142280414.Google Scholar22Wörn H.,Längle T., andAlbert M.,Multi-agent architecture for monitoring and diagnosing complex systems,Proceedings of the 4th International Workshop on Computer Science and Information Technologies (CSIT ′02), 2002, University of Patras/Greece.Google Scholar23Albert M.,Längle T., andWoern H.,Development tool for distributed monitoring and diagnosis systems,2002, Defense Technical Information Center.Google Scholar24Vögele T.,Hübner S., andSchuster G.,Buster--an information broker for the semantic web,KI-Kunstliche Intelligenz. (2003)3, no. 3,31-34.Google Scholar25Albrecht J.,Derman B., andRamasubramanian L.,Geo-ontology tools: the missing link,Transactions in GIS. (2008)12, no. 4,409-424, 2-s2.0-48649099844,https://doi.org/10.1111/j.1467-9671.2008.01108.x.10.1111/j.1467-9671.2008.01108.xGoogle Scholar26McGuinness D. L.,Fikes R.,Hendler J., andStein L. A.,DAML+OIL: an ontology language for the Semantic Web,IEEE Intelligent Systems. (2002)17, no. 5,72-80, 2-s2.0-0041491441,https://doi.org/10.1109/MIS.2002.1039835.10.1109/MIS.2002.1039835Web of Science®Google Scholar27An Y.andZhao B.,Geo ontology design and comparison in geographic information integration,Proceedings of the 4th International Conference on Fuzzy Systems and Knowledge Discovery (FSKD ′07), August 2007,608-612,"
"of Science®Google Scholar27An Y.andZhao B.,Geo ontology design and comparison in geographic information integration,Proceedings of the 4th International Conference on Fuzzy Systems and Knowledge Discovery (FSKD ′07), August 2007,608-612, 2-s2.0-44049084720,https://doi.org/10.1109/FSKD.2007.344.10.1109/FSKD.2007.344Google Scholar28Ceccaroni L.,Cortes U., andSànchez-Marrè M.,OntoWEDSS: augmenting environmental decision-support systems with ontologies,Environmental Modelling and Software. (2004)19, no. 9,785-797, 2-s2.0-2642529567,https://doi.org/10.1016/j.envsoft.2003.03.006.10.1016/j.envsoft.2003.03.006Web of Science®Google Scholar29Di Lecce V.,Pasquale C., andPiuri V.,A basic ontology for multi agent system communication in an environmental monitoring system,Proceedings of the IEEE International Conference on Computational Intelligence for Measurement Systems and Applications (CIMSA ′04), July 2004,45-50, 2-s2.0-16244415859.Google Scholar30Brilhante V.,An ontology for quantities in ecology,Advances in Artificial Intelligence-SBIA 2004,2004,3171,144-153,Lecture Notes in Computer Science, 2-s2.0-34248137127.10.1007/978-3-540-28645-5_15Google Scholar31Zhan Q.,Li D., andShao Z.,An architecture for ontology-based geographic information semantic Grid service,6754,Geoinformatics 2007: Geospatial Information Technology and Applications, May 2007, Nanjing, China, Proceedings of the SPIE, 2-s2.0-36249009652,https://doi.org/10.1117/12.764926.10.1117/12.764926Google Scholar32Song J.,Zhu"
"semantic Grid service,6754,Geoinformatics 2007: Geospatial Information Technology and Applications, May 2007, Nanjing, China, Proceedings of the SPIE, 2-s2.0-36249009652,https://doi.org/10.1117/12.764926.10.1117/12.764926Google Scholar32Song J.,Zhu Y., andWang J.,A study of semantic retrieval system based on geo-ontology with spatiotemporal characteristic,I-II,Proceedings of the of International Symposium on Distributed Computing and Applications to Business, Engineering and Science (DCABES ′07), 2007,1029-1034.Google Scholar33Shen J.,Krishna A.,Yuan S.,Cai K., andQin Y.,A pragmatic GIS-oriented ontology for location based services,Proceedings of the 19th Australian Software Engineering Conference (ASWEC ′08), March 2008,562-569, 2-s2.0-50249132462,https://doi.org/10.1109/ASWEC.2008.4483246.10.1109/ASWEC.2008.4483246Google Scholar34GML/OCG,Geography markup language,2007, Open Geospatial Consortium,http://www.opengeospatial.org/standards/gml/.Google Scholar35Tripathi A.andBabaie H. A.,Developing a modular hydrogeology ontology by extending the SWEET upper-level ontologies,Computers and Geosciences. (2008)34, no. 9,1022-1033, 2-s2.0-45049085459,https://doi.org/10.1016/j.cageo.2007.08.009.10.1016/j.cageo.2007.08.009Web of Science®Google Scholar36Iribarne L.,Troya J. M., andVallecillo A.,A trading service for COTS components,Computer Journal. (2004)47, no. 3,342-357, 2-s2.0-2442615823.10.1093/comjnl/47.3.342Web of Science®Google Scholar37Mishra D.andMishra A.,A review of"
"of Science®Google Scholar36Iribarne L.,Troya J. M., andVallecillo A.,A trading service for COTS components,Computer Journal. (2004)47, no. 3,342-357, 2-s2.0-2442615823.10.1093/comjnl/47.3.342Web of Science®Google Scholar37Mishra D.andMishra A.,A review of non-technical issues in global software development,International Journal of Computer Applications in Technology. (2011)40, no. 3,216-224, 2-s2.0-79952950203,https://doi.org/10.1504/IJCAT.2011.039142.10.1504/IJCAT.2011.039142Google Scholar38Russ M.andJones J.,Knowledge-based strategies and information system technologies: preliminary findings,International Journal of Knowledge and Learning. (2006)2, no. 1,154-179.10.1504/IJKL.2006.009685Google Scholar39Pendharkar P. C.,The theory and experiments of designing cooperative intelligent systems,Decision Support Systems. (2007)43, no. 3,1014-1030, 2-s2.0-33947495776,https://doi.org/10.1016/j.dss.2005.05.028.10.1016/j.dss.2005.05.028Web of Science®Google ScholarCiting Literature"
"AbstractFuzzy logic applied to the visual inspection of existing buildings has been proposed in relation to simple structures. Isostatic structures are characterized by a unique and known collapse mechanism, which does not vary with geometry or load change. In this paper we apply fuzzy logic to visual inspection for complex structures such as hyperstatic ones in which the collapse mechanism depends not only on the geometry but also on the size and disposition of loads. The goal of this paper is to give relevant weight, in the fuzzy analysis, not only to the single expression of degradation, due to its localization within the element, but also to the structural element itself by assigning a different resistance to the various elements. The underlying aim of the proposed method is to manage, evaluate, and process all the information coming from visual inspections in order to realize a management information system for the evaluation of the safety level of even complex structures.1. IntroductionIn recent years the need for a reliable evaluation of safety for existing buildings has become ever more necessary [1].This request derives both from traumatic events that have caused great impact on the population and also from greater attention paid by public administrations in relation to the recovery of buildings and the need to preserve constructions holding a strategic and functional importance.In order to formulate an objective judgment on the safety level [2,3] of existing"
"attention paid by public administrations in relation to the recovery of buildings and the need to preserve constructions holding a strategic and functional importance.In order to formulate an objective judgment on the safety level [2,3] of existing structures we can identify five operations (not all of them strictly necessary):(i)Historical data collection.(ii)Visual inspection.(iii)In situ (nondestructive) tests.(iv)Lab test (on properly chosen samples).(v)In situ (destructive) tests.Through a comparative critical examination of all the information collected, a diagnosis on the degradation level of the structure under observation can be produced.However, often the only available diagnosis instrument, in order to evaluate the vulnerability of a construction and decide if further damage evaluation with other tools is required, is represented by visual inspections, mainly because of the need to restore safety conditions in a short time.Thus, visual inspections become the ruling practice in the management of maintenance, even when the number and importance of the constructions are significant.The process of evaluation of degradation on the basis of the results of visual inspection is heavily affected by subjectivity. The staff in charge of the inspection write down on a safety assessment card a linguistic statement, which represents the subjective judgment for the degradation under examination. When relying only on visual inspection both the problems of dealing with different"
"in charge of the inspection write down on a safety assessment card a linguistic statement, which represents the subjective judgment for the degradation under examination. When relying only on visual inspection both the problems of dealing with different levels of expertise of the inspectors and the problems of handling subjective information on degradation raise this information, expressed by means of linguistic statements, which needs to be turned into objective and reliable assessments.In order to use visual inspection as a robust and reliable instrument to evaluate the safety level of a construction it was decided to take advantage of the ability of fuzzy logic to treat uncertainty as expressed by linguistic judgments [4,5]. The information undergoes the three steps of fuzzification, inference, and defuzzification [4,6-11].Thanks to the key role played by inference, where the technical knowledge of experts is taken into account, fuzzy logic is then able to output an objective evaluation of the safety level of a construction, based only on visual inspection.This method provides a quick, low cost, and reliable way of assessing the evolution of degradation in a structure [12-15].2. Fuzzy LogicFuzzy logic was introduced in 1965 [4,6-11] as a mathematical theory for dealing with uncertainties expressed using language and is now universally recognized as a highly effective mathematical tool for resolving a wide range of problems characterized with nonprobabilistic uncertainty."
"[4,6-11] as a mathematical theory for dealing with uncertainties expressed using language and is now universally recognized as a highly effective mathematical tool for resolving a wide range of problems characterized with nonprobabilistic uncertainty. Fuzzy logic is innovative: it revolutionizes the classical theory of sets and the semantic concept of truth. We can find a variety of applications in civil engineering [16-20].According to the traditional definition of \"set,\" an element can belong to a set or not. According to the fuzzy set theory an element belongs to a set with a certain degree of membership [4-11].Similarly, in classical logic a statement is evaluated as \"true\" or \"false\" while fuzzy logic assigns a value of partial truth. All this is particularly suitable for those situations where there can be no absolute certainty about a phenomenon. It is useful to specify that such uncertainty can be referred to the judgment of the operator in estimating the phenomenon or to the phenomenon itself.There are three basic steps of a generic fuzzy process: fuzzification, inference, and defuzzification (Figure1).Figure 1Open in figure viewerPowerPointFuzzy-system architecture.The fuzzification procedure consists in transforming the numerical value of the considered variable in its corresponding value of membership to the given fuzzy sets through the corresponding membership function.The membership functions typically overlap so that values of the variable can partially belong"
"the numerical value of the considered variable in its corresponding value of membership to the given fuzzy sets through the corresponding membership function.The membership functions typically overlap so that values of the variable can partially belong to multiple fuzzy sets. The wider the area that overlaps, the more the uncertainty the system includes.The procedure of inference involves the application of the rules of combination of fuzzy sets. Usually these are simple linguistic expressions, which are converted to mathematical formalism in the language of the \"if ... then\" logic. This is important because information gathered through the examination of a given problem can be used without any translation into formulas, which are often of complex determination.The output is also a fuzzy membership value that can be used either \"raw\" as qualitative assessment or defuzzified as a real number, compatible with nonfuzzy approaches [4-11].3. Safety AssessmentThe aim of this research is to determine, through only the process of visual inspection, the probability of failurePfof an existing building in relation to the state of degradation and to the referred limit state [12-15,21].The value of the safety assessment is well specified by Eurocode [22,23] asPf= 10−n, wherePfis the failure probability and the safety exponentncan assume values between 1 and 7.In this study we will refer to the Ultimate Limit State (ULS), which is the limit state associated with collapse or other similar"
"by Eurocode [22,23] asPf= 10−n, wherePfis the failure probability and the safety exponentncan assume values between 1 and 7.In this study we will refer to the Ultimate Limit State (ULS), which is the limit state associated with collapse or other similar forms of structural failure. The safety assessment is positive if(1)This inequality indicates the possibility that the state limit defined above is reached. According to Eurocode the probabilitythat a structure in 50 years will reach the Ultimate Limit State is equal to, and (1) can be rewritten as(2)This value represents the limit valuewhich must not be exceeded byPfof the structure so that the safety assessment is positive.4. Application of Fuzzy Logic to Hyperstatic StructuresFuzzy logic applied to the visual inspection of existing buildings has been proposed in relation to simple structures such as isostatic structures [12-15]. In this research we have taken into account the weight of the event of deterioration in relation to the limit state and the localization of the damage within the structural element [24-27].In this paper we present the results of the application of fuzzy logic to hyperstatic structures.In particular we chose as a case study the one shown in Figures2and3, a frame type with bidimensional spans of reinforced concrete shown in Figure3subject to forms of degradation referable to the ULS [23].Figure 2Open in figure viewerPowerPointPlan view hyperstatic structure.Figure 3Open in figure"
"one shown in Figures2and3, a frame type with bidimensional spans of reinforced concrete shown in Figure3subject to forms of degradation referable to the ULS [23].Figure 2Open in figure viewerPowerPointPlan view hyperstatic structure.Figure 3Open in figure viewerPowerPointHyperstatic structure.The situation is more complex, because the collapse mechanism in hyperstatic structures is not unique and depends not only on the geometry but also on the size and disposition of loads [28-30]. Each structural element has its own weight in relation to the collapsing mechanism.The expression of degradation will therefore depend on the relevance of the structural element in respect to the whole structure.It becomes necessary to assign not only the weight that a single expression of degradation has on safety but also the weight that the structural element has on the structure in its entirety, whether it is the beam or the column. It is essential to assign a different resistance to the various structural elements in order to understand which element might collapse sooner than the others.For this purpose a nonlinear elastic analysis on the two-dimensional structure type (Figure3) was performed with lumped plasticity in accordance with EN 1998-1:2004.The purpose of this study is not to perform a test, but to identify, through the formation of plastic hinges, the sections that reach the yield point and form the collapse mechanism [28]. In fact, if the structure is hyperstatic, that is to say,"
"purpose of this study is not to perform a test, but to identify, through the formation of plastic hinges, the sections that reach the yield point and form the collapse mechanism [28]. In fact, if the structure is hyperstatic, that is to say, equipped with external constraints larger in number than those statically sufficient to ensure balance, the formation of a plastic hinge generally does not produce labilization and for this purpose it is necessary that more hinges are activated or occur in different positions in order to allow a collapse mechanism.The hypothesis of considering the two-dimensional structure is valid, because the building in the chosen example is regular.In order to verify the method, a seismic action was applied to the structure. The seismic action is characterized by the accelerometric horizontal component of the seismic motion. For the calculations, the software DRAIN-2DX (DRAIN-2DX: static and dynamic analysis of inelastic plane structures, software developed at the University of Illinois at Urbana-Champaign and provided by Professor Mark Aschheim; it is a finite element program for the seismic analysis of linear and nonlinear plane frames) was used. This software applies accelerograms of known seismic events such as the one relative to the earthquake which occurred in El Centro, Imperial Valley, California (USA), in 1940 whose diagram, as a function of time, will be shown later (Figure5).4.1. Input DataSee Tables1,2,3, and4.Table  1.Structure"
"seismic events such as the one relative to the earthquake which occurred in El Centro, Imperial Valley, California (USA), in 1940 whose diagram, as a function of time, will be shown later (Figure5).4.1. Input DataSee Tables1,2,3, and4.Table  1.Structure geometry.Length of the spans in thexdirectionlx= 5 mLength of the spans in theydirectionly= 4.5 mFloor heighth= 3 mSlab thicknesshf= 0.26 mTable  2.Section geometry.Columnscs=Cbccolumn width in theydirection30 cmhccolumn height in thexdirection30 cmAcarea of cross sections900 cm2Icymoment of inertia about they-axis67500 cm4Acsis the effective area to cutAcs= 0.83Ac747 cm2Steel reinforcement columns on the ground floor(3 + 3)φ14Steel reinforcement columns on the first floor(2 + 2)φ14Beamscs=Bbwwidth of the web in theydirection30 cmhwis the height of the floor in thexdirection50 cmbfflange width in theydirection186 cmhfheight of the flange in thexdirection26 cmAbcross section area6336 cm2zgdistance of center of gravity from the upper edge22 cmIbymoment of inertia around they-axis2238144 cm4Absis the effective area to cutAbs=bw(hw+hf)1680 cm2Steel reinforcement in the tension zone4φ14Steel reinforcement in the compression zone3φ14Table  3.Variable loads.Intermediate floors:Reference Category C1(subject to crowding)qk= 3 KN/m2Top floor:Reference Category H(H1 accessible for maintenance only)qk= 0.5 KN/m2Table  4.Values loads.FloorsCoverFirst floorDistributed loads (KN/m)Dead weight floor29.2529.25Dead weight beam in"
"floors:Reference Category C1(subject to crowding)qk= 3 KN/m2Top floor:Reference Category H(H1 accessible for maintenance only)qk= 0.5 KN/m2Table  4.Values loads.FloorsCoverFirst floorDistributed loads (KN/m)Dead weight floor29.2529.25Dead weight beam in thexdirection3.753.75Variables1.356.48Total load34.3539.48Point loads (KN) exterior columnsDead weight beam in theydirection16.8716.87Upper column03.37Lower column3.373.37Pe,tot20.2523.61Point loads (KN) interior columnsDead weight beam in theydirection16.8716.87Upper column03.37Lower column3.373.37Pi,tot20.2523.614.2. Ductility ClassThe structure is tested for medium ductility class. Rotations of the columns at foundation level are prevented (joint constraints). The horizontal elements are considered to be infinitely rigid; that is, it is assumed that there are no relative movements between the different points on the same plane. This hypothesis is valid given the nature of the slab, constructed in reinforced concrete.4.3. Numbering of the NodesThe numbers of the nodes inserted in the data input of the program are shown in Figure3.4.4. Loads and MassesTypes of loads applied to the structure are as follows:(i)Permanent loads:(1)gs: weight of the floor;(2)gs=γc·hf= 25 · 0.26 = 6.5 KN/m2;(3)gc: weight columns;(4)gb: weight beams;(5)gf= 1 KN/m2brought permanent coverage;(6)gf= 0.5 KN/m2permanent brought intermediate floors.(ii)Variable loads:(1)qk= 0.5 KN/m2variable coverage;(2)qk= 3 KN/m2variables intermediate floors.4.5. Load"
"= 6.5 KN/m2;(3)gc: weight columns;(4)gb: weight beams;(5)gf= 1 KN/m2brought permanent coverage;(6)gf= 0.5 KN/m2permanent brought intermediate floors.(ii)Variable loads:(1)qk= 0.5 KN/m2variable coverage;(2)qk= 3 KN/m2variables intermediate floors.4.5. Load CombinationsIn order to determine the nodal masses, the following load combination was used:(3)where(i)GkjandQkiare, respectively, the characteristic values of permanent actions and variables;(ii)Φis equal to 1 for the coverage and 0.8 for intermediate floors;ΨEiis a combination coefficient for theith variable action; these coefficients take into account the probability that the loadsQkido not act simultaneously on the entire structure during the earthquake; it assumes the value of 0.6 for the variable actions in a crowding and the value of 0 for the variable action due to wind or snow.For each floor, the following load distribution will be considered:(i)Distributed loads:(1)weight of the floor: 1.0 ·gs·ly= 1.0 · 6.5 · 4.5 = 29.25 KN/m;(2)weight of the beam in thexdirection:γc·bw·hw= 1.0 · 25 · 0.3 · 0.5 = 3.75 KN/m;(3)variable load coverage: 1.0 ·φ· 0.6 ·ly·qk= 1.0 · 1 · 0.6 · 0.5 · 4.5 = 1.35 KN/m;(4)variable load intermediate floors: 1.0 ·φ· 0.6 ·ly·qk= 1.0 · 3 · 0.8 · 0.6 · 4.5 = 6.48 KN/m.(ii)Point loads:(1)weight of the beam in theydirection: 1.0 ·γc·ly·bw·hw= 3.75 · 4.5 = 16.87 KN;(2)weight of the upper column: 1.0 ·γc·bc, sup·hc, sup·h/2;(3)weight of the lower column: 1.0 ·γc·bc, inf·hc, inf·h/2.The values are given"
"· 4.5 = 6.48 KN/m.(ii)Point loads:(1)weight of the beam in theydirection: 1.0 ·γc·ly·bw·hw= 3.75 · 4.5 = 16.87 KN;(2)weight of the upper column: 1.0 ·γc·bc, sup·hc, sup·h/2;(3)weight of the lower column: 1.0 ·γc·bc, inf·hc, inf·h/2.The values are given in Table4.4.6. Nodal LoadsIt is assumed that the beams are fixed at their ends. Therefore the vertical reactions at the supports and the moments are equal to(4)Horizontal loads in the nodes are zero, while the vertical loads are given by the sum of the reactionsRiandPipoint loads indicated in Table4. Regarding theMimoments at the nodes, they must be added (with their signs) in the internal nodes. A scheme for the nodal loads with respect to the first floor is shown in Figure4.Figure 4Open in figure viewerPowerPointNodal loads.Figure 5Open in figure viewerPowerPointAccelerogram El Centro, Imperial Valley, California, in 1940.Nodal load values for each floor are shown in Table5, where the nodes are divided into internal and external.Table  5.Vertical loads.FloorsExternal nodesInternal nodesPe(KN)Re(KN)Pe+Re(KN)Me(KNm)Pi(KN)Ri(KN)Pi+Ri(KN)Mi(KNm)Cover20.2585.87106.1271.5620.25171.751920First floor23.6298.70122.3282.2523.62197.4221.0204.7. Nodal MassesNodal masses are obtained by dividing the vertical loads concentrated at each node by the acceleration of gravity (g= 9.81 m/sec2). So, for example, for the nodes of the first floor (Figure4) we have(5)Based on the convection of signs adopted by the software DRAINDX forces pointing"
"dividing the vertical loads concentrated at each node by the acceleration of gravity (g= 9.81 m/sec2). So, for example, for the nodes of the first floor (Figure4) we have(5)Based on the convection of signs adopted by the software DRAINDX forces pointing downwards are negative, while counterclockwise moments are positive.The values of the nodal masses are given in Table6.Table  6.Nodal masses.FloorsNodeNodal massesm(KN/(cm/sec2))Cover30100.10830200.19630300.108First floor20100.12520200.22520300.1255. Analysis of the Structure with Lumped PlasticityThe results obtained are shown below by applying the accelerogram corresponding to the earthquake which occurred in El Centro, Imperial Valley, California, in 1940 (Figure5).The history of the development of plastic hinges in the structure under examination is shown in Figure6, where the filled circles represent the plastic hinges formed at timet, while the empty circles symbolize the plastic hinges developed earlier. The first plastic hinge takes place in the most stressed section, and, therefore, any further increase of load causes other plastic hinges until the structure becomes a mechanism.Figure 6Open in figure viewerPowerPointDevelopment of plastic hinges.This nonsimultaneous formation of plastic hinges involves significant plastic rotations in the hinges that were formed first, which allow the redistribution of moments between critical sections [28].It can be noted in Figure6that att= 1.3210 sec (earthquake in El Centro) in"
"formation of plastic hinges involves significant plastic rotations in the hinges that were formed first, which allow the redistribution of moments between critical sections [28].It can be noted in Figure6that att= 1.3210 sec (earthquake in El Centro) in the structure a soft floor mechanism has taken place that involves yielding on a large part of the columns of the ground floor, before occurring in the beams. A global fragile mechanism was activated.It is therefore clear how a possible reduction of the section of the lower columns, caused by any type of damage, will further weaken the structure and anticipate collapse.The weight of columns of the ground floor is greater than the weight of the other elements of the structure. We could therefore build a hierarchy of elements following the story of formation of the plastic hinges. The problem is that this type of analysis can be performed only when the construction under inspection is perfectly known in terms of the geometry of the structure and sections and also of the applied loads.At this point, it is necessary to give a priori weights to the different elements of the structure according to the regulations [29,30], which constructions have to observe in order that the more fragile parts of the constructions are, for example, more protected against failure mechanisms.In this way, the weight that each structural element has in a hyperstatic structure may coincide with the optimal mechanism of development of"
"that the more fragile parts of the constructions are, for example, more protected against failure mechanisms.In this way, the weight that each structural element has in a hyperstatic structure may coincide with the optimal mechanism of development of plasticization.Thinking in terms of weight, a greater weight to the columns should be assigned in respect to the beams and, within this differentiation, it is necessary to give greater weight to events related to shear degradation rather than to those related to bending. The remaining problem is therefore to assign to the columns a greater weight than to the beams, also taking into consideration that the columns of the ground floor must have greater weight than those of the first floor.6. Fuzzy Logic Applied to Visual InspectionThe aim of this study is to manipulate through fuzzy logic the subjective linguistic judgments expressed by an inspection staff on the visual signs of degradation in order to assess the current safety level of the inspected construction [12-15,21].The method is consequently divided into two stages: the first consists in the insertion of data obtained by visual inspection on a standard form card (Inspection Card), eventually attaching to it photographs and videos [31]; the second one, carried out by expert staff, involves the implementation of the analysis method by means of software developed by the authors [12-15] and further extended for the case under analysis. The data, collected in the Inspection"
